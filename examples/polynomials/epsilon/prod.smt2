(define-fun epsilon () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 13.1072))
(define-fun const0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(declare-fun a () (_ FloatingPoint 8 24))
(assert (fp.isNormal a))
(declare-fun b () (_ FloatingPoint 8 24))
(assert (fp.isNormal b))
(define-fun arithexp3 () (_ FloatingPoint 8 24) (fp.add RNE a b))
(assert (fp.isNormal arithexp3))
(declare-fun c () (_ FloatingPoint 8 24))
(assert (fp.isNormal c))
(declare-fun d () (_ FloatingPoint 8 24))
(assert (fp.isNormal d))
(define-fun arithexp4 () (_ FloatingPoint 8 24) (fp.add RNE c d))
(assert (fp.isNormal arithexp4))
(define-fun arithexp1 () (_ FloatingPoint 8 24) (fp.mul RNE arithexp3 arithexp4))
(assert (fp.isNormal arithexp1))
(define-fun arithexp9 () (_ FloatingPoint 8 24) (fp.mul RNE a c))
(assert (fp.isNormal arithexp9))
(define-fun arithexp10 () (_ FloatingPoint 8 24) (fp.mul RNE a d))
(assert (fp.isNormal arithexp10))
(define-fun arithexp7 () (_ FloatingPoint 8 24) (fp.add RNE arithexp9 arithexp10))
(assert (fp.isNormal arithexp7))
(define-fun arithexp8 () (_ FloatingPoint 8 24) (fp.mul RNE b c))
(assert (fp.isNormal arithexp8))
(define-fun arithexp5 () (_ FloatingPoint 8 24) (fp.add RNE arithexp7 arithexp8))
(assert (fp.isNormal arithexp5))
(define-fun arithexp6 () (_ FloatingPoint 8 24) (fp.mul RNE b d))
(assert (fp.isNormal arithexp6))
(define-fun arithexp2 () (_ FloatingPoint 8 24) (fp.add RNE arithexp5 arithexp6))
(assert (fp.isNormal arithexp2))
(define-fun arithexp () (_ FloatingPoint 8 24) (fp.sub RNE arithexp1 arithexp2))
(assert (fp.isNormal arithexp))
(define-fun prop () Bool (fp.gt arithexp epsilon))
(define-fun const1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 100.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun prop1 () Bool (fp.geq a const1))
(define-fun const2 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 100.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun prop2 () Bool (fp.leq a const2))
(define-fun propexp2 () Bool (and prop1 prop2))
(define-fun prop3 () Bool (fp.geq b const1))
(define-fun prop4 () Bool (fp.leq b const2))
(define-fun propexp4 () Bool (and prop3 prop4))
(define-fun prop5 () Bool (fp.geq c const1))
(define-fun prop6 () Bool (fp.leq c const2))
(define-fun propexp5 () Bool (and prop5 prop6))
(define-fun propexp3 () Bool (and propexp4 propexp5))
(define-fun propexp1 () Bool (and propexp2 propexp3))
(define-fun propexp () Bool (and prop propexp1))
(assert propexp)
(check-sat)
;(get-model)
(exit)