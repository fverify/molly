
(define-fun const0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.125))

(define-fun const3 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.0625))

(define-fun const4 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 524288.0))

(declare-fun x () (_ FloatingPoint 8 24))
(assert (fp.isNormal x))
(declare-fun y () (_ FloatingPoint 8 24))
(assert (fp.isNormal y))
(declare-fun z () (_ FloatingPoint 8 24))
(assert (fp.isNormal z))
(define-fun arithexp3 () (_ FloatingPoint 8 24) (fp.add RNE y z))
(assert (fp.isNormal arithexp3))
(define-fun arithexp1 () (_ FloatingPoint 8 24) (fp.add RNE x arithexp3))
(assert (fp.isNormal arithexp1))
(define-fun arithexp4 () (_ FloatingPoint 8 24) (fp.add RNE x y))
(assert (fp.isNormal arithexp4))
(define-fun arithexp2 () (_ FloatingPoint 8 24) (fp.add RNE arithexp4 z))
(assert (fp.isNormal arithexp2))
(define-fun arithexp () (_ FloatingPoint 8 24) (fp.sub RNE arithexp1 arithexp2))
(assert (fp.isNormal arithexp))
(define-fun prop () Bool (fp.gt arithexp const0))
(define-fun prop2 () Bool (fp.gt x const3))
(define-fun prop3 () Bool (fp.gt y const3))
(define-fun prop4 () Bool (fp.gt z const3))
(define-fun prop5 () Bool (fp.lt x const4))
(define-fun prop6 () Bool (fp.lt y const4))
(define-fun prop7 () Bool (fp.lt z const4))
(define-fun propexp1 () Bool (and prop2 prop5))
(define-fun propexp2 () Bool (and prop3 prop6))
(define-fun propexp3 () Bool (and prop4 prop7))
(define-fun propexp4 () Bool (and propexp1 propexp2))
(define-fun propexp5 () Bool (and propexp4 propexp3))
;;;;;
(define-fun const1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.0))
(define-fun const2 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 2.0))
(define-fun prop1 () Bool (fp.lt const1 const2))
;;;;;
(define-fun propexp () Bool (and prop propexp5))
(assert propexp)
(check-sat)
(get-model)
(exit)
