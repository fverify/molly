(define-fun const0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000155754375))
(declare-fun z () (_ FloatingPoint 8 24))
(assert (fp.isNormal z))
(declare-fun x () (_ FloatingPoint 8 24))
(assert (fp.isNormal x))
(declare-fun y () (_ FloatingPoint 8 24))
(assert (fp.isNormal y))
(define-fun arithexp3 () (_ FloatingPoint 8 24) (fp.add RNE x y))
(assert (fp.isNormal arithexp3))
(define-fun arithexp1 () (_ FloatingPoint 8 24) (fp.add RNE arithexp3 z))
(assert (fp.isNormal arithexp1))
(define-fun arithexp4 () (_ FloatingPoint 8 24) (fp.add RNE y z))
(assert (fp.isNormal arithexp4))
(define-fun arithexp2 () (_ FloatingPoint 8 24) (fp.add RNE x arithexp4))
(assert (fp.isNormal arithexp2))
(define-fun arithexp () (_ FloatingPoint 8 24) (fp.sub RNE arithexp1 arithexp2))
(assert (fp.isNormal arithexp))
(define-fun prop () Bool (fp.gt arithexp const0))
(define-fun const1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun prop1 () Bool (fp.geq x const1))
(define-fun const2 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1024.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun prop2 () Bool (fp.leq x const2))
(define-fun propexp2 () Bool (and prop1 prop2))
(define-fun prop3 () Bool (fp.geq y const1))
(define-fun prop4 () Bool (fp.leq y const2))
(define-fun propexp4 () Bool (and prop3 prop4))
(define-fun prop5 () Bool (fp.geq z const1))
(define-fun prop6 () Bool (fp.leq z const2))
(define-fun propexp5 () Bool (and prop5 prop6))
(define-fun propexp3 () Bool (and propexp4 propexp5))
(define-fun propexp1 () Bool (and propexp2 propexp3))
(define-fun propexp () Bool (and prop propexp1))
(assert propexp)
(check-sat)
;(get-model)
(exit)
