#!/bin/bash
CFG_FILE="single-prec-modified2.cfg"
LOG_DIR="results/assoc-log-30Apr16/"
#delta="0.0000001"
#cd ../
# save stdout and stderr to file descriptors 3 and 4, then redirect them to "foo"
#exec 3>&1 4>&2 >foo 2>&1
#exec > foo2                                                                   
#exec 2>&1
echo "Start"

exec 2> time-30Apr16-assoc-unrestr.txt
for i in {35..65..5}
#{3..30}
do
  #timeout -s SIGKILL 1200s python2.7 solve.py examples/fml/assoc-$i-$delta.fml examples/$CFG_FILE | tee logs/assoc-$i-$delta.log
  #echo $i"Hello" | tee time.txt
  cat examples/fml/assoc-$i.fml >> time-30Apr16-assoc-unrestr.txt
  time timeout -s SIGKILL 1200s python2.7 solve_rp.py examples/fml/assoc-$i.fml examples/$CFG_FILE lfp > $LOG_DIR/assoc-$i.log
  #echo $CFG_FILE
  #cat examples/fml/assoc-$i.fml | ./bin/translator examples/$CFG_FILE var-list.txt | head -n -2 > $LOG_DIR/assoc-$i-check.smt2; 
  #cat assignments/assoc-$i-check.asn >> $LOG_DIR/assoc-$i-check.smt2
  #echo -e "\n(check-sat)\n" >> $LOG_DIR/assoc-$i-check.smt2
  #asn=`cat assignments/assoc-$i-check.asn`
  #if [ "" == "$asn" ]; then
  #      echo $i " : No satisfying assignment available to check!"
  #	continue
  #fi
  #res=$(z3 -T:600 $LOG_DIR/assoc-$i-check.smt2)
  #if [ "sat" == "$res" ]; then
#	echo $i " : Checked satisfying assignment"
#  else
#	echo $i " : Error in checking satisfying assignment! "$res
#  fi
done  
# restore stdout and stderr
#exec 1>&3 2>&4

#for i in {4..6}
#do
#  echo $i
#done | parallel -j 4 "time timeout -s SIGKILL 1200s python2.7 solve.py examples/fml/assoc-{}.fml examples/$CFG_FILE | tee logs/assoc-{}-even.log"
