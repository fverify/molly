(declare-fun lit_b36 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b36))
(declare-fun lit_b19 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b19))
(declare-fun lit_b33 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b33))
(declare-fun lit_b24 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b24))
(declare-fun lit_b29 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b29))
(declare-fun lit_b10 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b10))
(declare-fun lit_b16 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b16))
(declare-fun lit_b12 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b12))
(declare-fun lit_b26 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b26))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_9 () (_ FloatingPoint 8 24) (fp.add RNE lit_b10 const_0))
(assert (fp.isNormal lit_9))
(define-fun lit_10 () (_ FloatingPoint 8 24) (fp.add RNE lit_b16 const_0))
(assert (fp.isNormal lit_10))
(define-fun lit_11 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_10))
(assert (fp.isNormal lit_11))
(define-fun lit_12 () (_ FloatingPoint 8 24) (fp.add RNE lit_b19 const_0))
(assert (fp.isNormal lit_12))
(define-fun lit_13 () Bool (fp.lt lit_12 lit_11))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.add RNE lit_b12 const_0))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () Bool (fp.leq lit_9 lit_14))
(define-fun lit_16 () Bool (and lit_13 lit_15))
(define-fun lit_17 () (_ FloatingPoint 8 24) (fp.add RNE lit_b26 const_0))
(assert (fp.isNormal lit_17))
(define-fun lit_18 () Bool (fp.leq lit_9 lit_17))
(define-fun lit_19 () Bool (and lit_16 lit_18))
(define-fun lit_20 () (_ FloatingPoint 8 24) (fp.add RNE lit_b29 const_0))
(assert (fp.isNormal lit_20))
(define-fun lit_21 () Bool (fp.leq lit_20 lit_9))
(define-fun lit_22 () Bool (and lit_19 lit_21))
(define-fun lit_23 () (_ FloatingPoint 8 24) (fp.add RNE lit_b24 const_0))
(assert (fp.isNormal lit_23))
(define-fun lit_24 () (_ FloatingPoint 8 24) (fp.add RNE lit_b33 const_0))
(assert (fp.isNormal lit_24))
(define-fun lit_25 () Bool (fp.leq lit_23 lit_24))
(define-fun lit_26 () Bool (and lit_22 lit_25))
(define-fun lit_27 () (_ FloatingPoint 8 24) (fp.add RNE lit_b36 const_0))
(assert (fp.isNormal lit_27))
(define-fun lit_28 () Bool (fp.leq lit_27 lit_23))
(define-fun lit_29 () Bool (and lit_26 lit_28))
(define-fun const_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun const_2 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 2.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun prop_1 () Bool (fp.lt const_1 const_2))
(define-fun propexp () Bool (and lit_29 prop_1))
(assert propexp)
(apply fpa2bv_approx)
(check-sat)
;(get-model)
(exit)