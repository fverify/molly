(declare-fun lit_x0 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x0))
(declare-fun lit_x1 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x1))
(declare-fun lit_x2 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x2))
(declare-fun lit_x3 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x3))
(declare-fun lit_x4 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x4))
(declare-fun lit_x5 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x5))
(declare-fun lit_x6 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x6))
(define-fun lit_10 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 10.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_13 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 10.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.add RNE lit_x0 const_0))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () Bool (fp.leq lit_13 lit_14))
(define-fun lit_16 () Bool (fp.leq lit_14 lit_10))
(define-fun lit_17 () Bool (and lit_15 lit_16))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.add RNE lit_x1 const_0))
(assert (fp.isNormal lit_18))
(define-fun lit_19 () Bool (fp.leq lit_13 lit_18))
(define-fun lit_20 () Bool (fp.leq lit_18 lit_10))
(define-fun lit_21 () Bool (and lit_19 lit_20))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.add RNE lit_x2 const_0))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () Bool (fp.leq lit_13 lit_22))
(define-fun lit_24 () Bool (fp.leq lit_22 lit_10))
(define-fun lit_25 () Bool (and lit_23 lit_24))
(define-fun lit_26 () (_ FloatingPoint 8 24) (fp.add RNE lit_x3 const_0))
(assert (fp.isNormal lit_26))
(define-fun lit_27 () Bool (fp.leq lit_13 lit_26))
(define-fun lit_28 () Bool (fp.leq lit_26 lit_10))
(define-fun lit_29 () Bool (and lit_27 lit_28))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.add RNE lit_x4 const_0))
(assert (fp.isNormal lit_30))
(define-fun lit_31 () Bool (fp.leq lit_13 lit_30))
(define-fun lit_32 () Bool (fp.leq lit_30 lit_10))
(define-fun lit_33 () Bool (and lit_31 lit_32))
(define-fun lit_34 () (_ FloatingPoint 8 24) (fp.add RNE lit_x5 const_0))
(assert (fp.isNormal lit_34))
(define-fun lit_35 () Bool (fp.leq lit_13 lit_34))
(define-fun lit_36 () Bool (fp.leq lit_34 lit_10))
(define-fun lit_37 () Bool (and lit_35 lit_36))
(define-fun lit_38 () (_ FloatingPoint 8 24) (fp.add RNE lit_x6 const_0))
(assert (fp.isNormal lit_38))
(define-fun lit_39 () Bool (fp.leq lit_13 lit_38))
(define-fun lit_40 () Bool (fp.leq lit_38 lit_10))
(define-fun lit_41 () Bool (and lit_39 lit_40))
(define-fun lit_12 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_48 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.927999973297119140625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_50 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.564999997615814208984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_51 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_50))
(assert (fp.isNormal lit_51))
(define-fun lit_52 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_51))
(assert (fp.isNormal lit_52))
(define-fun lit_55 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.570999979972839355468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_56 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_55))
(assert (fp.isNormal lit_56))
(define-fun lit_57 () (_ FloatingPoint 8 24) (fp.add RNE lit_52 lit_56))
(assert (fp.isNormal lit_57))
(define-fun lit_60 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.388000011444091796875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_61 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_60))
(assert (fp.isNormal lit_61))
(define-fun lit_62 () (_ FloatingPoint 8 24) (fp.add RNE lit_57 lit_61))
(assert (fp.isNormal lit_62))
(define-fun lit_64 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.476000010967254638671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_65 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_64))
(assert (fp.isNormal lit_65))
(define-fun lit_66 () (_ FloatingPoint 8 24) (fp.add RNE lit_62 lit_65))
(assert (fp.isNormal lit_66))
(define-fun lit_68 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.596000015735626220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_69 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_68))
(assert (fp.isNormal lit_69))
(define-fun lit_70 () (_ FloatingPoint 8 24) (fp.add RNE lit_66 lit_69))
(assert (fp.isNormal lit_70))
(define-fun lit_72 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.746999979019165039062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_73 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_72))
(assert (fp.isNormal lit_73))
(define-fun lit_74 () (_ FloatingPoint 8 24) (fp.add RNE lit_70 lit_73))
(assert (fp.isNormal lit_74))
(define-fun lit_76 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.052999999374151229858398437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_77 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_76))
(assert (fp.isNormal lit_77))
(define-fun lit_78 () (_ FloatingPoint 8 24) (fp.add RNE lit_74 lit_77))
(assert (fp.isNormal lit_78))
(define-fun lit_79 () Bool (fp.leq lit_48 lit_78))
(define-fun lit_81 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.312000006437301635742187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_84 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.745000004768371582031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_85 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_84))
(assert (fp.isNormal lit_85))
(define-fun lit_86 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_85))
(assert (fp.isNormal lit_86))
(define-fun lit_89 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.156000003218650817871093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_90 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_89))
(assert (fp.isNormal lit_90))
(define-fun lit_91 () (_ FloatingPoint 8 24) (fp.add RNE lit_86 lit_90))
(assert (fp.isNormal lit_91))
(define-fun lit_93 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.670000016689300537109375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_94 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_93))
(assert (fp.isNormal lit_94))
(define-fun lit_95 () (_ FloatingPoint 8 24) (fp.add RNE lit_91 lit_94))
(assert (fp.isNormal lit_95))
(define-fun lit_97 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.469999998807907104492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_98 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_97))
(assert (fp.isNormal lit_98))
(define-fun lit_99 () (_ FloatingPoint 8 24) (fp.add RNE lit_95 lit_98))
(assert (fp.isNormal lit_99))
(define-fun lit_102 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.638999998569488525390625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_103 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_102))
(assert (fp.isNormal lit_103))
(define-fun lit_104 () (_ FloatingPoint 8 24) (fp.add RNE lit_99 lit_103))
(assert (fp.isNormal lit_104))
(define-fun lit_106 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.135000005364418029785156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_107 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_106))
(assert (fp.isNormal lit_107))
(define-fun lit_108 () (_ FloatingPoint 8 24) (fp.add RNE lit_104 lit_107))
(assert (fp.isNormal lit_108))
(define-fun lit_111 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.428000003099441528320312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_112 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_111))
(assert (fp.isNormal lit_112))
(define-fun lit_113 () (_ FloatingPoint 8 24) (fp.add RNE lit_108 lit_112))
(assert (fp.isNormal lit_113))
(define-fun lit_114 () Bool (fp.leq lit_113 lit_81))
(define-fun lit_116 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.310999989509582519531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_119 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.048999998718500137329101562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_120 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_119))
(assert (fp.isNormal lit_120))
(define-fun lit_121 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_120))
(assert (fp.isNormal lit_121))
(define-fun lit_123 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.533999979496002197265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_124 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_123))
(assert (fp.isNormal lit_124))
(define-fun lit_125 () (_ FloatingPoint 8 24) (fp.add RNE lit_121 lit_124))
(assert (fp.isNormal lit_125))
(define-fun lit_128 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.578999996185302734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_129 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_128))
(assert (fp.isNormal lit_129))
(define-fun lit_130 () (_ FloatingPoint 8 24) (fp.add RNE lit_125 lit_129))
(assert (fp.isNormal lit_130))
(define-fun lit_133 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.990999996662139892578125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_134 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_133))
(assert (fp.isNormal lit_134))
(define-fun lit_135 () (_ FloatingPoint 8 24) (fp.add RNE lit_130 lit_134))
(assert (fp.isNormal lit_135))
(define-fun lit_137 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.046000000089406967163085937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_138 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_137))
(assert (fp.isNormal lit_138))
(define-fun lit_139 () (_ FloatingPoint 8 24) (fp.add RNE lit_135 lit_138))
(assert (fp.isNormal lit_139))
(define-fun lit_142 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.061000000685453414916992187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_143 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_142))
(assert (fp.isNormal lit_143))
(define-fun lit_144 () (_ FloatingPoint 8 24) (fp.add RNE lit_139 lit_143))
(assert (fp.isNormal lit_144))
(define-fun lit_146 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.902999997138977050781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_147 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_146))
(assert (fp.isNormal lit_147))
(define-fun lit_148 () (_ FloatingPoint 8 24) (fp.add RNE lit_144 lit_147))
(assert (fp.isNormal lit_148))
(define-fun lit_149 () Bool (fp.leq lit_116 lit_148))
(define-fun lit_151 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.912999987602233886718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_154 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.395999997854232788085937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_155 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_154))
(assert (fp.isNormal lit_155))
(define-fun lit_156 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_155))
(assert (fp.isNormal lit_156))
(define-fun lit_159 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.908999979496002197265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_160 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_159))
(assert (fp.isNormal lit_160))
(define-fun lit_161 () (_ FloatingPoint 8 24) (fp.add RNE lit_156 lit_160))
(assert (fp.isNormal lit_161))
(define-fun lit_164 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.921000003814697265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_165 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_164))
(assert (fp.isNormal lit_165))
(define-fun lit_166 () (_ FloatingPoint 8 24) (fp.add RNE lit_161 lit_165))
(assert (fp.isNormal lit_166))
(define-fun lit_168 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.365000009536743164062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_169 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_168))
(assert (fp.isNormal lit_169))
(define-fun lit_170 () (_ FloatingPoint 8 24) (fp.add RNE lit_166 lit_169))
(assert (fp.isNormal lit_170))
(define-fun lit_172 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.592000007629394531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_173 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_172))
(assert (fp.isNormal lit_173))
(define-fun lit_174 () (_ FloatingPoint 8 24) (fp.add RNE lit_170 lit_173))
(assert (fp.isNormal lit_174))
(define-fun lit_176 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.971000015735626220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_177 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_176))
(assert (fp.isNormal lit_177))
(define-fun lit_178 () (_ FloatingPoint 8 24) (fp.add RNE lit_174 lit_177))
(assert (fp.isNormal lit_178))
(define-fun lit_181 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.093000002205371856689453125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_182 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_181))
(assert (fp.isNormal lit_182))
(define-fun lit_183 () (_ FloatingPoint 8 24) (fp.add RNE lit_178 lit_182))
(assert (fp.isNormal lit_183))
(define-fun lit_184 () Bool (fp.leq lit_151 lit_183))
(define-fun lit_187 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.911000013351440429687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_189 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.657000005245208740234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_190 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_189))
(assert (fp.isNormal lit_190))
(define-fun lit_191 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_190))
(assert (fp.isNormal lit_191))
(define-fun lit_193 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.098999999463558197021484375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_194 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_193))
(assert (fp.isNormal lit_194))
(define-fun lit_195 () (_ FloatingPoint 8 24) (fp.add RNE lit_191 lit_194))
(assert (fp.isNormal lit_195))
(define-fun lit_197 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.823000013828277587890625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_198 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_197))
(assert (fp.isNormal lit_198))
(define-fun lit_199 () (_ FloatingPoint 8 24) (fp.add RNE lit_195 lit_198))
(assert (fp.isNormal lit_199))
(define-fun lit_202 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.967000007629394531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_203 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_202))
(assert (fp.isNormal lit_203))
(define-fun lit_204 () (_ FloatingPoint 8 24) (fp.add RNE lit_199 lit_203))
(assert (fp.isNormal lit_204))
(define-fun lit_206 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.030999999493360519409179687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_207 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_206))
(assert (fp.isNormal lit_207))
(define-fun lit_208 () (_ FloatingPoint 8 24) (fp.add RNE lit_204 lit_207))
(assert (fp.isNormal lit_208))
(define-fun lit_210 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.944999992847442626953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_211 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_210))
(assert (fp.isNormal lit_211))
(define-fun lit_212 () (_ FloatingPoint 8 24) (fp.add RNE lit_208 lit_211))
(assert (fp.isNormal lit_212))
(define-fun lit_214 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.906000018119812011718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_215 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_214))
(assert (fp.isNormal lit_215))
(define-fun lit_216 () (_ FloatingPoint 8 24) (fp.add RNE lit_212 lit_215))
(assert (fp.isNormal lit_216))
(define-fun lit_217 () Bool (fp.leq lit_216 lit_187))
(define-fun lit_220 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.293999999761581420898437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_222 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.263999998569488525390625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_223 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_222))
(assert (fp.isNormal lit_223))
(define-fun lit_224 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_223))
(assert (fp.isNormal lit_224))
(define-fun lit_226 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.999000012874603271484375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_227 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_226))
(assert (fp.isNormal lit_227))
(define-fun lit_228 () (_ FloatingPoint 8 24) (fp.add RNE lit_224 lit_227))
(assert (fp.isNormal lit_228))
(define-fun lit_231 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.679000020027160644531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_232 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_231))
(assert (fp.isNormal lit_232))
(define-fun lit_233 () (_ FloatingPoint 8 24) (fp.add RNE lit_228 lit_232))
(assert (fp.isNormal lit_233))
(define-fun lit_236 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.368999987840652465820312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_237 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_236))
(assert (fp.isNormal lit_237))
(define-fun lit_238 () (_ FloatingPoint 8 24) (fp.add RNE lit_233 lit_237))
(assert (fp.isNormal lit_238))
(define-fun lit_240 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.512000024318695068359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_241 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_240))
(assert (fp.isNormal lit_241))
(define-fun lit_242 () (_ FloatingPoint 8 24) (fp.add RNE lit_238 lit_241))
(assert (fp.isNormal lit_242))
(define-fun lit_244 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.430999994277954101562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_245 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_244))
(assert (fp.isNormal lit_245))
(define-fun lit_246 () (_ FloatingPoint 8 24) (fp.add RNE lit_242 lit_245))
(assert (fp.isNormal lit_246))
(define-fun lit_249 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.094999998807907104492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_250 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_249))
(assert (fp.isNormal lit_250))
(define-fun lit_251 () (_ FloatingPoint 8 24) (fp.add RNE lit_246 lit_250))
(assert (fp.isNormal lit_251))
(define-fun lit_252 () Bool (fp.leq lit_251 lit_220))
(define-fun lit_254 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.034000001847743988037109375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_256 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_257 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_256))
(assert (fp.isNormal lit_257))
(define-fun lit_258 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_257))
(assert (fp.isNormal lit_258))
(define-fun lit_261 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.991999983787536621093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_262 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_261))
(assert (fp.isNormal lit_262))
(define-fun lit_263 () (_ FloatingPoint 8 24) (fp.add RNE lit_258 lit_262))
(assert (fp.isNormal lit_263))
(define-fun lit_266 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.319000005722045898437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_267 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_266))
(assert (fp.isNormal lit_267))
(define-fun lit_268 () (_ FloatingPoint 8 24) (fp.add RNE lit_263 lit_267))
(assert (fp.isNormal lit_268))
(define-fun lit_270 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.639999985694885253906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_271 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_270))
(assert (fp.isNormal lit_271))
(define-fun lit_272 () (_ FloatingPoint 8 24) (fp.add RNE lit_268 lit_271))
(assert (fp.isNormal lit_272))
(define-fun lit_275 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.759999990463256835937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_276 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_275))
(assert (fp.isNormal lit_276))
(define-fun lit_277 () (_ FloatingPoint 8 24) (fp.add RNE lit_272 lit_276))
(assert (fp.isNormal lit_277))
(define-fun lit_280 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.745999991893768310546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_281 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_280))
(assert (fp.isNormal lit_281))
(define-fun lit_282 () (_ FloatingPoint 8 24) (fp.add RNE lit_277 lit_281))
(assert (fp.isNormal lit_282))
(define-fun lit_285 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.174999997019767761230468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_286 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_285))
(assert (fp.isNormal lit_286))
(define-fun lit_287 () (_ FloatingPoint 8 24) (fp.add RNE lit_282 lit_286))
(assert (fp.isNormal lit_287))
(define-fun lit_288 () Bool (fp.leq lit_254 lit_287))
(define-fun lit_290 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.555000007152557373046875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_293 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.683000028133392333984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_294 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_293))
(assert (fp.isNormal lit_294))
(define-fun lit_295 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_294))
(assert (fp.isNormal lit_295))
(define-fun lit_298 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.580999970436096191406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_299 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_298))
(assert (fp.isNormal lit_299))
(define-fun lit_300 () (_ FloatingPoint 8 24) (fp.add RNE lit_295 lit_299))
(assert (fp.isNormal lit_300))
(define-fun lit_303 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.405999988317489624023437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_304 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_303))
(assert (fp.isNormal lit_304))
(define-fun lit_305 () (_ FloatingPoint 8 24) (fp.add RNE lit_300 lit_304))
(assert (fp.isNormal lit_305))
(define-fun lit_308 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.407000005245208740234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_309 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_308))
(assert (fp.isNormal lit_309))
(define-fun lit_310 () (_ FloatingPoint 8 24) (fp.add RNE lit_305 lit_309))
(assert (fp.isNormal lit_310))
(define-fun lit_312 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.499000012874603271484375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_313 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_312))
(assert (fp.isNormal lit_313))
(define-fun lit_314 () (_ FloatingPoint 8 24) (fp.add RNE lit_310 lit_313))
(assert (fp.isNormal lit_314))
(define-fun lit_316 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.168999999761581420898437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_317 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_316))
(assert (fp.isNormal lit_317))
(define-fun lit_318 () (_ FloatingPoint 8 24) (fp.add RNE lit_314 lit_317))
(assert (fp.isNormal lit_318))
(define-fun lit_321 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.338999986648559570312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_322 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_321))
(assert (fp.isNormal lit_322))
(define-fun lit_323 () (_ FloatingPoint 8 24) (fp.add RNE lit_318 lit_322))
(assert (fp.isNormal lit_323))
(define-fun lit_324 () Bool (fp.leq lit_323 lit_290))
(define-fun lit_327 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.819999992847442626953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_329 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.834999978542327880859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_330 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_329))
(assert (fp.isNormal lit_330))
(define-fun lit_331 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_330))
(assert (fp.isNormal lit_331))
(define-fun lit_334 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.006000000052154064178466796875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_335 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_334))
(assert (fp.isNormal lit_335))
(define-fun lit_336 () (_ FloatingPoint 8 24) (fp.add RNE lit_331 lit_335))
(assert (fp.isNormal lit_336))
(define-fun lit_339 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.104000002145767211914062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_340 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_339))
(assert (fp.isNormal lit_340))
(define-fun lit_341 () (_ FloatingPoint 8 24) (fp.add RNE lit_336 lit_340))
(assert (fp.isNormal lit_341))
(define-fun lit_343 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.145999997854232788085937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_344 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_343))
(assert (fp.isNormal lit_344))
(define-fun lit_345 () (_ FloatingPoint 8 24) (fp.add RNE lit_341 lit_344))
(assert (fp.isNormal lit_345))
(define-fun lit_348 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.648000001907348632812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_349 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_348))
(assert (fp.isNormal lit_349))
(define-fun lit_350 () (_ FloatingPoint 8 24) (fp.add RNE lit_345 lit_349))
(assert (fp.isNormal lit_350))
(define-fun lit_352 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.595000028610229492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_353 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_352))
(assert (fp.isNormal lit_353))
(define-fun lit_354 () (_ FloatingPoint 8 24) (fp.add RNE lit_350 lit_353))
(assert (fp.isNormal lit_354))
(define-fun lit_356 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.118000000715255737304687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_357 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_356))
(assert (fp.isNormal lit_357))
(define-fun lit_358 () (_ FloatingPoint 8 24) (fp.add RNE lit_354 lit_357))
(assert (fp.isNormal lit_358))
(define-fun lit_359 () Bool (fp.leq lit_327 lit_358))
(define-fun lit_362 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.564000010490417480468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_364 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.134000003337860107421875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_365 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_364))
(assert (fp.isNormal lit_365))
(define-fun lit_366 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_365))
(assert (fp.isNormal lit_366))
(define-fun lit_369 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.651000022888183593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_370 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_369))
(assert (fp.isNormal lit_370))
(define-fun lit_371 () (_ FloatingPoint 8 24) (fp.add RNE lit_366 lit_370))
(assert (fp.isNormal lit_371))
(define-fun lit_373 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.824000000953674316406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_374 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_373))
(assert (fp.isNormal lit_374))
(define-fun lit_375 () (_ FloatingPoint 8 24) (fp.add RNE lit_371 lit_374))
(assert (fp.isNormal lit_375))
(define-fun lit_377 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.788999974727630615234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_378 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_377))
(assert (fp.isNormal lit_378))
(define-fun lit_379 () (_ FloatingPoint 8 24) (fp.add RNE lit_375 lit_378))
(assert (fp.isNormal lit_379))
(define-fun lit_382 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.843999981880187988281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_383 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_382))
(assert (fp.isNormal lit_383))
(define-fun lit_384 () (_ FloatingPoint 8 24) (fp.add RNE lit_379 lit_383))
(assert (fp.isNormal lit_384))
(define-fun lit_387 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.208000004291534423828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_388 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_387))
(assert (fp.isNormal lit_388))
(define-fun lit_389 () (_ FloatingPoint 8 24) (fp.add RNE lit_384 lit_388))
(assert (fp.isNormal lit_389))
(define-fun lit_391 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.190999999642372131347656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_392 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_391))
(assert (fp.isNormal lit_392))
(define-fun lit_393 () (_ FloatingPoint 8 24) (fp.add RNE lit_389 lit_392))
(assert (fp.isNormal lit_393))
(define-fun lit_394 () Bool (fp.leq lit_362 lit_393))
(define-fun lit_396 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.409999996423721313476562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_398 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.246999993920326232910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_399 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_398))
(assert (fp.isNormal lit_399))
(define-fun lit_400 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_399))
(assert (fp.isNormal lit_400))
(define-fun lit_403 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.453999996185302734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_404 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_403))
(assert (fp.isNormal lit_404))
(define-fun lit_405 () (_ FloatingPoint 8 24) (fp.add RNE lit_400 lit_404))
(assert (fp.isNormal lit_405))
(define-fun lit_408 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.544000029563903808593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_409 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_408))
(assert (fp.isNormal lit_409))
(define-fun lit_410 () (_ FloatingPoint 8 24) (fp.add RNE lit_405 lit_409))
(assert (fp.isNormal lit_410))
(define-fun lit_412 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.483000010251998901367187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_413 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_412))
(assert (fp.isNormal lit_413))
(define-fun lit_414 () (_ FloatingPoint 8 24) (fp.add RNE lit_410 lit_413))
(assert (fp.isNormal lit_414))
(define-fun lit_417 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.439999997615814208984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_418 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_417))
(assert (fp.isNormal lit_418))
(define-fun lit_419 () (_ FloatingPoint 8 24) (fp.add RNE lit_414 lit_418))
(assert (fp.isNormal lit_419))
(define-fun lit_422 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.615000009536743164062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_423 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_422))
(assert (fp.isNormal lit_423))
(define-fun lit_424 () (_ FloatingPoint 8 24) (fp.add RNE lit_419 lit_423))
(assert (fp.isNormal lit_424))
(define-fun lit_426 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.847000002861022949218750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_427 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_426))
(assert (fp.isNormal lit_427))
(define-fun lit_428 () (_ FloatingPoint 8 24) (fp.add RNE lit_424 lit_427))
(assert (fp.isNormal lit_428))
(define-fun lit_429 () Bool (fp.leq lit_428 lit_396))
(define-fun lit_83 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.745000004768371582031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_432 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.216999992728233337402343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_435 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.575999975204467773437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_436 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_435))
(assert (fp.isNormal lit_436))
(define-fun lit_437 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_436))
(assert (fp.isNormal lit_437))
(define-fun lit_439 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.643000006675720214843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_440 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_439))
(assert (fp.isNormal lit_440))
(define-fun lit_441 () (_ FloatingPoint 8 24) (fp.add RNE lit_437 lit_440))
(assert (fp.isNormal lit_441))
(define-fun lit_442 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_83))
(assert (fp.isNormal lit_442))
(define-fun lit_443 () (_ FloatingPoint 8 24) (fp.add RNE lit_441 lit_442))
(assert (fp.isNormal lit_443))
(define-fun lit_446 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.722000002861022949218750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_447 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_446))
(assert (fp.isNormal lit_447))
(define-fun lit_448 () (_ FloatingPoint 8 24) (fp.add RNE lit_443 lit_447))
(assert (fp.isNormal lit_448))
(define-fun lit_451 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.672999978065490722656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_452 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_451))
(assert (fp.isNormal lit_452))
(define-fun lit_453 () (_ FloatingPoint 8 24) (fp.add RNE lit_448 lit_452))
(assert (fp.isNormal lit_453))
(define-fun lit_456 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.995000004768371582031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_457 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_456))
(assert (fp.isNormal lit_457))
(define-fun lit_458 () (_ FloatingPoint 8 24) (fp.add RNE lit_453 lit_457))
(assert (fp.isNormal lit_458))
(define-fun lit_460 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.226999998092651367187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_461 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_460))
(assert (fp.isNormal lit_461))
(define-fun lit_462 () (_ FloatingPoint 8 24) (fp.add RNE lit_458 lit_461))
(assert (fp.isNormal lit_462))
(define-fun lit_463 () Bool (fp.leq lit_462 lit_432))
(define-fun top_level_new0 () Bool (and lit_184 lit_324))
(define-fun top_level_new1 () Bool (and top_level_new0 lit_217))
(define-fun top_level_new2 () Bool (and top_level_new1 lit_41))
(define-fun top_level_new3 () Bool (and top_level_new2 lit_149))
(define-fun top_level_new4 () Bool (and top_level_new3 lit_252))
(define-fun top_level_new5 () Bool (and top_level_new4 lit_288))
(define-fun top_level_new6 () Bool (and top_level_new5 lit_79))
(define-fun top_level_new7 () Bool (and top_level_new6 lit_463))
(define-fun top_level_new8 () Bool (and top_level_new7 lit_37))
(define-fun top_level_new9 () Bool (and top_level_new8 lit_25))
(define-fun top_level_new10 () Bool (and top_level_new9 lit_33))
(define-fun top_level_new11 () Bool (and top_level_new10 lit_21))
(define-fun top_level_new12 () Bool (and top_level_new11 lit_17))
(define-fun top_level_new13 () Bool (and top_level_new12 lit_114))
(define-fun top_level_new14 () Bool (and top_level_new13 lit_359))
(define-fun top_level_new15 () Bool (and top_level_new14 lit_394))
(define-fun top_level_new16 () Bool (and top_level_new15 lit_429))
(define-fun propexp () Bool (and top_level_new16 lit_29))
(assert propexp)
(apply fpa2bv_approx)
(check-sat)
;(get-model)
(exit)