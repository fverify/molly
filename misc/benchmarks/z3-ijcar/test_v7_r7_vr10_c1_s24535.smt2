(declare-fun lit_x0 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x0))
(declare-fun lit_x1 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x1))
(declare-fun lit_x2 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x2))
(declare-fun lit_x3 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x3))
(declare-fun lit_x4 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x4))
(declare-fun lit_x5 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x5))
(declare-fun lit_x6 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x6))
(define-fun lit_10 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 5.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_13 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 5.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.add RNE lit_x0 const_0))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () Bool (fp.leq lit_13 lit_14))
(define-fun lit_16 () Bool (fp.leq lit_14 lit_10))
(define-fun lit_17 () Bool (and lit_15 lit_16))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.add RNE lit_x1 const_0))
(assert (fp.isNormal lit_18))
(define-fun lit_19 () Bool (fp.leq lit_13 lit_18))
(define-fun lit_20 () Bool (fp.leq lit_18 lit_10))
(define-fun lit_21 () Bool (and lit_19 lit_20))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.add RNE lit_x2 const_0))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () Bool (fp.leq lit_13 lit_22))
(define-fun lit_24 () Bool (fp.leq lit_22 lit_10))
(define-fun lit_25 () Bool (and lit_23 lit_24))
(define-fun lit_26 () (_ FloatingPoint 8 24) (fp.add RNE lit_x3 const_0))
(assert (fp.isNormal lit_26))
(define-fun lit_27 () Bool (fp.leq lit_13 lit_26))
(define-fun lit_28 () Bool (fp.leq lit_26 lit_10))
(define-fun lit_29 () Bool (and lit_27 lit_28))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.add RNE lit_x4 const_0))
(assert (fp.isNormal lit_30))
(define-fun lit_31 () Bool (fp.leq lit_13 lit_30))
(define-fun lit_32 () Bool (fp.leq lit_30 lit_10))
(define-fun lit_33 () Bool (and lit_31 lit_32))
(define-fun lit_34 () (_ FloatingPoint 8 24) (fp.add RNE lit_x5 const_0))
(assert (fp.isNormal lit_34))
(define-fun lit_35 () Bool (fp.leq lit_13 lit_34))
(define-fun lit_36 () Bool (fp.leq lit_34 lit_10))
(define-fun lit_37 () Bool (and lit_35 lit_36))
(define-fun lit_38 () (_ FloatingPoint 8 24) (fp.add RNE lit_x6 const_0))
(assert (fp.isNormal lit_38))
(define-fun lit_39 () Bool (fp.leq lit_13 lit_38))
(define-fun lit_40 () Bool (fp.leq lit_38 lit_10))
(define-fun lit_41 () Bool (and lit_39 lit_40))
(define-fun lit_12 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_48 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.231000006198883056640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_50 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.126000002026557922363281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_51 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_50))
(assert (fp.isNormal lit_51))
(define-fun lit_52 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_51))
(assert (fp.isNormal lit_52))
(define-fun lit_54 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.617999970912933349609375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_55 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_54))
(assert (fp.isNormal lit_55))
(define-fun lit_56 () (_ FloatingPoint 8 24) (fp.add RNE lit_52 lit_55))
(assert (fp.isNormal lit_56))
(define-fun lit_58 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.240999996662139892578125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_59 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_58))
(assert (fp.isNormal lit_59))
(define-fun lit_60 () (_ FloatingPoint 8 24) (fp.add RNE lit_56 lit_59))
(assert (fp.isNormal lit_60))
(define-fun lit_62 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.245000004768371582031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_63 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_62))
(assert (fp.isNormal lit_63))
(define-fun lit_64 () (_ FloatingPoint 8 24) (fp.add RNE lit_60 lit_63))
(assert (fp.isNormal lit_64))
(define-fun lit_66 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.361999988555908203125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_67 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_66))
(assert (fp.isNormal lit_67))
(define-fun lit_68 () (_ FloatingPoint 8 24) (fp.add RNE lit_64 lit_67))
(assert (fp.isNormal lit_68))
(define-fun lit_71 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.143000006675720214843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_72 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_71))
(assert (fp.isNormal lit_72))
(define-fun lit_73 () (_ FloatingPoint 8 24) (fp.add RNE lit_68 lit_72))
(assert (fp.isNormal lit_73))
(define-fun lit_76 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.555000007152557373046875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_77 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_76))
(assert (fp.isNormal lit_77))
(define-fun lit_78 () (_ FloatingPoint 8 24) (fp.add RNE lit_73 lit_77))
(assert (fp.isNormal lit_78))
(define-fun lit_79 () Bool (fp.leq lit_48 lit_78))
(define-fun lit_81 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.326000005006790161132812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_83 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.771000027656555175781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_84 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_83))
(assert (fp.isNormal lit_84))
(define-fun lit_85 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_84))
(assert (fp.isNormal lit_85))
(define-fun lit_88 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.675000011920928955078125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_89 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_88))
(assert (fp.isNormal lit_89))
(define-fun lit_90 () (_ FloatingPoint 8 24) (fp.add RNE lit_85 lit_89))
(assert (fp.isNormal lit_90))
(define-fun lit_93 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.379999995231628417968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_94 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_93))
(assert (fp.isNormal lit_94))
(define-fun lit_95 () (_ FloatingPoint 8 24) (fp.add RNE lit_90 lit_94))
(assert (fp.isNormal lit_95))
(define-fun lit_97 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.108000002801418304443359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_98 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_97))
(assert (fp.isNormal lit_98))
(define-fun lit_99 () (_ FloatingPoint 8 24) (fp.add RNE lit_95 lit_98))
(assert (fp.isNormal lit_99))
(define-fun lit_101 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.370000004768371582031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_102 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_101))
(assert (fp.isNormal lit_102))
(define-fun lit_103 () (_ FloatingPoint 8 24) (fp.add RNE lit_99 lit_102))
(assert (fp.isNormal lit_103))
(define-fun lit_106 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.234999999403953552246093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_107 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_106))
(assert (fp.isNormal lit_107))
(define-fun lit_108 () (_ FloatingPoint 8 24) (fp.add RNE lit_103 lit_107))
(assert (fp.isNormal lit_108))
(define-fun lit_109 () (_ FloatingPoint 8 24) (fp.mul RNE lit_12 lit_38))
(assert (fp.isNormal lit_109))
(define-fun lit_110 () (_ FloatingPoint 8 24) (fp.add RNE lit_108 lit_109))
(assert (fp.isNormal lit_110))
(define-fun lit_111 () Bool (fp.leq lit_110 lit_81))
(define-fun lit_105 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.234999999403953552246093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_114 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.565999984741210937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_116 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.782000005245208740234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_117 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_116))
(assert (fp.isNormal lit_117))
(define-fun lit_118 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_117))
(assert (fp.isNormal lit_118))
(define-fun lit_120 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.512000024318695068359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_121 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_120))
(assert (fp.isNormal lit_121))
(define-fun lit_122 () (_ FloatingPoint 8 24) (fp.add RNE lit_118 lit_121))
(assert (fp.isNormal lit_122))
(define-fun lit_124 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.156000003218650817871093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_125 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_124))
(assert (fp.isNormal lit_125))
(define-fun lit_126 () (_ FloatingPoint 8 24) (fp.add RNE lit_122 lit_125))
(assert (fp.isNormal lit_126))
(define-fun lit_129 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.282000005245208740234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_130 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_129))
(assert (fp.isNormal lit_130))
(define-fun lit_131 () (_ FloatingPoint 8 24) (fp.add RNE lit_126 lit_130))
(assert (fp.isNormal lit_131))
(define-fun lit_133 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.451000005006790161132812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_134 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_133))
(assert (fp.isNormal lit_134))
(define-fun lit_135 () (_ FloatingPoint 8 24) (fp.add RNE lit_131 lit_134))
(assert (fp.isNormal lit_135))
(define-fun lit_137 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.050999999046325683593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_138 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_137))
(assert (fp.isNormal lit_138))
(define-fun lit_139 () (_ FloatingPoint 8 24) (fp.add RNE lit_135 lit_138))
(assert (fp.isNormal lit_139))
(define-fun lit_140 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_105))
(assert (fp.isNormal lit_140))
(define-fun lit_141 () (_ FloatingPoint 8 24) (fp.add RNE lit_139 lit_140))
(assert (fp.isNormal lit_141))
(define-fun lit_142 () Bool (fp.leq lit_114 lit_141))
(define-fun lit_144 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.056000001728534698486328125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_145 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.056000001728534698486328125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_148 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.398000001907348632812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_149 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_148))
(assert (fp.isNormal lit_149))
(define-fun lit_150 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_149))
(assert (fp.isNormal lit_150))
(define-fun lit_153 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.449000000953674316406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_154 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_153))
(assert (fp.isNormal lit_154))
(define-fun lit_155 () (_ FloatingPoint 8 24) (fp.add RNE lit_150 lit_154))
(assert (fp.isNormal lit_155))
(define-fun lit_157 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.087999999523162841796875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_158 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_157))
(assert (fp.isNormal lit_158))
(define-fun lit_159 () (_ FloatingPoint 8 24) (fp.add RNE lit_155 lit_158))
(assert (fp.isNormal lit_159))
(define-fun lit_160 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_144))
(assert (fp.isNormal lit_160))
(define-fun lit_161 () (_ FloatingPoint 8 24) (fp.add RNE lit_159 lit_160))
(assert (fp.isNormal lit_161))
(define-fun lit_163 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.462000012397766113281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_164 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_163))
(assert (fp.isNormal lit_164))
(define-fun lit_165 () (_ FloatingPoint 8 24) (fp.add RNE lit_161 lit_164))
(assert (fp.isNormal lit_165))
(define-fun lit_168 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.370999991893768310546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_169 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_168))
(assert (fp.isNormal lit_169))
(define-fun lit_170 () (_ FloatingPoint 8 24) (fp.add RNE lit_165 lit_169))
(assert (fp.isNormal lit_170))
(define-fun lit_172 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.750999987125396728515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_173 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_172))
(assert (fp.isNormal lit_173))
(define-fun lit_174 () (_ FloatingPoint 8 24) (fp.add RNE lit_170 lit_173))
(assert (fp.isNormal lit_174))
(define-fun lit_175 () Bool (fp.leq lit_145 lit_174))
(define-fun lit_147 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.398000001907348632812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_177 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.820999979972839355468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_180 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.961000025272369384765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_181 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_180))
(assert (fp.isNormal lit_181))
(define-fun lit_182 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_181))
(assert (fp.isNormal lit_182))
(define-fun lit_185 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.335000008344650268554687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_186 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_185))
(assert (fp.isNormal lit_186))
(define-fun lit_187 () (_ FloatingPoint 8 24) (fp.add RNE lit_182 lit_186))
(assert (fp.isNormal lit_187))
(define-fun lit_188 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_147))
(assert (fp.isNormal lit_188))
(define-fun lit_189 () (_ FloatingPoint 8 24) (fp.add RNE lit_187 lit_188))
(assert (fp.isNormal lit_189))
(define-fun lit_192 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.824000000953674316406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_193 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_192))
(assert (fp.isNormal lit_193))
(define-fun lit_194 () (_ FloatingPoint 8 24) (fp.add RNE lit_189 lit_193))
(assert (fp.isNormal lit_194))
(define-fun lit_197 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.720000028610229492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_198 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_197))
(assert (fp.isNormal lit_198))
(define-fun lit_199 () (_ FloatingPoint 8 24) (fp.add RNE lit_194 lit_198))
(assert (fp.isNormal lit_199))
(define-fun lit_202 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.875999987125396728515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_203 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_202))
(assert (fp.isNormal lit_203))
(define-fun lit_204 () (_ FloatingPoint 8 24) (fp.add RNE lit_199 lit_203))
(assert (fp.isNormal lit_204))
(define-fun lit_207 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.059999998658895492553710937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_208 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_207))
(assert (fp.isNormal lit_208))
(define-fun lit_209 () (_ FloatingPoint 8 24) (fp.add RNE lit_204 lit_208))
(assert (fp.isNormal lit_209))
(define-fun lit_210 () Bool (fp.leq lit_209 lit_177))
(define-fun lit_213 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.490000009536743164062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_215 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.247999995946884155273437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_216 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_215))
(assert (fp.isNormal lit_216))
(define-fun lit_217 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_216))
(assert (fp.isNormal lit_217))
(define-fun lit_220 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.904999971389770507812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_221 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_220))
(assert (fp.isNormal lit_221))
(define-fun lit_222 () (_ FloatingPoint 8 24) (fp.add RNE lit_217 lit_221))
(assert (fp.isNormal lit_222))
(define-fun lit_224 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.046000000089406967163085937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_225 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_224))
(assert (fp.isNormal lit_225))
(define-fun lit_226 () (_ FloatingPoint 8 24) (fp.add RNE lit_222 lit_225))
(assert (fp.isNormal lit_226))
(define-fun lit_227 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.247999995946884155273437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_228 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_227))
(assert (fp.isNormal lit_228))
(define-fun lit_229 () (_ FloatingPoint 8 24) (fp.add RNE lit_226 lit_228))
(assert (fp.isNormal lit_229))
(define-fun lit_230 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_168))
(assert (fp.isNormal lit_230))
(define-fun lit_231 () (_ FloatingPoint 8 24) (fp.add RNE lit_229 lit_230))
(assert (fp.isNormal lit_231))
(define-fun lit_234 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.100000001490116119384765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_235 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_234))
(assert (fp.isNormal lit_235))
(define-fun lit_236 () (_ FloatingPoint 8 24) (fp.add RNE lit_231 lit_235))
(assert (fp.isNormal lit_236))
(define-fun lit_239 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.814000010490417480468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_240 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_239))
(assert (fp.isNormal lit_240))
(define-fun lit_241 () (_ FloatingPoint 8 24) (fp.add RNE lit_236 lit_240))
(assert (fp.isNormal lit_241))
(define-fun lit_242 () Bool (fp.leq lit_241 lit_213))
(define-fun lit_245 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.432000011205673217773437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_247 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.174999997019767761230468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_248 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_247))
(assert (fp.isNormal lit_248))
(define-fun lit_249 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_248))
(assert (fp.isNormal lit_249))
(define-fun lit_252 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.333999991416931152343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_253 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_252))
(assert (fp.isNormal lit_253))
(define-fun lit_254 () (_ FloatingPoint 8 24) (fp.add RNE lit_249 lit_253))
(assert (fp.isNormal lit_254))
(define-fun lit_256 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.949000000953674316406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_257 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_256))
(assert (fp.isNormal lit_257))
(define-fun lit_258 () (_ FloatingPoint 8 24) (fp.add RNE lit_254 lit_257))
(assert (fp.isNormal lit_258))
(define-fun lit_261 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.538999974727630615234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_262 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_261))
(assert (fp.isNormal lit_262))
(define-fun lit_263 () (_ FloatingPoint 8 24) (fp.add RNE lit_258 lit_262))
(assert (fp.isNormal lit_263))
(define-fun lit_265 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.867999970912933349609375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_266 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_265))
(assert (fp.isNormal lit_266))
(define-fun lit_267 () (_ FloatingPoint 8 24) (fp.add RNE lit_263 lit_266))
(assert (fp.isNormal lit_267))
(define-fun lit_269 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.093000002205371856689453125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_270 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_269))
(assert (fp.isNormal lit_270))
(define-fun lit_271 () (_ FloatingPoint 8 24) (fp.add RNE lit_267 lit_270))
(assert (fp.isNormal lit_271))
(define-fun lit_274 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.885999977588653564453125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_275 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_274))
(assert (fp.isNormal lit_275))
(define-fun lit_276 () (_ FloatingPoint 8 24) (fp.add RNE lit_271 lit_275))
(assert (fp.isNormal lit_276))
(define-fun lit_277 () Bool (fp.leq lit_276 lit_245))
(define-fun lit_280 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.722000002861022949218750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_282 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.967000007629394531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_283 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_282))
(assert (fp.isNormal lit_283))
(define-fun lit_284 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_283))
(assert (fp.isNormal lit_284))
(define-fun lit_286 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.474999994039535522460937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_287 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_286))
(assert (fp.isNormal lit_287))
(define-fun lit_288 () (_ FloatingPoint 8 24) (fp.add RNE lit_284 lit_287))
(assert (fp.isNormal lit_288))
(define-fun lit_291 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.244000002741813659667968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_292 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_291))
(assert (fp.isNormal lit_292))
(define-fun lit_293 () (_ FloatingPoint 8 24) (fp.add RNE lit_288 lit_292))
(assert (fp.isNormal lit_293))
(define-fun lit_296 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.693000018596649169921875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_297 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_296))
(assert (fp.isNormal lit_297))
(define-fun lit_298 () (_ FloatingPoint 8 24) (fp.add RNE lit_293 lit_297))
(assert (fp.isNormal lit_298))
(define-fun lit_300 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.204999998211860656738281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_301 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_300))
(assert (fp.isNormal lit_301))
(define-fun lit_302 () (_ FloatingPoint 8 24) (fp.add RNE lit_298 lit_301))
(assert (fp.isNormal lit_302))
(define-fun lit_304 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.298000007867813110351562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_305 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_304))
(assert (fp.isNormal lit_305))
(define-fun lit_306 () (_ FloatingPoint 8 24) (fp.add RNE lit_302 lit_305))
(assert (fp.isNormal lit_306))
(define-fun lit_308 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.583000004291534423828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_309 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_308))
(assert (fp.isNormal lit_309))
(define-fun lit_310 () (_ FloatingPoint 8 24) (fp.add RNE lit_306 lit_309))
(assert (fp.isNormal lit_310))
(define-fun lit_311 () Bool (fp.leq lit_280 lit_310))
(define-fun lit_196 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.720000028610229492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_313 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.778999984264373779296875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_316 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.958000004291534423828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_317 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_316))
(assert (fp.isNormal lit_317))
(define-fun lit_318 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_317))
(assert (fp.isNormal lit_318))
(define-fun lit_320 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.386000007390975952148437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_321 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_320))
(assert (fp.isNormal lit_321))
(define-fun lit_322 () (_ FloatingPoint 8 24) (fp.add RNE lit_318 lit_321))
(assert (fp.isNormal lit_322))
(define-fun lit_323 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_106))
(assert (fp.isNormal lit_323))
(define-fun lit_324 () (_ FloatingPoint 8 24) (fp.add RNE lit_322 lit_323))
(assert (fp.isNormal lit_324))
(define-fun lit_325 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.474999994039535522460937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_326 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_325))
(assert (fp.isNormal lit_326))
(define-fun lit_327 () (_ FloatingPoint 8 24) (fp.add RNE lit_324 lit_326))
(assert (fp.isNormal lit_327))
(define-fun lit_328 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_196))
(assert (fp.isNormal lit_328))
(define-fun lit_329 () (_ FloatingPoint 8 24) (fp.add RNE lit_327 lit_328))
(assert (fp.isNormal lit_329))
(define-fun lit_332 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.880999982357025146484375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_333 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_332))
(assert (fp.isNormal lit_333))
(define-fun lit_334 () (_ FloatingPoint 8 24) (fp.add RNE lit_329 lit_333))
(assert (fp.isNormal lit_334))
(define-fun lit_337 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.104000002145767211914062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_338 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_337))
(assert (fp.isNormal lit_338))
(define-fun lit_339 () (_ FloatingPoint 8 24) (fp.add RNE lit_334 lit_338))
(assert (fp.isNormal lit_339))
(define-fun lit_340 () Bool (fp.leq lit_313 lit_339))
(define-fun lit_47 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.231000006198883056640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_343 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.233999997377395629882812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_345 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.795000016689300537109375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_346 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_345))
(assert (fp.isNormal lit_346))
(define-fun lit_347 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_346))
(assert (fp.isNormal lit_347))
(define-fun lit_350 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.709999978542327880859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_351 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_350))
(assert (fp.isNormal lit_351))
(define-fun lit_352 () (_ FloatingPoint 8 24) (fp.add RNE lit_347 lit_351))
(assert (fp.isNormal lit_352))
(define-fun lit_355 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.773999989032745361328125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_356 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_355))
(assert (fp.isNormal lit_356))
(define-fun lit_357 () (_ FloatingPoint 8 24) (fp.add RNE lit_352 lit_356))
(assert (fp.isNormal lit_357))
(define-fun lit_359 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.381000012159347534179687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_360 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_359))
(assert (fp.isNormal lit_360))
(define-fun lit_361 () (_ FloatingPoint 8 24) (fp.add RNE lit_357 lit_360))
(assert (fp.isNormal lit_361))
(define-fun lit_362 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_47))
(assert (fp.isNormal lit_362))
(define-fun lit_363 () (_ FloatingPoint 8 24) (fp.add RNE lit_361 lit_362))
(assert (fp.isNormal lit_363))
(define-fun lit_365 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.529999971389770507812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_366 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_365))
(assert (fp.isNormal lit_366))
(define-fun lit_367 () (_ FloatingPoint 8 24) (fp.add RNE lit_363 lit_366))
(assert (fp.isNormal lit_367))
(define-fun lit_369 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.633000016212463378906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_370 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_369))
(assert (fp.isNormal lit_370))
(define-fun lit_371 () (_ FloatingPoint 8 24) (fp.add RNE lit_367 lit_370))
(assert (fp.isNormal lit_371))
(define-fun lit_372 () Bool (fp.leq lit_343 lit_371))
(define-fun lit_375 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.598999977111816406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_377 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.777999997138977050781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_378 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_377))
(assert (fp.isNormal lit_378))
(define-fun lit_379 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_378))
(assert (fp.isNormal lit_379))
(define-fun lit_382 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.986999988555908203125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_383 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_382))
(assert (fp.isNormal lit_383))
(define-fun lit_384 () (_ FloatingPoint 8 24) (fp.add RNE lit_379 lit_383))
(assert (fp.isNormal lit_384))
(define-fun lit_386 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.128000006079673767089843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_387 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_386))
(assert (fp.isNormal lit_387))
(define-fun lit_388 () (_ FloatingPoint 8 24) (fp.add RNE lit_384 lit_387))
(assert (fp.isNormal lit_388))
(define-fun lit_390 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.028999999165534973144531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_391 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_390))
(assert (fp.isNormal lit_391))
(define-fun lit_392 () (_ FloatingPoint 8 24) (fp.add RNE lit_388 lit_391))
(assert (fp.isNormal lit_392))
(define-fun lit_395 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.990000009536743164062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_396 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_395))
(assert (fp.isNormal lit_396))
(define-fun lit_397 () (_ FloatingPoint 8 24) (fp.add RNE lit_392 lit_396))
(assert (fp.isNormal lit_397))
(define-fun lit_400 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.944999992847442626953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_401 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_400))
(assert (fp.isNormal lit_401))
(define-fun lit_402 () (_ FloatingPoint 8 24) (fp.add RNE lit_397 lit_401))
(assert (fp.isNormal lit_402))
(define-fun lit_405 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.532000005245208740234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_406 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_405))
(assert (fp.isNormal lit_406))
(define-fun lit_407 () (_ FloatingPoint 8 24) (fp.add RNE lit_402 lit_406))
(assert (fp.isNormal lit_407))
(define-fun lit_408 () Bool (fp.leq lit_375 lit_407))
(define-fun lit_354 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.773999989032745361328125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_411 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.850000023841857910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_414 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.601999998092651367187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_415 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_414))
(assert (fp.isNormal lit_415))
(define-fun lit_416 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_415))
(assert (fp.isNormal lit_416))
(define-fun lit_418 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.289999991655349731445312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_419 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_418))
(assert (fp.isNormal lit_419))
(define-fun lit_420 () (_ FloatingPoint 8 24) (fp.add RNE lit_416 lit_419))
(assert (fp.isNormal lit_420))
(define-fun lit_421 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_280))
(assert (fp.isNormal lit_421))
(define-fun lit_422 () (_ FloatingPoint 8 24) (fp.add RNE lit_420 lit_421))
(assert (fp.isNormal lit_422))
(define-fun lit_424 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.796999990940093994140625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_425 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_424))
(assert (fp.isNormal lit_425))
(define-fun lit_426 () (_ FloatingPoint 8 24) (fp.add RNE lit_422 lit_425))
(assert (fp.isNormal lit_426))
(define-fun lit_429 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.039000000804662704467773437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_430 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_429))
(assert (fp.isNormal lit_430))
(define-fun lit_431 () (_ FloatingPoint 8 24) (fp.add RNE lit_426 lit_430))
(assert (fp.isNormal lit_431))
(define-fun lit_434 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.943000018596649169921875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_435 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_434))
(assert (fp.isNormal lit_435))
(define-fun lit_436 () (_ FloatingPoint 8 24) (fp.add RNE lit_431 lit_435))
(assert (fp.isNormal lit_436))
(define-fun lit_437 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_354))
(assert (fp.isNormal lit_437))
(define-fun lit_438 () (_ FloatingPoint 8 24) (fp.add RNE lit_436 lit_437))
(assert (fp.isNormal lit_438))
(define-fun lit_439 () Bool (fp.leq lit_438 lit_411))
(define-fun lit_441 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.779999971389770507812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_444 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.349999994039535522460937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_445 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_444))
(assert (fp.isNormal lit_445))
(define-fun lit_446 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_445))
(assert (fp.isNormal lit_446))
(define-fun lit_447 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.370000004768371582031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_448 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_447))
(assert (fp.isNormal lit_448))
(define-fun lit_449 () (_ FloatingPoint 8 24) (fp.add RNE lit_446 lit_448))
(assert (fp.isNormal lit_449))
(define-fun lit_452 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.954999983310699462890625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_453 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_452))
(assert (fp.isNormal lit_453))
(define-fun lit_454 () (_ FloatingPoint 8 24) (fp.add RNE lit_449 lit_453))
(assert (fp.isNormal lit_454))
(define-fun lit_456 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.861000001430511474609375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_457 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_456))
(assert (fp.isNormal lit_457))
(define-fun lit_458 () (_ FloatingPoint 8 24) (fp.add RNE lit_454 lit_457))
(assert (fp.isNormal lit_458))
(define-fun lit_459 () (_ FloatingPoint 8 24) (fp.add RNE lit_328 lit_458))
(assert (fp.isNormal lit_459))
(define-fun lit_462 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.558000028133392333984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_463 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_462))
(assert (fp.isNormal lit_463))
(define-fun lit_464 () (_ FloatingPoint 8 24) (fp.add RNE lit_459 lit_463))
(assert (fp.isNormal lit_464))
(define-fun lit_466 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.469999998807907104492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_467 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_466))
(assert (fp.isNormal lit_467))
(define-fun lit_468 () (_ FloatingPoint 8 24) (fp.add RNE lit_464 lit_467))
(assert (fp.isNormal lit_468))
(define-fun lit_469 () Bool (fp.leq lit_468 lit_441))
(define-fun lit_471 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.140000000596046447753906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_473 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.731000006198883056640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_474 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_473))
(assert (fp.isNormal lit_474))
(define-fun lit_475 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_474))
(assert (fp.isNormal lit_475))
(define-fun lit_477 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.197999998927116394042968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_478 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_477))
(assert (fp.isNormal lit_478))
(define-fun lit_479 () (_ FloatingPoint 8 24) (fp.add RNE lit_475 lit_478))
(assert (fp.isNormal lit_479))
(define-fun lit_482 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.007000000216066837310791015625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_483 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_482))
(assert (fp.isNormal lit_483))
(define-fun lit_484 () (_ FloatingPoint 8 24) (fp.add RNE lit_479 lit_483))
(assert (fp.isNormal lit_484))
(define-fun lit_487 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.259999990463256835937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_488 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_487))
(assert (fp.isNormal lit_488))
(define-fun lit_489 () (_ FloatingPoint 8 24) (fp.add RNE lit_484 lit_488))
(assert (fp.isNormal lit_489))
(define-fun lit_491 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.635999977588653564453125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_492 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_491))
(assert (fp.isNormal lit_492))
(define-fun lit_493 () (_ FloatingPoint 8 24) (fp.add RNE lit_489 lit_492))
(assert (fp.isNormal lit_493))
(define-fun lit_495 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.398999989032745361328125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_496 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_495))
(assert (fp.isNormal lit_496))
(define-fun lit_497 () (_ FloatingPoint 8 24) (fp.add RNE lit_493 lit_496))
(assert (fp.isNormal lit_497))
(define-fun lit_500 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.012000000104308128356933593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_501 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_500))
(assert (fp.isNormal lit_501))
(define-fun lit_502 () (_ FloatingPoint 8 24) (fp.add RNE lit_497 lit_501))
(assert (fp.isNormal lit_502))
(define-fun lit_503 () Bool (fp.leq lit_471 lit_502))
(define-fun lit_505 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.926999986171722412109375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_508 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.984000027179718017578125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_509 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_508))
(assert (fp.isNormal lit_509))
(define-fun lit_510 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_509))
(assert (fp.isNormal lit_510))
(define-fun lit_511 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_129))
(assert (fp.isNormal lit_511))
(define-fun lit_512 () (_ FloatingPoint 8 24) (fp.add RNE lit_510 lit_511))
(assert (fp.isNormal lit_512))
(define-fun lit_515 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.264999985694885253906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_516 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_515))
(assert (fp.isNormal lit_516))
(define-fun lit_517 () (_ FloatingPoint 8 24) (fp.add RNE lit_512 lit_516))
(assert (fp.isNormal lit_517))
(define-fun lit_519 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.620999991893768310546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_520 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_519))
(assert (fp.isNormal lit_520))
(define-fun lit_521 () (_ FloatingPoint 8 24) (fp.add RNE lit_517 lit_520))
(assert (fp.isNormal lit_521))
(define-fun lit_523 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.495000004768371582031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_524 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_523))
(assert (fp.isNormal lit_524))
(define-fun lit_525 () (_ FloatingPoint 8 24) (fp.add RNE lit_521 lit_524))
(assert (fp.isNormal lit_525))
(define-fun lit_527 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.300999999046325683593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_528 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_527))
(assert (fp.isNormal lit_528))
(define-fun lit_529 () (_ FloatingPoint 8 24) (fp.add RNE lit_525 lit_528))
(assert (fp.isNormal lit_529))
(define-fun lit_532 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.689999997615814208984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_533 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_532))
(assert (fp.isNormal lit_533))
(define-fun lit_534 () (_ FloatingPoint 8 24) (fp.add RNE lit_529 lit_533))
(assert (fp.isNormal lit_534))
(define-fun lit_535 () Bool (fp.leq lit_505 lit_534))
(define-fun lit_70 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.143000006675720214843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_537 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.587000012397766113281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_538 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_70))
(assert (fp.isNormal lit_538))
(define-fun lit_539 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_538))
(assert (fp.isNormal lit_539))
(define-fun lit_542 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.596000015735626220703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_543 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_542))
(assert (fp.isNormal lit_543))
(define-fun lit_544 () (_ FloatingPoint 8 24) (fp.add RNE lit_539 lit_543))
(assert (fp.isNormal lit_544))
(define-fun lit_547 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.547999978065490722656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_548 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_547))
(assert (fp.isNormal lit_548))
(define-fun lit_549 () (_ FloatingPoint 8 24) (fp.add RNE lit_544 lit_548))
(assert (fp.isNormal lit_549))
(define-fun lit_552 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.773000001907348632812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_553 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_552))
(assert (fp.isNormal lit_553))
(define-fun lit_554 () (_ FloatingPoint 8 24) (fp.add RNE lit_549 lit_553))
(assert (fp.isNormal lit_554))
(define-fun lit_557 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.293000012636184692382812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_558 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_557))
(assert (fp.isNormal lit_558))
(define-fun lit_559 () (_ FloatingPoint 8 24) (fp.add RNE lit_554 lit_558))
(assert (fp.isNormal lit_559))
(define-fun lit_561 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.210999995470046997070312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_562 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_561))
(assert (fp.isNormal lit_562))
(define-fun lit_563 () (_ FloatingPoint 8 24) (fp.add RNE lit_559 lit_562))
(assert (fp.isNormal lit_563))
(define-fun lit_566 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.246999993920326232910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_567 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_566))
(assert (fp.isNormal lit_567))
(define-fun lit_568 () (_ FloatingPoint 8 24) (fp.add RNE lit_563 lit_567))
(assert (fp.isNormal lit_568))
(define-fun lit_569 () Bool (fp.leq lit_537 lit_568))
(define-fun lit_572 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.929000020027160644531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_574 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.785000026226043701171875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_575 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_574))
(assert (fp.isNormal lit_575))
(define-fun lit_576 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_575))
(assert (fp.isNormal lit_576))
(define-fun lit_578 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.762000024318695068359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_579 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_578))
(assert (fp.isNormal lit_579))
(define-fun lit_580 () (_ FloatingPoint 8 24) (fp.add RNE lit_576 lit_579))
(assert (fp.isNormal lit_580))
(define-fun lit_582 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.825999975204467773437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_583 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_582))
(assert (fp.isNormal lit_583))
(define-fun lit_584 () (_ FloatingPoint 8 24) (fp.add RNE lit_580 lit_583))
(assert (fp.isNormal lit_584))
(define-fun lit_587 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.143999993801116943359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_588 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_587))
(assert (fp.isNormal lit_588))
(define-fun lit_589 () (_ FloatingPoint 8 24) (fp.add RNE lit_584 lit_588))
(assert (fp.isNormal lit_589))
(define-fun lit_591 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.533999979496002197265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_592 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_591))
(assert (fp.isNormal lit_592))
(define-fun lit_593 () (_ FloatingPoint 8 24) (fp.add RNE lit_589 lit_592))
(assert (fp.isNormal lit_593))
(define-fun lit_596 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.291999995708465576171875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_597 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_596))
(assert (fp.isNormal lit_597))
(define-fun lit_598 () (_ FloatingPoint 8 24) (fp.add RNE lit_593 lit_597))
(assert (fp.isNormal lit_598))
(define-fun lit_601 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.382999986410140991210937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_602 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_601))
(assert (fp.isNormal lit_602))
(define-fun lit_603 () (_ FloatingPoint 8 24) (fp.add RNE lit_598 lit_602))
(assert (fp.isNormal lit_603))
(define-fun lit_604 () Bool (fp.leq lit_572 lit_603))
(define-fun top_level_new0 () Bool (and lit_311 lit_210))
(define-fun top_level_new1 () Bool (and top_level_new0 lit_372))
(define-fun top_level_new2 () Bool (and top_level_new1 lit_79))
(define-fun top_level_new3 () Bool (and top_level_new2 lit_37))
(define-fun top_level_new4 () Bool (and top_level_new3 lit_33))
(define-fun top_level_new5 () Bool (and top_level_new4 lit_17))
(define-fun top_level_new6 () Bool (and top_level_new5 lit_535))
(define-fun top_level_new7 () Bool (and top_level_new6 lit_142))
(define-fun top_level_new8 () Bool (and top_level_new7 lit_604))
(define-fun top_level_new9 () Bool (and top_level_new8 lit_340))
(define-fun top_level_new10 () Bool (and top_level_new9 lit_439))
(define-fun top_level_new11 () Bool (and top_level_new10 lit_41))
(define-fun top_level_new12 () Bool (and top_level_new11 lit_242))
(define-fun top_level_new13 () Bool (and top_level_new12 lit_25))
(define-fun top_level_new14 () Bool (and top_level_new13 lit_21))
(define-fun top_level_new15 () Bool (and top_level_new14 lit_29))
(define-fun top_level_new16 () Bool (and top_level_new15 lit_175))
(define-fun top_level_new17 () Bool (and top_level_new16 lit_469))
(define-fun top_level_new18 () Bool (and top_level_new17 lit_277))
(define-fun top_level_new19 () Bool (and top_level_new18 lit_569))
(define-fun top_level_new20 () Bool (and top_level_new19 lit_408))
(define-fun top_level_new21 () Bool (and top_level_new20 lit_503))
(define-fun propexp () Bool (and top_level_new21 lit_111))
(assert propexp)
(apply fpa2bv_approx)
(check-sat)
;(get-model)
(exit)