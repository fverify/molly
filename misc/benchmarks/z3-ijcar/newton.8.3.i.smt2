(declare-fun lit_9 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_9))
(define-fun lit_11 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 2.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_12 () Bool (fp.lt lit_9 lit_11))
(define-fun lit_14 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 2.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_15 () Bool (fp.lt lit_14 lit_9))
(define-fun lit_16 () Bool (and lit_12 lit_15))
(define-fun lit_17 () (_ FloatingPoint 8 24) (fp.mul RNE lit_9 lit_9))
(assert (fp.isNormal lit_17))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.div RNE lit_17 lit_11))
(assert (fp.isNormal lit_18))
(define-fun lit_const_minus_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_19 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_18))
(assert (fp.isNormal lit_19))
(define-fun lit_21 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.add RNE lit_19 lit_21))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () (_ FloatingPoint 8 24) (fp.mul RNE lit_9 lit_17))
(assert (fp.isNormal lit_23))
(define-fun lit_24 () (_ FloatingPoint 8 24) (fp.mul RNE lit_9 lit_23))
(assert (fp.isNormal lit_24))
(define-fun lit_26 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 24.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_27 () (_ FloatingPoint 8 24) (fp.div RNE lit_24 lit_26))
(assert (fp.isNormal lit_27))
(define-fun lit_28 () (_ FloatingPoint 8 24) (fp.add RNE lit_22 lit_27))
(assert (fp.isNormal lit_28))
(define-fun lit_29 () (_ FloatingPoint 8 24) (fp.mul RNE lit_9 lit_24))
(assert (fp.isNormal lit_29))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.mul RNE lit_9 lit_29))
(assert (fp.isNormal lit_30))
(define-fun lit_32 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 720.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_33 () (_ FloatingPoint 8 24) (fp.div RNE lit_30 lit_32))
(assert (fp.isNormal lit_33))
(define-fun lit_34 () (_ FloatingPoint 8 24) (fp.add RNE lit_28 lit_33))
(assert (fp.isNormal lit_34))
(define-fun lit_36 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 6.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_37 () (_ FloatingPoint 8 24) (fp.div RNE lit_23 lit_36))
(assert (fp.isNormal lit_37))
(define-fun lit_38 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_37))
(assert (fp.isNormal lit_38))
(define-fun lit_39 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_38))
(assert (fp.isNormal lit_39))
(define-fun lit_41 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 120.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_42 () (_ FloatingPoint 8 24) (fp.div RNE lit_29 lit_41))
(assert (fp.isNormal lit_42))
(define-fun lit_43 () (_ FloatingPoint 8 24) (fp.add RNE lit_39 lit_42))
(assert (fp.isNormal lit_43))
(define-fun lit_44 () (_ FloatingPoint 8 24) (fp.mul RNE lit_9 lit_30))
(assert (fp.isNormal lit_44))
(define-fun lit_46 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 5040.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_47 () (_ FloatingPoint 8 24) (fp.div RNE lit_44 lit_46))
(assert (fp.isNormal lit_47))
(define-fun lit_48 () (_ FloatingPoint 8 24) (fp.add RNE lit_43 lit_47))
(assert (fp.isNormal lit_48))
(define-fun lit_49 () (_ FloatingPoint 8 24) (fp.div RNE lit_48 lit_34))
(assert (fp.isNormal lit_49))
(define-fun lit_50 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_49))
(assert (fp.isNormal lit_50))
(define-fun lit_51 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_50))
(assert (fp.isNormal lit_51))
(define-fun lit_52 () (_ FloatingPoint 8 24) (fp.mul RNE lit_51 lit_51))
(assert (fp.isNormal lit_52))
(define-fun lit_53 () (_ FloatingPoint 8 24) (fp.div RNE lit_52 lit_11))
(assert (fp.isNormal lit_53))
(define-fun lit_54 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_53))
(assert (fp.isNormal lit_54))
(define-fun lit_55 () (_ FloatingPoint 8 24) (fp.add RNE lit_21 lit_54))
(assert (fp.isNormal lit_55))
(define-fun lit_56 () (_ FloatingPoint 8 24) (fp.mul RNE lit_51 lit_52))
(assert (fp.isNormal lit_56))
(define-fun lit_57 () (_ FloatingPoint 8 24) (fp.mul RNE lit_51 lit_56))
(assert (fp.isNormal lit_57))
(define-fun lit_58 () (_ FloatingPoint 8 24) (fp.div RNE lit_57 lit_26))
(assert (fp.isNormal lit_58))
(define-fun lit_59 () (_ FloatingPoint 8 24) (fp.add RNE lit_55 lit_58))
(assert (fp.isNormal lit_59))
(define-fun lit_60 () (_ FloatingPoint 8 24) (fp.mul RNE lit_51 lit_57))
(assert (fp.isNormal lit_60))
(define-fun lit_61 () (_ FloatingPoint 8 24) (fp.mul RNE lit_51 lit_60))
(assert (fp.isNormal lit_61))
(define-fun lit_62 () (_ FloatingPoint 8 24) (fp.div RNE lit_61 lit_32))
(assert (fp.isNormal lit_62))
(define-fun lit_63 () (_ FloatingPoint 8 24) (fp.add RNE lit_59 lit_62))
(assert (fp.isNormal lit_63))
(define-fun lit_64 () (_ FloatingPoint 8 24) (fp.div RNE lit_56 lit_36))
(assert (fp.isNormal lit_64))
(define-fun lit_65 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_64))
(assert (fp.isNormal lit_65))
(define-fun lit_66 () (_ FloatingPoint 8 24) (fp.add RNE lit_51 lit_65))
(assert (fp.isNormal lit_66))
(define-fun lit_67 () (_ FloatingPoint 8 24) (fp.div RNE lit_60 lit_41))
(assert (fp.isNormal lit_67))
(define-fun lit_68 () (_ FloatingPoint 8 24) (fp.add RNE lit_66 lit_67))
(assert (fp.isNormal lit_68))
(define-fun lit_69 () (_ FloatingPoint 8 24) (fp.mul RNE lit_51 lit_61))
(assert (fp.isNormal lit_69))
(define-fun lit_70 () (_ FloatingPoint 8 24) (fp.div RNE lit_69 lit_46))
(assert (fp.isNormal lit_70))
(define-fun lit_71 () (_ FloatingPoint 8 24) (fp.add RNE lit_68 lit_70))
(assert (fp.isNormal lit_71))
(define-fun lit_72 () (_ FloatingPoint 8 24) (fp.div RNE lit_71 lit_63))
(assert (fp.isNormal lit_72))
(define-fun lit_73 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_72))
(assert (fp.isNormal lit_73))
(define-fun lit_74 () (_ FloatingPoint 8 24) (fp.add RNE lit_51 lit_73))
(assert (fp.isNormal lit_74))
(define-fun lit_75 () (_ FloatingPoint 8 24) (fp.mul RNE lit_74 lit_74))
(assert (fp.isNormal lit_75))
(define-fun lit_76 () (_ FloatingPoint 8 24) (fp.div RNE lit_75 lit_11))
(assert (fp.isNormal lit_76))
(define-fun lit_77 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_76))
(assert (fp.isNormal lit_77))
(define-fun lit_78 () (_ FloatingPoint 8 24) (fp.add RNE lit_21 lit_77))
(assert (fp.isNormal lit_78))
(define-fun lit_79 () (_ FloatingPoint 8 24) (fp.mul RNE lit_74 lit_75))
(assert (fp.isNormal lit_79))
(define-fun lit_80 () (_ FloatingPoint 8 24) (fp.mul RNE lit_74 lit_79))
(assert (fp.isNormal lit_80))
(define-fun lit_81 () (_ FloatingPoint 8 24) (fp.div RNE lit_80 lit_26))
(assert (fp.isNormal lit_81))
(define-fun lit_82 () (_ FloatingPoint 8 24) (fp.add RNE lit_78 lit_81))
(assert (fp.isNormal lit_82))
(define-fun lit_83 () (_ FloatingPoint 8 24) (fp.mul RNE lit_74 lit_80))
(assert (fp.isNormal lit_83))
(define-fun lit_84 () (_ FloatingPoint 8 24) (fp.mul RNE lit_74 lit_83))
(assert (fp.isNormal lit_84))
(define-fun lit_85 () (_ FloatingPoint 8 24) (fp.div RNE lit_84 lit_32))
(assert (fp.isNormal lit_85))
(define-fun lit_86 () (_ FloatingPoint 8 24) (fp.add RNE lit_82 lit_85))
(assert (fp.isNormal lit_86))
(define-fun lit_87 () (_ FloatingPoint 8 24) (fp.div RNE lit_79 lit_36))
(assert (fp.isNormal lit_87))
(define-fun lit_88 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_87))
(assert (fp.isNormal lit_88))
(define-fun lit_89 () (_ FloatingPoint 8 24) (fp.add RNE lit_74 lit_88))
(assert (fp.isNormal lit_89))
(define-fun lit_90 () (_ FloatingPoint 8 24) (fp.div RNE lit_83 lit_41))
(assert (fp.isNormal lit_90))
(define-fun lit_91 () (_ FloatingPoint 8 24) (fp.add RNE lit_89 lit_90))
(assert (fp.isNormal lit_91))
(define-fun lit_92 () (_ FloatingPoint 8 24) (fp.mul RNE lit_74 lit_84))
(assert (fp.isNormal lit_92))
(define-fun lit_93 () (_ FloatingPoint 8 24) (fp.div RNE lit_92 lit_46))
(assert (fp.isNormal lit_93))
(define-fun lit_94 () (_ FloatingPoint 8 24) (fp.add RNE lit_91 lit_93))
(assert (fp.isNormal lit_94))
(define-fun lit_95 () (_ FloatingPoint 8 24) (fp.div RNE lit_94 lit_86))
(assert (fp.isNormal lit_95))
(define-fun lit_96 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_95))
(assert (fp.isNormal lit_96))
(define-fun lit_97 () (_ FloatingPoint 8 24) (fp.add RNE lit_74 lit_96))
(assert (fp.isNormal lit_97))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_98 () (_ FloatingPoint 8 24) (fp.add RNE lit_97 const_0))
(assert (fp.isNormal lit_98))
(define-fun lit_100 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.100000001490116119384765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_101 () Bool (fp.lt lit_98 lit_100))
(define-fun lit_102 () Bool (not lit_101))
(define-fun lit_103 () Bool (and lit_16 lit_102))
(define-fun const_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun const_2 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 2.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun prop_1 () Bool (fp.lt const_1 const_2))
(define-fun propexp () Bool (and lit_103 prop_1))
(assert propexp)
(apply fpa2bv_approx)
(check-sat)
;(get-model)
(exit)