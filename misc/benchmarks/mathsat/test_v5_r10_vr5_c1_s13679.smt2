(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_59 (fp.mul RNE x4 (fp #b0 #b01111101 #b11011100001010001111011))))
(let ((.def_55 (fp.mul RNE x3 (fp #b0 #b01111101 #b11110000101000111101100))))
(let ((.def_51 (fp.mul RNE x2 (fp #b0 #b01111100 #b10111100011010100111111))))
(let ((.def_47 (fp.mul RNE x1 (fp #b0 #b01111110 #b00101010011111101111101))))
(let ((.def_43 (fp.mul RNE x0 (fp #b0 #b01111011 #b10110110010001011010001))))
(let ((.def_44 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_43)))
(let ((.def_48 (fp.add RNE .def_44 .def_47)))
(let ((.def_52 (fp.add RNE .def_48 .def_51)))
(let ((.def_56 (fp.add RNE .def_52 .def_55)))
(let ((.def_60 (fp.add RNE .def_56 .def_59)))
(let ((.def_61 (fp.leq .def_60 (fp #b1 #b01111110 #b00001110110110010001011))))
.def_61))))))))))))
(assert (let ((.def_88 (fp.mul RNE x4 (fp #b1 #b01111101 #b00000000000000000000000))))
(let ((.def_83 (fp.mul RNE x3 (fp #b1 #b01111011 #b00010110100001110010110))))
(let ((.def_78 (fp.mul RNE x2 (fp #b1 #b01111110 #b11000110101001111111000))))
(let ((.def_73 (fp.mul RNE x1 (fp #b1 #b01111110 #b00010001011010000111001))))
(let ((.def_68 (fp.mul RNE x0 (fp #b1 #b01111110 #b00000011100101011000001))))
(let ((.def_69 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_68)))
(let ((.def_74 (fp.add RNE .def_69 .def_73)))
(let ((.def_79 (fp.add RNE .def_74 .def_78)))
(let ((.def_84 (fp.add RNE .def_79 .def_83)))
(let ((.def_89 (fp.add RNE .def_84 .def_88)))
(let ((.def_90 (fp.leq .def_89 (fp #b1 #b01111101 #b00100010110100001110011))))
.def_90))))))))))))
(assert (let ((.def_115 (fp.mul RNE x4 (fp #b1 #b01111100 #b11001100110011001100110))))
(let ((.def_110 (fp.mul RNE x3 (fp #b0 #b01111110 #b00111100111011011001001))))
(let ((.def_106 (fp.mul RNE x2 (fp #b0 #b01111110 #b01110000001000001100010))))
(let ((.def_102 (fp.mul RNE x1 (fp #b1 #b01111010 #b00111111011111001110111))))
(let ((.def_97 (fp.mul RNE x0 (fp #b1 #b01111100 #b00001100010010011011101))))
(let ((.def_98 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_97)))
(let ((.def_103 (fp.add RNE .def_98 .def_102)))
(let ((.def_107 (fp.add RNE .def_103 .def_106)))
(let ((.def_111 (fp.add RNE .def_107 .def_110)))
(let ((.def_116 (fp.add RNE .def_111 .def_115)))
(let ((.def_117 (fp.leq (fp #b1 #b01111100 #b00000110001001001101111) .def_116)))
.def_117))))))))))))
(assert (let ((.def_139 (fp.mul RNE x4 (fp #b1 #b01111101 #b00001110010101100000010))))
(let ((.def_134 (fp.mul RNE x3 (fp #b1 #b01111110 #b00000011100101011000001))))
(let ((.def_132 (fp.mul RNE x2 (fp #b1 #b01111101 #b01110101110000101001000))))
(let ((.def_127 (fp.mul RNE x1 (fp #b1 #b01111011 #b01010011111101111100111))))
(let ((.def_122 (fp.mul RNE x0 (fp #b0 #b01111110 #b00111001110110110010001))))
(let ((.def_123 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_122)))
(let ((.def_128 (fp.add RNE .def_123 .def_127)))
(let ((.def_133 (fp.add RNE .def_128 .def_132)))
(let ((.def_135 (fp.add RNE .def_133 .def_134)))
(let ((.def_140 (fp.add RNE .def_135 .def_139)))
(let ((.def_141 (fp.leq .def_140 (fp #b0 #b01111101 #b01100100010110100001110))))
.def_141))))))))))))
(assert (let ((.def_165 (fp.mul RNE x4 (fp #b0 #b01111101 #b00000111001010110000001))))
(let ((.def_161 (fp.mul RNE x3 (fp #b1 #b01111101 #b11101010011111101111101))))
(let ((.def_156 (fp.mul RNE x2 (fp #b1 #b01111110 #b01010101100000010000011))))
(let ((.def_151 (fp.mul RNE x1 (fp #b1 #b01111100 #b11111101111100111011011))))
(let ((.def_146 (fp.mul RNE x0 (fp #b0 #b01111011 #b00101011000000100000110))))
(let ((.def_147 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_146)))
(let ((.def_152 (fp.add RNE .def_147 .def_151)))
(let ((.def_157 (fp.add RNE .def_152 .def_156)))
(let ((.def_162 (fp.add RNE .def_157 .def_161)))
(let ((.def_166 (fp.add RNE .def_162 .def_165)))
(let ((.def_167 (fp.leq (fp #b0 #b01111110 #b11001001001101110100110) .def_166)))
.def_167))))))))))))
(assert (let ((.def_191 (fp.mul RNE x4 (fp #b0 #b01111100 #b00110111010010111100011))))
(let ((.def_187 (fp.mul RNE x3 (fp #b0 #b01111101 #b01110000101000111101100))))
(let ((.def_183 (fp.mul RNE x2 (fp #b1 #b01111110 #b10100010110100001110011))))
(let ((.def_178 (fp.mul RNE x1 (fp #b0 #b01111110 #b11101110100101111000111))))
(let ((.def_174 (fp.mul RNE x0 (fp #b1 #b01111110 #b11101001111110111110100))))
(let ((.def_175 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_174)))
(let ((.def_179 (fp.add RNE .def_175 .def_178)))
(let ((.def_184 (fp.add RNE .def_179 .def_183)))
(let ((.def_188 (fp.add RNE .def_184 .def_187)))
(let ((.def_192 (fp.add RNE .def_188 .def_191)))
(let ((.def_193 (fp.leq .def_192 (fp #b1 #b01111110 #b00110111110011101101101))))
.def_193))))))))))))
(assert (let ((.def_218 (fp.mul RNE x4 (fp #b1 #b01111110 #b10101100100010110100010))))
(let ((.def_213 (fp.mul RNE x3 (fp #b1 #b01111101 #b01000001100010010011100))))
(let ((.def_208 (fp.mul RNE x2 (fp #b1 #b01111110 #b11011001100110011001101))))
(let ((.def_203 (fp.mul RNE x1 (fp #b1 #b01111110 #b11010001111010111000011))))
(let ((.def_198 (fp.mul RNE x0 (fp #b0 #b01111110 #b11000111101011100001010))))
(let ((.def_199 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_198)))
(let ((.def_204 (fp.add RNE .def_199 .def_203)))
(let ((.def_209 (fp.add RNE .def_204 .def_208)))
(let ((.def_214 (fp.add RNE .def_209 .def_213)))
(let ((.def_219 (fp.add RNE .def_214 .def_218)))
(let ((.def_220 (fp.leq (fp #b0 #b01111110 #b00110000001000001100010) .def_219)))
.def_220))))))))))))
(assert (let ((.def_245 (fp.mul RNE x4 (fp #b0 #b01111001 #b01101000011100101011000))))
(let ((.def_241 (fp.mul RNE x3 (fp #b1 #b01111101 #b11000011100101011000001))))
(let ((.def_236 (fp.mul RNE x2 (fp #b1 #b01111101 #b10000101000111101011100))))
(let ((.def_231 (fp.mul RNE x1 (fp #b0 #b01111110 #b11001000001100010010011))))
(let ((.def_227 (fp.mul RNE x0 (fp #b1 #b01111100 #b01001011110001101010100))))
(let ((.def_228 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_227)))
(let ((.def_232 (fp.add RNE .def_228 .def_231)))
(let ((.def_237 (fp.add RNE .def_232 .def_236)))
(let ((.def_242 (fp.add RNE .def_237 .def_241)))
(let ((.def_246 (fp.add RNE .def_242 .def_245)))
(let ((.def_247 (fp.leq .def_246 (fp #b1 #b01111101 #b11101101100100010110100))))
.def_247))))))))))))
(assert (let ((.def_270 (fp.mul RNE x4 (fp #b1 #b01111011 #b10010101100000010000011))))
(let ((.def_265 (fp.mul RNE x3 (fp #b0 #b01111110 #b11010110000001000001100))))
(let ((.def_261 (fp.mul RNE x2 (fp #b0 #b01111101 #b10110100001110010101100))))
(let ((.def_257 (fp.mul RNE x1 (fp #b0 #b01111011 #b11000110101001111111000))))
(let ((.def_253 (fp.mul RNE x0 (fp #b0 #b01111110 #b11001100110011001100110))))
(let ((.def_254 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_253)))
(let ((.def_258 (fp.add RNE .def_254 .def_257)))
(let ((.def_262 (fp.add RNE .def_258 .def_261)))
(let ((.def_266 (fp.add RNE .def_262 .def_265)))
(let ((.def_271 (fp.add RNE .def_266 .def_270)))
(let ((.def_272 (fp.leq (fp #b1 #b01111101 #b01001101110100101111001) .def_271)))
.def_272))))))))))))
(assert (let ((.def_295 (fp.mul RNE x4 (fp #b1 #b01111110 #b01010011111101111100111))))
(let ((.def_290 (fp.mul RNE x3 (fp #b0 #b01111100 #b00010110100001110010110))))
(let ((.def_286 (fp.mul RNE x2 (fp #b0 #b01111101 #b01010011111101111100111))))
(let ((.def_282 (fp.mul RNE x1 (fp #b1 #b01111101 #b11000110101001111111000))))
(let ((.def_277 (fp.mul RNE x0 (fp #b0 #b01111101 #b11001100110011001100110))))
(let ((.def_278 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_277)))
(let ((.def_283 (fp.add RNE .def_278 .def_282)))
(let ((.def_287 (fp.add RNE .def_283 .def_286)))
(let ((.def_291 (fp.add RNE .def_287 .def_290)))
(let ((.def_296 (fp.add RNE .def_291 .def_295)))
(let ((.def_297 (fp.leq (fp #b0 #b01111110 #b10010000111001010110000) .def_296)))
.def_297))))))))))))
(check-sat)
