(declare-fun |c::main::1::IN!0@1#0| () (_ FloatingPoint 8 24))
(assert (let ((.def_42 (fp.lt (fp #b1 #b01111111 #b10010010000111111011011) |c::main::1::IN!0@1#0|)))
(let ((.def_39 (fp.lt |c::main::1::IN!0@1#0| (fp #b0 #b01111111 #b10010010000111111011011))))
(let ((.def_43 (and .def_39 .def_42)))
(let ((.def_10 (fp.mul RNE |c::main::1::IN!0@1#0| |c::main::1::IN!0@1#0|)))
(let ((.def_11 (fp.mul RNE |c::main::1::IN!0@1#0| .def_10)))
(let ((.def_17 (fp.mul RNE |c::main::1::IN!0@1#0| .def_11)))
(let ((.def_18 (fp.mul RNE |c::main::1::IN!0@1#0| .def_17)))
(let ((.def_23 (fp.mul RNE |c::main::1::IN!0@1#0| .def_18)))
(let ((.def_24 (fp.mul RNE |c::main::1::IN!0@1#0| .def_23)))
(let ((.def_27 (fp.div RNE .def_24 (fp #b0 #b10001011 #b00111011000000000000000))))
(let ((.def_21 (fp.div RNE .def_18 (fp #b0 #b10000101 #b11100000000000000000000))))
(let ((.def_14 (fp.div RNE .def_11 (fp #b0 #b10000001 #b10000000000000000000000))))
(let ((.def_15 (fp.neg .def_14)))
(let ((.def_16 (fp.add RNE |c::main::1::IN!0@1#0| .def_15)))
(let ((.def_22 (fp.add RNE .def_16 .def_21)))
(let ((.def_28 (fp.add RNE .def_22 .def_27)))
(let ((.def_35 (fp.leq .def_28 (fp #b0 #b01111111 #b00000010100011110101110))))
(let ((.def_36 (not .def_35)))
(let ((.def_44 (and .def_36 .def_43)))
(let ((.def_31 (fp.leq (fp #b1 #b01111111 #b00000010100011110101110) .def_28)))
(let ((.def_32 (not .def_31)))
(let ((.def_45 (and .def_32 .def_44)))
.def_45)))))))))))))))))))))))
(check-sat)
