(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_79 (fp.mul RNE x6 (fp #b0 #b01111101 #b00101100000010000011001))))
(let ((.def_75 (fp.mul RNE x5 (fp #b1 #b01111010 #b10110010001011010000111))))
(let ((.def_70 (fp.mul RNE x4 (fp #b1 #b01111110 #b00111101111100111011011))))
(let ((.def_65 (fp.mul RNE x3 (fp #b1 #b01111011 #b10011101101100100010111))))
(let ((.def_60 (fp.mul RNE x2 (fp #b1 #b01111110 #b00000001100010010011100))))
(let ((.def_55 (fp.mul RNE x1 (fp #b1 #b01111101 #b11000010100011110101110))))
(let ((.def_50 (fp.mul RNE x0 (fp #b0 #b01111110 #b10110011001100110011010))))
(let ((.def_51 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_50)))
(let ((.def_56 (fp.add RNE .def_51 .def_55)))
(let ((.def_61 (fp.add RNE .def_56 .def_60)))
(let ((.def_66 (fp.add RNE .def_61 .def_65)))
(let ((.def_71 (fp.add RNE .def_66 .def_70)))
(let ((.def_76 (fp.add RNE .def_71 .def_75)))
(let ((.def_80 (fp.add RNE .def_76 .def_79)))
(let ((.def_81 (fp.leq .def_80 (fp #b0 #b01111100 #b10011011101001011110010))))
.def_81))))))))))))))))
(assert (let ((.def_114 (fp.mul RNE x6 (fp #b0 #b01111101 #b00000010000011000100101))))
(let ((.def_110 (fp.mul RNE x5 (fp #b1 #b01111101 #b11100001010001111010111))))
(let ((.def_105 (fp.mul RNE x4 (fp #b1 #b01111110 #b01110111110011101101101))))
(let ((.def_100 (fp.mul RNE x3 (fp #b1 #b01111110 #b10111101011100001010010))))
(let ((.def_95 (fp.mul RNE x2 (fp #b0 #b01111110 #b01011111101111100111011))))
(let ((.def_91 (fp.mul RNE x1 (fp #b1 #b01111100 #b01111000110101001111111))))
(let ((.def_86 (fp.mul RNE x0 (fp #b0 #b01111110 #b11000001100010010011100))))
(let ((.def_87 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_86)))
(let ((.def_92 (fp.add RNE .def_87 .def_91)))
(let ((.def_96 (fp.add RNE .def_92 .def_95)))
(let ((.def_101 (fp.add RNE .def_96 .def_100)))
(let ((.def_106 (fp.add RNE .def_101 .def_105)))
(let ((.def_111 (fp.add RNE .def_106 .def_110)))
(let ((.def_115 (fp.add RNE .def_111 .def_114)))
(let ((.def_116 (fp.leq (fp #b0 #b01111010 #b00100110111010010111100) .def_115)))
.def_116))))))))))))))))
(assert (let ((.def_148 (fp.mul RNE x6 (fp #b1 #b01111100 #b01011000000100000110001))))
(let ((.def_143 (fp.mul RNE x5 (fp #b0 #b01111110 #b10111001110110110010001))))
(let ((.def_139 (fp.mul RNE x4 (fp #b0 #b01111110 #b10010111100011010101000))))
(let ((.def_135 (fp.mul RNE x3 (fp #b0 #b01111101 #b00001011010000111001011))))
(let ((.def_131 (fp.mul RNE x2 (fp #b1 #b01111100 #b10010101100000010000011))))
(let ((.def_126 (fp.mul RNE x1 (fp #b1 #b01111110 #b01011000100100110111010))))
(let ((.def_121 (fp.mul RNE x0 (fp #b0 #b01111110 #b01001000001100010010011))))
(let ((.def_122 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_121)))
(let ((.def_127 (fp.add RNE .def_122 .def_126)))
(let ((.def_132 (fp.add RNE .def_127 .def_131)))
(let ((.def_136 (fp.add RNE .def_132 .def_135)))
(let ((.def_140 (fp.add RNE .def_136 .def_139)))
(let ((.def_144 (fp.add RNE .def_140 .def_143)))
(let ((.def_149 (fp.add RNE .def_144 .def_148)))
(let ((.def_150 (fp.leq .def_149 (fp #b0 #b01111110 #b11111000110101001111111))))
.def_150))))))))))))))))
(assert (let ((.def_181 (fp.mul RNE x6 (fp #b1 #b01111110 #b01111001110110110010001))))
(let ((.def_176 (fp.mul RNE x5 (fp #b0 #b01111110 #b11100100110111010011000))))
(let ((.def_172 (fp.mul RNE x4 (fp #b1 #b01111110 #b10111001110110110010001))))
(let ((.def_169 (fp.mul RNE x3 (fp #b0 #b01111101 #b11110111110011101101101))))
(let ((.def_165 (fp.mul RNE x2 (fp #b1 #b01111110 #b10100100010110100001110))))
(let ((.def_160 (fp.mul RNE x1 (fp #b1 #b01111110 #b01110000001000001100010))))
(let ((.def_155 (fp.mul RNE x0 (fp #b0 #b01111110 #b11101101100100010110100))))
(let ((.def_156 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_155)))
(let ((.def_161 (fp.add RNE .def_156 .def_160)))
(let ((.def_166 (fp.add RNE .def_161 .def_165)))
(let ((.def_170 (fp.add RNE .def_166 .def_169)))
(let ((.def_173 (fp.add RNE .def_170 .def_172)))
(let ((.def_177 (fp.add RNE .def_173 .def_176)))
(let ((.def_182 (fp.add RNE .def_177 .def_181)))
(let ((.def_183 (fp.leq (fp #b0 #b01111110 #b00010011011101001011110) .def_182)))
.def_183))))))))))))))))
(assert (let ((.def_215 (fp.mul RNE x6 (fp #b1 #b01111110 #b00101000111101011100001))))
(let ((.def_210 (fp.mul RNE x5 (fp #b0 #b01111110 #b11101100000010000011001))))
(let ((.def_206 (fp.mul RNE x4 (fp #b0 #b01111101 #b00100110111010010111100))))
(let ((.def_202 (fp.mul RNE x3 (fp #b0 #b01111100 #b00111101011100001010010))))
(let ((.def_198 (fp.mul RNE x2 (fp #b0 #b01111100 #b01101110100101111000111))))
(let ((.def_194 (fp.mul RNE x1 (fp #b0 #b01111110 #b10010011111101111100111))))
(let ((.def_190 (fp.mul RNE x0 (fp #b1 #b01111101 #b10000011000100100110111))))
(let ((.def_191 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_190)))
(let ((.def_195 (fp.add RNE .def_191 .def_194)))
(let ((.def_199 (fp.add RNE .def_195 .def_198)))
(let ((.def_203 (fp.add RNE .def_199 .def_202)))
(let ((.def_207 (fp.add RNE .def_203 .def_206)))
(let ((.def_211 (fp.add RNE .def_207 .def_210)))
(let ((.def_216 (fp.add RNE .def_211 .def_215)))
(let ((.def_217 (fp.leq .def_216 (fp #b1 #b01111110 #b11101110100101111000111))))
.def_217))))))))))))))))
(assert (let ((.def_249 (fp.mul RNE x6 (fp #b0 #b01111110 #b01101111000110101010000))))
(let ((.def_245 (fp.mul RNE x5 (fp #b1 #b01111101 #b10100001110010101100000))))
(let ((.def_240 (fp.mul RNE x4 (fp #b0 #b01111100 #b00111001010110000001000))))
(let ((.def_236 (fp.mul RNE x3 (fp #b1 #b01111110 #b11011001000101101000100))))
(let ((.def_231 (fp.mul RNE x2 (fp #b0 #b01111110 #b00001110010101100000010))))
(let ((.def_227 (fp.mul RNE x1 (fp #b0 #b01111100 #b11111101111100111011011))))
(let ((.def_223 (fp.mul RNE x0 (fp #b0 #b01111110 #b11011000100100110111010))))
(let ((.def_224 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_223)))
(let ((.def_228 (fp.add RNE .def_224 .def_227)))
(let ((.def_232 (fp.add RNE .def_228 .def_231)))
(let ((.def_237 (fp.add RNE .def_232 .def_236)))
(let ((.def_241 (fp.add RNE .def_237 .def_240)))
(let ((.def_246 (fp.add RNE .def_241 .def_245)))
(let ((.def_250 (fp.add RNE .def_246 .def_249)))
(let ((.def_251 (fp.leq (fp #b1 #b01111101 #b01100000010000011000101) .def_250)))
.def_251))))))))))))))))
(assert (let ((.def_281 (fp.mul RNE x6 (fp #b0 #b01111110 #b01011111001110110110010))))
(let ((.def_277 (fp.mul RNE x5 (fp #b1 #b01111110 #b00001010110000001000010))))
(let ((.def_272 (fp.mul RNE x4 (fp #b0 #b01111110 #b01000011100101011000001))))
(let ((.def_268 (fp.mul RNE x3 (fp #b0 #b01111110 #b01100001110010101100000))))
(let ((.def_264 (fp.mul RNE x2 (fp #b0 #b01111101 #b10000001000001100010010))))
(let ((.def_260 (fp.mul RNE x1 (fp #b0 #b01111011 #b10000101000111101011100))))
(let ((.def_256 (fp.mul RNE x0 (fp #b0 #b01111110 #b00000110001001001101111))))
(let ((.def_257 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_256)))
(let ((.def_261 (fp.add RNE .def_257 .def_260)))
(let ((.def_265 (fp.add RNE .def_261 .def_264)))
(let ((.def_269 (fp.add RNE .def_265 .def_268)))
(let ((.def_273 (fp.add RNE .def_269 .def_272)))
(let ((.def_278 (fp.add RNE .def_273 .def_277)))
(let ((.def_282 (fp.add RNE .def_278 .def_281)))
(let ((.def_283 (fp.leq (fp #b0 #b01111101 #b11011101001011110001101) .def_282)))
.def_283))))))))))))))))
(check-sat)
