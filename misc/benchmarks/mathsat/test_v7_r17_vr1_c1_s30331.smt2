(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_78 (fp.mul RNE x6 (fp #b1 #b01111101 #b10010110100001110010110))))
(let ((.def_73 (fp.mul RNE x5 (fp #b1 #b01111110 #b01010110100001110010110))))
(let ((.def_68 (fp.mul RNE x4 (fp #b0 #b01111001 #b00100110111010010111100))))
(let ((.def_64 (fp.mul RNE x3 (fp #b0 #b01111110 #b10101100100010110100010))))
(let ((.def_60 (fp.mul RNE x2 (fp #b0 #b01111100 #b10110110010001011010001))))
(let ((.def_56 (fp.mul RNE x1 (fp #b1 #b01111010 #b11100011010100111111100))))
(let ((.def_51 (fp.mul RNE x0 (fp #b0 #b01111101 #b01100101011000000100001))))
(let ((.def_52 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_51)))
(let ((.def_57 (fp.add RNE .def_52 .def_56)))
(let ((.def_61 (fp.add RNE .def_57 .def_60)))
(let ((.def_65 (fp.add RNE .def_61 .def_64)))
(let ((.def_69 (fp.add RNE .def_65 .def_68)))
(let ((.def_74 (fp.add RNE .def_69 .def_73)))
(let ((.def_79 (fp.add RNE .def_74 .def_78)))
(let ((.def_80 (fp.leq (fp #b1 #b01111110 #b00011001000101101000100) .def_79)))
.def_80))))))))))))))))
(assert (let ((.def_112 (fp.mul RNE x6 (fp #b0 #b01111101 #b10111100011010100111111))))
(let ((.def_108 (fp.mul RNE x5 (fp #b0 #b01111110 #b01111101011100001010010))))
(let ((.def_104 (fp.mul RNE x4 (fp #b1 #b01111110 #b11001000101101000011101))))
(let ((.def_99 (fp.mul RNE x3 (fp #b1 #b01111110 #b01100100110111010011000))))
(let ((.def_94 (fp.mul RNE x2 (fp #b0 #b01111000 #b01101000011100101011000))))
(let ((.def_90 (fp.mul RNE x1 (fp #b0 #b01111011 #b11000110101001111111000))))
(let ((.def_86 (fp.mul RNE x0 (fp #b1 #b01111100 #b01101110100101111000111))))
(let ((.def_87 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_86)))
(let ((.def_91 (fp.add RNE .def_87 .def_90)))
(let ((.def_95 (fp.add RNE .def_91 .def_94)))
(let ((.def_100 (fp.add RNE .def_95 .def_99)))
(let ((.def_105 (fp.add RNE .def_100 .def_104)))
(let ((.def_109 (fp.add RNE .def_105 .def_108)))
(let ((.def_113 (fp.add RNE .def_109 .def_112)))
(let ((.def_114 (fp.leq (fp #b0 #b01111110 #b11100110111010010111100) .def_113)))
.def_114))))))))))))))))
(assert (let ((.def_149 (fp.mul RNE x6 (fp #b1 #b01111001 #b10111010010111100011011))))
(let ((.def_144 (fp.mul RNE x5 (fp #b0 #b01111110 #b10101111100111011011001))))
(let ((.def_140 (fp.mul RNE x4 (fp #b1 #b01111101 #b01000101101000011100101))))
(let ((.def_135 (fp.mul RNE x3 (fp #b1 #b01111101 #b00011011101001011110010))))
(let ((.def_130 (fp.mul RNE x2 (fp #b0 #b01111010 #b00011110101110000101001))))
(let ((.def_126 (fp.mul RNE x1 (fp #b1 #b01111100 #b10001101010011111110000))))
(let ((.def_121 (fp.mul RNE x0 (fp #b1 #b01111101 #b11111110111110011101110))))
(let ((.def_122 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_121)))
(let ((.def_127 (fp.add RNE .def_122 .def_126)))
(let ((.def_131 (fp.add RNE .def_127 .def_130)))
(let ((.def_136 (fp.add RNE .def_131 .def_135)))
(let ((.def_141 (fp.add RNE .def_136 .def_140)))
(let ((.def_145 (fp.add RNE .def_141 .def_144)))
(let ((.def_150 (fp.add RNE .def_145 .def_149)))
(let ((.def_151 (fp.leq (fp #b1 #b01111101 #b01000010100011110101110) .def_150)))
.def_151))))))))))))))))
(assert (let ((.def_182 (fp.mul RNE x6 (fp #b1 #b01111110 #b00101000111101011100001))))
(let ((.def_177 (fp.mul RNE x5 (fp #b0 #b01111011 #b10100001110010101100000))))
(let ((.def_173 (fp.mul RNE x4 (fp #b0 #b01111110 #b10111110111110011101110))))
(let ((.def_169 (fp.mul RNE x3 (fp #b0 #b01111101 #b00110011001100110011010))))
(let ((.def_165 (fp.mul RNE x2 (fp #b1 #b01111000 #b11101011100001010001111))))
(let ((.def_160 (fp.mul RNE x1 (fp #b1 #b01111110 #b10101001111110111110100))))
(let ((.def_155 (fp.mul RNE x0 (fp #b0 #b01111110 #b11100110111010010111100))))
(let ((.def_156 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_155)))
(let ((.def_161 (fp.add RNE .def_156 .def_160)))
(let ((.def_166 (fp.add RNE .def_161 .def_165)))
(let ((.def_170 (fp.add RNE .def_166 .def_169)))
(let ((.def_174 (fp.add RNE .def_170 .def_173)))
(let ((.def_178 (fp.add RNE .def_174 .def_177)))
(let ((.def_183 (fp.add RNE .def_178 .def_182)))
(let ((.def_184 (fp.leq .def_183 (fp #b1 #b01111101 #b00110110010001011010001))))
.def_184))))))))))))))))
(assert (let ((.def_214 (fp.mul RNE x6 (fp #b0 #b01111110 #b10001101110100101111001))))
(let ((.def_210 (fp.mul RNE x5 (fp #b0 #b01111110 #b00010111100011010101000))))
(let ((.def_206 (fp.mul RNE x4 (fp #b1 #b01111101 #b00110111010010111100011))))
(let ((.def_201 (fp.mul RNE x3 (fp #b0 #b01111100 #b11100111011011001000110))))
(let ((.def_197 (fp.mul RNE x2 (fp #b0 #b01111110 #b00011101001011110001101))))
(let ((.def_193 (fp.mul RNE x1 (fp #b0 #b01111010 #b00101111000110101010000))))
(let ((.def_189 (fp.mul RNE x0 (fp #b0 #b01111100 #b00110101001111110111110))))
(let ((.def_190 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_189)))
(let ((.def_194 (fp.add RNE .def_190 .def_193)))
(let ((.def_198 (fp.add RNE .def_194 .def_197)))
(let ((.def_202 (fp.add RNE .def_198 .def_201)))
(let ((.def_207 (fp.add RNE .def_202 .def_206)))
(let ((.def_211 (fp.add RNE .def_207 .def_210)))
(let ((.def_215 (fp.add RNE .def_211 .def_214)))
(let ((.def_216 (fp.leq .def_215 (fp #b0 #b01111011 #b00100110111010010111100))))
.def_216))))))))))))))))
(assert (let ((.def_250 (fp.mul RNE x6 (fp #b0 #b01111101 #b11011010000111001010110))))
(let ((.def_246 (fp.mul RNE x5 (fp #b1 #b01111101 #b10100010110100001110011))))
(let ((.def_241 (fp.mul RNE x4 (fp #b1 #b01111110 #b00101100100010110100010))))
(let ((.def_236 (fp.mul RNE x3 (fp #b1 #b01111110 #b10101010011111101111101))))
(let ((.def_231 (fp.mul RNE x2 (fp #b1 #b01111110 #b00101000011100101011000))))
(let ((.def_226 (fp.mul RNE x1 (fp #b0 #b01111100 #b01111010111000010100100))))
(let ((.def_222 (fp.mul RNE x0 (fp #b1 #b01111110 #b10110101001111110111110))))
(let ((.def_223 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_222)))
(let ((.def_227 (fp.add RNE .def_223 .def_226)))
(let ((.def_232 (fp.add RNE .def_227 .def_231)))
(let ((.def_237 (fp.add RNE .def_232 .def_236)))
(let ((.def_242 (fp.add RNE .def_237 .def_241)))
(let ((.def_247 (fp.add RNE .def_242 .def_246)))
(let ((.def_251 (fp.add RNE .def_247 .def_250)))
(let ((.def_252 (fp.leq (fp #b0 #b01111101 #b10011011101001011110010) .def_251)))
.def_252))))))))))))))))
(assert (let ((.def_281 (fp.mul RNE x6 (fp #b0 #b01111110 #b10001111010111000010100))))
(let ((.def_277 (fp.mul RNE x5 (fp #b1 #b01111100 #b01111010111000010100100))))
(let ((.def_274 (fp.mul RNE x4 (fp #b1 #b01111101 #b10000100000110001001010))))
(let ((.def_269 (fp.mul RNE x3 (fp #b1 #b01111110 #b11001000101101000011101))))
(let ((.def_267 (fp.mul RNE x2 (fp #b1 #b01111100 #b00100010110100001110011))))
(let ((.def_262 (fp.mul RNE x1 (fp #b0 #b01111110 #b01011010000111001010110))))
(let ((.def_258 (fp.mul RNE x0 (fp #b1 #b01111110 #b11111000010100011110110))))
(let ((.def_259 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_258)))
(let ((.def_263 (fp.add RNE .def_259 .def_262)))
(let ((.def_268 (fp.add RNE .def_263 .def_267)))
(let ((.def_270 (fp.add RNE .def_268 .def_269)))
(let ((.def_275 (fp.add RNE .def_270 .def_274)))
(let ((.def_278 (fp.add RNE .def_275 .def_277)))
(let ((.def_282 (fp.add RNE .def_278 .def_281)))
(let ((.def_283 (fp.leq .def_282 (fp #b0 #b01111100 #b00011000100100110111010))))
.def_283))))))))))))))))
(assert (let ((.def_319 (fp.mul RNE x6 (fp #b1 #b01111110 #b00001101110100101111001))))
(let ((.def_314 (fp.mul RNE x5 (fp #b1 #b01111110 #b00011010000111001010110))))
(let ((.def_309 (fp.mul RNE x4 (fp #b1 #b01111110 #b11010001111010111000011))))
(let ((.def_304 (fp.mul RNE x3 (fp #b0 #b01111101 #b10000001000001100010010))))
(let ((.def_300 (fp.mul RNE x2 (fp #b1 #b01111110 #b11011000100100110111010))))
(let ((.def_295 (fp.mul RNE x1 (fp #b1 #b01111110 #b00110001101010011111110))))
(let ((.def_290 (fp.mul RNE x0 (fp #b1 #b01111110 #b01111101111100111011011))))
(let ((.def_291 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_290)))
(let ((.def_296 (fp.add RNE .def_291 .def_295)))
(let ((.def_301 (fp.add RNE .def_296 .def_300)))
(let ((.def_305 (fp.add RNE .def_301 .def_304)))
(let ((.def_310 (fp.add RNE .def_305 .def_309)))
(let ((.def_315 (fp.add RNE .def_310 .def_314)))
(let ((.def_320 (fp.add RNE .def_315 .def_319)))
(let ((.def_321 (fp.leq (fp #b1 #b01111110 #b00110011101101100100011) .def_320)))
.def_321))))))))))))))))
(assert (let ((.def_353 (fp.mul RNE x6 (fp #b0 #b01111011 #b00101111000110101010000))))
(let ((.def_349 (fp.mul RNE x5 (fp #b1 #b01111110 #b01111111011111001110111))))
(let ((.def_344 (fp.mul RNE x4 (fp #b0 #b01111110 #b00101011000000100000110))))
(let ((.def_340 (fp.mul RNE x3 (fp #b0 #b01111110 #b10111011011001000101101))))
(let ((.def_336 (fp.mul RNE x2 (fp #b0 #b01111110 #b01000101101000011100101))))
(let ((.def_332 (fp.mul RNE x1 (fp #b0 #b01111101 #b10110100001110010101100))))
(let ((.def_328 (fp.mul RNE x0 (fp #b1 #b01111101 #b11010010111100011010101))))
(let ((.def_329 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_328)))
(let ((.def_333 (fp.add RNE .def_329 .def_332)))
(let ((.def_337 (fp.add RNE .def_333 .def_336)))
(let ((.def_341 (fp.add RNE .def_337 .def_340)))
(let ((.def_345 (fp.add RNE .def_341 .def_344)))
(let ((.def_350 (fp.add RNE .def_345 .def_349)))
(let ((.def_354 (fp.add RNE .def_350 .def_353)))
(let ((.def_355 (fp.leq (fp #b1 #b01111110 #b11110010101100000010000) .def_354)))
.def_355))))))))))))))))
(assert (let ((.def_387 (fp.mul RNE x6 (fp #b1 #b01111101 #b10000101000111101011100))))
(let ((.def_382 (fp.mul RNE x5 (fp #b0 #b01111110 #b11110001001001101110101))))
(let ((.def_378 (fp.mul RNE x4 (fp #b0 #b01111101 #b11110110110010001011010))))
(let ((.def_374 (fp.mul RNE x3 (fp #b1 #b01111101 #b10000111001010110000001))))
(let ((.def_369 (fp.mul RNE x2 (fp #b0 #b01111011 #b00110111010010111100011))))
(let ((.def_365 (fp.mul RNE x1 (fp #b1 #b01111101 #b11100010010011011101001))))
(let ((.def_360 (fp.mul RNE x0 (fp #b0 #b01111101 #b01010100111111011111010))))
(let ((.def_361 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_360)))
(let ((.def_366 (fp.add RNE .def_361 .def_365)))
(let ((.def_370 (fp.add RNE .def_366 .def_369)))
(let ((.def_375 (fp.add RNE .def_370 .def_374)))
(let ((.def_379 (fp.add RNE .def_375 .def_378)))
(let ((.def_383 (fp.add RNE .def_379 .def_382)))
(let ((.def_388 (fp.add RNE .def_383 .def_387)))
(let ((.def_389 (fp.leq .def_388 (fp #b0 #b01111101 #b10111101011100001010010))))
.def_389))))))))))))))))
(assert (let ((.def_420 (fp.mul RNE x6 (fp #b0 #b01111101 #b10101100000010000011001))))
(let ((.def_416 (fp.mul RNE x5 (fp #b1 #b01111110 #b00001110010101100000010))))
(let ((.def_411 (fp.mul RNE x4 (fp #b1 #b01111101 #b11000010100011110101110))))
(let ((.def_406 (fp.mul RNE x3 (fp #b1 #b01111110 #b10000010100011110101110))))
(let ((.def_401 (fp.mul RNE x2 (fp #b1 #b01111101 #b00000000000000000000000))))
(let ((.def_396 (fp.mul RNE x1 (fp #b0 #b01111110 #b00100011010100111111100))))
(let ((.def_392 (fp.mul RNE x0 (fp #b0 #b01111110 #b10001101110100101111001))))
(let ((.def_393 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_392)))
(let ((.def_397 (fp.add RNE .def_393 .def_396)))
(let ((.def_402 (fp.add RNE .def_397 .def_401)))
(let ((.def_407 (fp.add RNE .def_402 .def_406)))
(let ((.def_412 (fp.add RNE .def_407 .def_411)))
(let ((.def_417 (fp.add RNE .def_412 .def_416)))
(let ((.def_421 (fp.add RNE .def_417 .def_420)))
(let ((.def_422 (fp.leq (fp #b0 #b01111101 #b10100011110101110000101) .def_421)))
.def_422))))))))))))))))
(assert (let ((.def_446 (fp.mul RNE x6 (fp #b0 #b01111010 #b10000001000001100010010))))
(let ((.def_442 (fp.mul RNE x5 (fp #b0 #b01111110 #b10101001111110111110100))))
(let ((.def_440 (fp.mul RNE x4 (fp #b0 #b01111110 #b00100011010100111111100))))
(let ((.def_438 (fp.mul RNE x3 (fp #b0 #b01111101 #b11110101110000101001000))))
(let ((.def_433 (fp.mul RNE x1 (fp #b1 #b01111000 #b10001001001101110100110))))
(let ((.def_428 (fp.mul RNE x0 (fp #b0 #b01111110 #b11000111101011100001010))))
(let ((.def_429 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_428)))
(let ((.def_434 (fp.add RNE .def_429 .def_433)))
(let ((.def_300 (fp.mul RNE x2 (fp #b1 #b01111110 #b11011000100100110111010))))
(let ((.def_435 (fp.add RNE .def_300 .def_434)))
(let ((.def_439 (fp.add RNE .def_435 .def_438)))
(let ((.def_441 (fp.add RNE .def_439 .def_440)))
(let ((.def_443 (fp.add RNE .def_441 .def_442)))
(let ((.def_447 (fp.add RNE .def_443 .def_446)))
(let ((.def_448 (fp.leq .def_447 (fp #b1 #b01111101 #b11001100110011001100110))))
.def_448))))))))))))))))
(assert (let ((.def_479 (fp.mul RNE x6 (fp #b0 #b01111101 #b11010011111101111100111))))
(let ((.def_475 (fp.mul RNE x5 (fp #b0 #b01111101 #b11100100010110100001110))))
(let ((.def_471 (fp.mul RNE x4 (fp #b0 #b01111101 #b00100001110010101100000))))
(let ((.def_467 (fp.mul RNE x3 (fp #b0 #b01111110 #b00001110110110010001011))))
(let ((.def_463 (fp.mul RNE x2 (fp #b1 #b01111110 #b00110101001111110111110))))
(let ((.def_458 (fp.mul RNE x1 (fp #b0 #b01111100 #b11010100111111011111010))))
(let ((.def_454 (fp.mul RNE x0 (fp #b1 #b01111110 #b11110001101010011111110))))
(let ((.def_455 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_454)))
(let ((.def_459 (fp.add RNE .def_455 .def_458)))
(let ((.def_464 (fp.add RNE .def_459 .def_463)))
(let ((.def_468 (fp.add RNE .def_464 .def_467)))
(let ((.def_472 (fp.add RNE .def_468 .def_471)))
(let ((.def_476 (fp.add RNE .def_472 .def_475)))
(let ((.def_480 (fp.add RNE .def_476 .def_479)))
(let ((.def_481 (fp.leq .def_480 (fp #b0 #b01111101 #b10011010100111111011111))))
.def_481))))))))))))))))
(assert (let ((.def_510 (fp.mul RNE x6 (fp #b0 #b01111101 #b00110001001001101110101))))
(let ((.def_506 (fp.mul RNE x5 (fp #b1 #b01111110 #b11010001011010000111001))))
(let ((.def_501 (fp.mul RNE x4 (fp #b0 #b01111101 #b01111110111110011101110))))
(let ((.def_497 (fp.mul RNE x3 (fp #b0 #b01111110 #b10000000000000000000000))))
(let ((.def_493 (fp.mul RNE x2 (fp #b0 #b01111110 #b00001101110100101111001))))
(let ((.def_491 (fp.mul RNE x1 (fp #b1 #b01111110 #b01000110101001111111000))))
(let ((.def_486 (fp.mul RNE x0 (fp #b0 #b01111110 #b11001000001100010010011))))
(let ((.def_487 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_486)))
(let ((.def_492 (fp.add RNE .def_487 .def_491)))
(let ((.def_494 (fp.add RNE .def_492 .def_493)))
(let ((.def_498 (fp.add RNE .def_494 .def_497)))
(let ((.def_502 (fp.add RNE .def_498 .def_501)))
(let ((.def_507 (fp.add RNE .def_502 .def_506)))
(let ((.def_511 (fp.add RNE .def_507 .def_510)))
(let ((.def_512 (fp.leq .def_511 (fp #b0 #b01111011 #b01011000000100000110001))))
.def_512))))))))))))))))
(assert (let ((.def_541 (fp.mul RNE x6 (fp #b0 #b01111110 #b01100110011001100110011))))
(let ((.def_537 (fp.mul RNE x5 (fp #b1 #b01111110 #b10100111011011001000110))))
(let ((.def_532 (fp.mul RNE x4 (fp #b0 #b01111100 #b11011001000101101000100))))
(let ((.def_528 (fp.mul RNE x3 (fp #b0 #b01111101 #b00110001001001101110101))))
(let ((.def_526 (fp.mul RNE x2 (fp #b1 #b01111010 #b10001001001101110100110))))
(let ((.def_521 (fp.mul RNE x1 (fp #b0 #b01111010 #b10100001110010101100000))))
(let ((.def_517 (fp.mul RNE x0 (fp #b0 #b01111100 #b11101011100001010001111))))
(let ((.def_518 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_517)))
(let ((.def_522 (fp.add RNE .def_518 .def_521)))
(let ((.def_527 (fp.add RNE .def_522 .def_526)))
(let ((.def_529 (fp.add RNE .def_527 .def_528)))
(let ((.def_533 (fp.add RNE .def_529 .def_532)))
(let ((.def_538 (fp.add RNE .def_533 .def_537)))
(let ((.def_542 (fp.add RNE .def_538 .def_541)))
(let ((.def_543 (fp.leq (fp #b0 #b01111110 #b00000110101001111111000) .def_542)))
.def_543))))))))))))))))
(assert (let ((.def_573 (fp.mul RNE x6 (fp #b1 #b01111010 #b10000001000001100010010))))
(let ((.def_570 (fp.mul RNE x5 (fp #b1 #b01111000 #b11101011100001010001111))))
(let ((.def_568 (fp.mul RNE x4 (fp #b1 #b01111110 #b01100001010001111010111))))
(let ((.def_563 (fp.mul RNE x3 (fp #b1 #b01111100 #b11000100100110111010011))))
(let ((.def_558 (fp.mul RNE x2 (fp #b0 #b01111110 #b11111110111110011101110))))
(let ((.def_554 (fp.mul RNE x1 (fp #b0 #b01111100 #b10000101000111101011100))))
(let ((.def_550 (fp.mul RNE x0 (fp #b1 #b01111110 #b10000111101011100001010))))
(let ((.def_551 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_550)))
(let ((.def_555 (fp.add RNE .def_551 .def_554)))
(let ((.def_559 (fp.add RNE .def_555 .def_558)))
(let ((.def_564 (fp.add RNE .def_559 .def_563)))
(let ((.def_569 (fp.add RNE .def_564 .def_568)))
(let ((.def_571 (fp.add RNE .def_569 .def_570)))
(let ((.def_574 (fp.add RNE .def_571 .def_573)))
(let ((.def_575 (fp.leq .def_574 (fp #b1 #b01111110 #b10101110100101111000111))))
.def_575))))))))))))))))
(assert (let ((.def_604 (fp.mul RNE x6 (fp #b0 #b01111110 #b01010011111101111100111))))
(let ((.def_600 (fp.mul RNE x5 (fp #b0 #b01111110 #b11111001010110000001000))))
(let ((.def_596 (fp.mul RNE x4 (fp #b0 #b01111011 #b11010111000010100011111))))
(let ((.def_592 (fp.mul RNE x3 (fp #b1 #b01111101 #b00000010000011000100101))))
(let ((.def_587 (fp.mul RNE x2 (fp #b0 #b01111100 #b11001000101101000011101))))
(let ((.def_583 (fp.mul RNE x1 (fp #b0 #b01111100 #b10011011101001011110010))))
(let ((.def_579 (fp.mul RNE x0 (fp #b0 #b01111101 #b00011111101111100111011))))
(let ((.def_580 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_579)))
(let ((.def_584 (fp.add RNE .def_580 .def_583)))
(let ((.def_588 (fp.add RNE .def_584 .def_587)))
(let ((.def_593 (fp.add RNE .def_588 .def_592)))
(let ((.def_597 (fp.add RNE .def_593 .def_596)))
(let ((.def_601 (fp.add RNE .def_597 .def_600)))
(let ((.def_605 (fp.add RNE .def_601 .def_604)))
(let ((.def_606 (fp.leq .def_605 (fp #b1 #b01111101 #b11011010000111001010110))))
.def_606))))))))))))))))
(check-sat)
