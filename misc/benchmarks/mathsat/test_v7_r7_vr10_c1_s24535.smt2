(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_80 (fp.mul RNE x6 (fp #b0 #b01111101 #b01111110111110011101110))))
(let ((.def_76 (fp.mul RNE x5 (fp #b1 #b01111100 #b00011110101110000101001))))
(let ((.def_71 (fp.mul RNE x4 (fp #b0 #b01111110 #b11011111101111100111011))))
(let ((.def_67 (fp.mul RNE x3 (fp #b1 #b01111101 #b10111110011101101100100))))
(let ((.def_62 (fp.mul RNE x2 (fp #b1 #b01111101 #b10101001111110111110100))))
(let ((.def_57 (fp.mul RNE x1 (fp #b1 #b01111110 #b10010011011101001011110))))
(let ((.def_52 (fp.mul RNE x0 (fp #b1 #b01111101 #b00111100011010100111111))))
(let ((.def_53 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_52)))
(let ((.def_58 (fp.add RNE .def_53 .def_57)))
(let ((.def_63 (fp.add RNE .def_58 .def_62)))
(let ((.def_68 (fp.add RNE .def_63 .def_67)))
(let ((.def_72 (fp.add RNE .def_68 .def_71)))
(let ((.def_77 (fp.add RNE .def_72 .def_76)))
(let ((.def_81 (fp.add RNE .def_77 .def_80)))
(let ((.def_82 (fp.leq (fp #b1 #b01111011 #b00001110010101100000010) .def_81)))
.def_82))))))))))))))))
(assert (let ((.def_113 (fp.mul RNE x6 (fp #b1 #b01111100 #b01100100010110100001110))))
(let ((.def_108 (fp.mul RNE x5 (fp #b0 #b01111100 #b00000100000110001001010))))
(let ((.def_104 (fp.mul RNE x4 (fp #b0 #b01111110 #b01011000000100000110001))))
(let ((.def_100 (fp.mul RNE x3 (fp #b0 #b01111110 #b10011101001011110001101))))
(let ((.def_96 (fp.mul RNE x2 (fp #b1 #b01111101 #b11011100001010001111011))))
(let ((.def_91 (fp.mul RNE x1 (fp #b0 #b01111100 #b01101100100010110100010))))
(let ((.def_87 (fp.mul RNE x0 (fp #b0 #b01111100 #b00100100110111010011000))))
(let ((.def_88 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_87)))
(let ((.def_92 (fp.add RNE .def_88 .def_91)))
(let ((.def_97 (fp.add RNE .def_92 .def_96)))
(let ((.def_101 (fp.add RNE .def_97 .def_100)))
(let ((.def_105 (fp.add RNE .def_101 .def_104)))
(let ((.def_109 (fp.add RNE .def_105 .def_108)))
(let ((.def_114 (fp.add RNE .def_109 .def_113)))
(let ((.def_115 (fp.leq .def_114 (fp #b0 #b01111110 #b01101110100101111000111))))
.def_115))))))))))))))))
(assert (let ((.def_148 (fp.mul RNE x6 (fp #b0 #b01111110 #b01000001100010010011100))))
(let ((.def_144 (fp.mul RNE x5 (fp #b0 #b01111100 #b10100001110010101100000))))
(let ((.def_140 (fp.mul RNE x4 (fp #b0 #b01111101 #b00110100001110010101100))))
(let ((.def_136 (fp.mul RNE x3 (fp #b1 #b01111101 #b11010011111101111100111))))
(let ((.def_131 (fp.mul RNE x2 (fp #b1 #b01111110 #b11011101101100100010111))))
(let ((.def_126 (fp.mul RNE x1 (fp #b0 #b01111110 #b10100000110001001001110))))
(let ((.def_122 (fp.mul RNE x0 (fp #b1 #b01111110 #b10011011001000101101000))))
(let ((.def_123 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_122)))
(let ((.def_127 (fp.add RNE .def_123 .def_126)))
(let ((.def_132 (fp.add RNE .def_127 .def_131)))
(let ((.def_137 (fp.add RNE .def_132 .def_136)))
(let ((.def_141 (fp.add RNE .def_137 .def_140)))
(let ((.def_145 (fp.add RNE .def_141 .def_144)))
(let ((.def_149 (fp.add RNE .def_145 .def_148)))
(let ((.def_150 (fp.leq .def_149 (fp #b1 #b01111101 #b00100001110010101100000))))
.def_150))))))))))))))))
(assert (let ((.def_183 (fp.mul RNE x6 (fp #b0 #b01111110 #b10101011000000100000110))))
(let ((.def_179 (fp.mul RNE x5 (fp #b0 #b01111101 #b10110111010010111100011))))
(let ((.def_175 (fp.mul RNE x4 (fp #b1 #b01111101 #b00111101011100001010010))))
(let ((.def_170 (fp.mul RNE x3 (fp #b0 #b01111110 #b10001001101110100101111))))
(let ((.def_166 (fp.mul RNE x2 (fp #b1 #b01111110 #b01001000101101000011101))))
(let ((.def_161 (fp.mul RNE x1 (fp #b1 #b01111110 #b00101001111110111110100))))
(let ((.def_156 (fp.mul RNE x0 (fp #b0 #b01111110 #b11011001000101101000100))))
(let ((.def_157 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_156)))
(let ((.def_162 (fp.add RNE .def_157 .def_161)))
(let ((.def_167 (fp.add RNE .def_162 .def_166)))
(let ((.def_171 (fp.add RNE .def_167 .def_170)))
(let ((.def_176 (fp.add RNE .def_171 .def_175)))
(let ((.def_180 (fp.add RNE .def_176 .def_179)))
(let ((.def_184 (fp.add RNE .def_180 .def_183)))
(let ((.def_185 (fp.leq (fp #b1 #b01111110 #b10101110000101000111101) .def_184)))
.def_185))))))))))))))))
(assert (let ((.def_216 (fp.mul RNE x6 (fp #b0 #b01111101 #b01101110100101111000111))))
(let ((.def_212 (fp.mul RNE x5 (fp #b1 #b01110111 #b10001001001101110100110))))
(let ((.def_207 (fp.mul RNE x4 (fp #b0 #b01111101 #b11011000000100000110001))))
(let ((.def_202 (fp.mul RNE x2 (fp #b1 #b01111110 #b10110010101100000010000))))
(let ((.def_197 (fp.mul RNE x1 (fp #b1 #b01111110 #b00000000100000110001001))))
(let ((.def_192 (fp.mul RNE x0 (fp #b1 #b01111010 #b01100000010000011000101))))
(let ((.def_193 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_192)))
(let ((.def_198 (fp.add RNE .def_193 .def_197)))
(let ((.def_203 (fp.add RNE .def_198 .def_202)))
(let ((.def_136 (fp.mul RNE x3 (fp #b1 #b01111101 #b11010011111101111100111))))
(let ((.def_204 (fp.add RNE .def_136 .def_203)))
(let ((.def_208 (fp.add RNE .def_204 .def_207)))
(let ((.def_213 (fp.add RNE .def_208 .def_212)))
(let ((.def_217 (fp.add RNE .def_213 .def_216)))
(let ((.def_218 (fp.leq (fp #b1 #b01111110 #b10100010010011011101001) .def_217)))
.def_218))))))))))))))))
(assert (let ((.def_249 (fp.mul RNE x6 (fp #b1 #b01111101 #b10010110100001110010110))))
(let ((.def_244 (fp.mul RNE x5 (fp #b1 #b01111100 #b00101000111101011100001))))
(let ((.def_239 (fp.mul RNE x4 (fp #b1 #b01111101 #b10010011011101001011110))))
(let ((.def_234 (fp.mul RNE x3 (fp #b1 #b01111101 #b11110101110000101001000))))
(let ((.def_229 (fp.mul RNE x2 (fp #b1 #b01111110 #b10011011001000101101000))))
(let ((.def_227 (fp.mul RNE x1 (fp #b0 #b01111110 #b01000001100010010011100))))
(let ((.def_225 (fp.mul RNE x0 (fp #b1 #b01111110 #b01001001101110100101111))))
(let ((.def_226 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_225)))
(let ((.def_228 (fp.add RNE .def_226 .def_227)))
(let ((.def_230 (fp.add RNE .def_228 .def_229)))
(let ((.def_235 (fp.add RNE .def_230 .def_234)))
(let ((.def_240 (fp.add RNE .def_235 .def_239)))
(let ((.def_245 (fp.add RNE .def_240 .def_244)))
(let ((.def_250 (fp.add RNE .def_245 .def_249)))
(let ((.def_251 (fp.leq (fp #b1 #b01111110 #b00011001100110011001101) .def_250)))
.def_251))))))))))))))))
(assert (let ((.def_285 (fp.mul RNE x6 (fp #b1 #b01111011 #b11001110110110010001011))))
(let ((.def_280 (fp.mul RNE x5 (fp #b0 #b01111110 #b10010000111001010110000))))
(let ((.def_276 (fp.mul RNE x4 (fp #b0 #b01111101 #b00101101000011100101011))))
(let ((.def_272 (fp.mul RNE x3 (fp #b1 #b01111101 #b11000010100011110101110))))
(let ((.def_267 (fp.mul RNE x2 (fp #b1 #b01111100 #b11011001000101101000100))))
(let ((.def_262 (fp.mul RNE x1 (fp #b0 #b01111110 #b01101100100010110100010))))
(let ((.def_258 (fp.mul RNE x0 (fp #b1 #b01111110 #b00110110010001011010001))))
(let ((.def_259 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_258)))
(let ((.def_263 (fp.add RNE .def_259 .def_262)))
(let ((.def_268 (fp.add RNE .def_263 .def_267)))
(let ((.def_273 (fp.add RNE .def_268 .def_272)))
(let ((.def_277 (fp.add RNE .def_273 .def_276)))
(let ((.def_281 (fp.add RNE .def_277 .def_280)))
(let ((.def_286 (fp.add RNE .def_281 .def_285)))
(let ((.def_287 (fp.leq .def_286 (fp #b1 #b01111101 #b00010011011101001011110))))
.def_287))))))))))))))))
(check-sat)
