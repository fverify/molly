(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_78 (fp.mul RNE x6 (fp #b0 #b01111100 #b10100101111000110101010))))
(let ((.def_74 (fp.mul RNE x5 (fp #b0 #b01111110 #b10000100000110001001010))))
(let ((.def_70 (fp.mul RNE x4 (fp #b1 #b01111101 #b01010011111101111100111))))
(let ((.def_65 (fp.mul RNE x3 (fp #b0 #b01111110 #b11000111001010110000001))))
(let ((.def_61 (fp.mul RNE x2 (fp #b1 #b01111110 #b01010100011110101110001))))
(let ((.def_56 (fp.mul RNE x1 (fp #b0 #b01111101 #b10110011001100110011010))))
(let ((.def_52 (fp.mul RNE x0 (fp #b1 #b01111110 #b01110100001110010101100))))
(let ((.def_53 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_52)))
(let ((.def_57 (fp.add RNE .def_53 .def_56)))
(let ((.def_62 (fp.add RNE .def_57 .def_61)))
(let ((.def_66 (fp.add RNE .def_62 .def_65)))
(let ((.def_71 (fp.add RNE .def_66 .def_70)))
(let ((.def_75 (fp.add RNE .def_71 .def_74)))
(let ((.def_79 (fp.add RNE .def_75 .def_78)))
(let ((.def_80 (fp.leq .def_79 (fp #b1 #b01111110 #b10110101001111110111110))))
.def_80))))))))))))))))
(assert (let ((.def_112 (fp.mul RNE x6 (fp #b1 #b01111100 #b11100101011000000100001))))
(let ((.def_107 (fp.mul RNE x5 (fp #b0 #b01111101 #b10010110100001110010110))))
(let ((.def_103 (fp.mul RNE x4 (fp #b1 #b01111110 #b10110011001100110011010))))
(let ((.def_98 (fp.mul RNE x3 (fp #b0 #b01111110 #b00111010010111100011011))))
(let ((.def_94 (fp.mul RNE x2 (fp #b0 #b01111101 #b10101001111110111110100))))
(let ((.def_90 (fp.mul RNE x1 (fp #b1 #b01111001 #b01101000011100101011000))))
(let ((.def_85 (fp.mul RNE x0 (fp #b0 #b01111110 #b00011101001011110001101))))
(let ((.def_86 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_85)))
(let ((.def_91 (fp.add RNE .def_86 .def_90)))
(let ((.def_95 (fp.add RNE .def_91 .def_94)))
(let ((.def_99 (fp.add RNE .def_95 .def_98)))
(let ((.def_104 (fp.add RNE .def_99 .def_103)))
(let ((.def_108 (fp.add RNE .def_104 .def_107)))
(let ((.def_113 (fp.add RNE .def_108 .def_112)))
(let ((.def_114 (fp.leq (fp #b0 #b01111101 #b01001100110011001100110) .def_113)))
.def_114))))))))))))))))
(assert (let ((.def_145 (fp.mul RNE x6 (fp #b0 #b01111110 #b00000000000000000000000))))
(let ((.def_141 (fp.mul RNE x5 (fp #b0 #b01111101 #b01001101110100101111001))))
(let ((.def_137 (fp.mul RNE x4 (fp #b0 #b01111101 #b00100100110111010011000))))
(let ((.def_133 (fp.mul RNE x3 (fp #b1 #b01111110 #b10010001011010000111001))))
(let ((.def_128 (fp.mul RNE x2 (fp #b1 #b01111110 #b10110001101010011111110))))
(let ((.def_123 (fp.mul RNE x1 (fp #b0 #b01111100 #b01001101110100101111001))))
(let ((.def_119 (fp.mul RNE x0 (fp #b0 #b01111101 #b01000111101011100001010))))
(let ((.def_120 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_119)))
(let ((.def_124 (fp.add RNE .def_120 .def_123)))
(let ((.def_129 (fp.add RNE .def_124 .def_128)))
(let ((.def_134 (fp.add RNE .def_129 .def_133)))
(let ((.def_138 (fp.add RNE .def_134 .def_137)))
(let ((.def_142 (fp.add RNE .def_138 .def_141)))
(let ((.def_146 (fp.add RNE .def_142 .def_145)))
(let ((.def_147 (fp.leq .def_146 (fp #b0 #b01111110 #b10010100111111011111010))))
.def_147))))))))))))))))
(assert (let ((.def_178 (fp.mul RNE x6 (fp #b0 #b01111100 #b11100111011011001000110))))
(let ((.def_174 (fp.mul RNE x5 (fp #b0 #b01111100 #b00110101001111110111110))))
(let ((.def_170 (fp.mul RNE x4 (fp #b0 #b01111110 #b01010110000001000001100))))
(let ((.def_166 (fp.mul RNE x3 (fp #b0 #b01111101 #b01001110110110010001011))))
(let ((.def_162 (fp.mul RNE x2 (fp #b0 #b01111110 #b10011001100110011001101))))
(let ((.def_158 (fp.mul RNE x1 (fp #b0 #b01111110 #b11101100100010110100010))))
(let ((.def_154 (fp.mul RNE x0 (fp #b1 #b01111101 #b01001010110000001000010))))
(let ((.def_155 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_154)))
(let ((.def_159 (fp.add RNE .def_155 .def_158)))
(let ((.def_163 (fp.add RNE .def_159 .def_162)))
(let ((.def_167 (fp.add RNE .def_163 .def_166)))
(let ((.def_171 (fp.add RNE .def_167 .def_170)))
(let ((.def_175 (fp.add RNE .def_171 .def_174)))
(let ((.def_179 (fp.add RNE .def_175 .def_178)))
(let ((.def_180 (fp.leq .def_179 (fp #b1 #b01111100 #b11000000100000110001001))))
.def_180))))))))))))))))
(assert (let ((.def_214 (fp.mul RNE x6 (fp #b1 #b01111100 #b00011010100111111011111))))
(let ((.def_209 (fp.mul RNE x5 (fp #b1 #b01111110 #b01011110001101010100000))))
(let ((.def_204 (fp.mul RNE x4 (fp #b0 #b01111101 #b11110010101100000010000))))
(let ((.def_200 (fp.mul RNE x3 (fp #b1 #b01111110 #b11001100110011001100110))))
(let ((.def_195 (fp.mul RNE x2 (fp #b0 #b01111110 #b00010100111111011111010))))
(let ((.def_191 (fp.mul RNE x1 (fp #b1 #b01111100 #b10110000001000001100010))))
(let ((.def_186 (fp.mul RNE x0 (fp #b0 #b01111110 #b11101111100111011011001))))
(let ((.def_187 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_186)))
(let ((.def_192 (fp.add RNE .def_187 .def_191)))
(let ((.def_196 (fp.add RNE .def_192 .def_195)))
(let ((.def_201 (fp.add RNE .def_196 .def_200)))
(let ((.def_205 (fp.add RNE .def_201 .def_204)))
(let ((.def_210 (fp.add RNE .def_205 .def_209)))
(let ((.def_215 (fp.add RNE .def_210 .def_214)))
(let ((.def_216 (fp.leq .def_215 (fp #b1 #b01111100 #b10111100011010100111111))))
.def_216))))))))))))))))
(assert (let ((.def_247 (fp.mul RNE x6 (fp #b0 #b01111110 #b11000111001010110000001))))
(let ((.def_245 (fp.mul RNE x5 (fp #b1 #b01111110 #b11101001011110001101010))))
(let ((.def_240 (fp.mul RNE x4 (fp #b0 #b01111110 #b01000011000100100110111))))
(let ((.def_236 (fp.mul RNE x3 (fp #b0 #b01111101 #b00010100011110101110001))))
(let ((.def_232 (fp.mul RNE x2 (fp #b1 #b01111100 #b11010111000010100011111))))
(let ((.def_227 (fp.mul RNE x1 (fp #b1 #b01111101 #b10010011011101001011110))))
(let ((.def_222 (fp.mul RNE x0 (fp #b0 #b01111110 #b11000111101011100001010))))
(let ((.def_223 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_222)))
(let ((.def_228 (fp.add RNE .def_223 .def_227)))
(let ((.def_233 (fp.add RNE .def_228 .def_232)))
(let ((.def_237 (fp.add RNE .def_233 .def_236)))
(let ((.def_241 (fp.add RNE .def_237 .def_240)))
(let ((.def_246 (fp.add RNE .def_241 .def_245)))
(let ((.def_248 (fp.add RNE .def_246 .def_247)))
(let ((.def_249 (fp.leq .def_248 (fp #b1 #b01111100 #b10111110011101101100100))))
.def_249))))))))))))))))
(assert (let ((.def_278 (fp.mul RNE x6 (fp #b0 #b01111100 #b10010011011101001011110))))
(let ((.def_274 (fp.mul RNE x5 (fp #b1 #b01111100 #b00001010001111010111000))))
(let ((.def_269 (fp.mul RNE x4 (fp #b1 #b01111110 #b01111101111100111011011))))
(let ((.def_264 (fp.mul RNE x3 (fp #b0 #b01111100 #b01001101110100101111001))))
(let ((.def_262 (fp.mul RNE x2 (fp #b0 #b01111110 #b10011100001010001111011))))
(let ((.def_258 (fp.mul RNE x1 (fp #b0 #b01111101 #b01111010111000010100100))))
(let ((.def_254 (fp.mul RNE x0 (fp #b0 #b01111110 #b10011011001000101101000))))
(let ((.def_255 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_254)))
(let ((.def_259 (fp.add RNE .def_255 .def_258)))
(let ((.def_263 (fp.add RNE .def_259 .def_262)))
(let ((.def_265 (fp.add RNE .def_263 .def_264)))
(let ((.def_270 (fp.add RNE .def_265 .def_269)))
(let ((.def_275 (fp.add RNE .def_270 .def_274)))
(let ((.def_279 (fp.add RNE .def_275 .def_278)))
(let ((.def_280 (fp.leq .def_279 (fp #b0 #b01111110 #b01100000010000011000101))))
.def_280))))))))))))))))
(check-sat)
