(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_78 (fp.mul RNE x6 (fp #b1 #b01111110 #b00010011011101001011110))))
(let ((.def_73 (fp.mul RNE x5 (fp #b0 #b01111011 #b01001011110001101010100))))
(let ((.def_69 (fp.mul RNE x4 (fp #b1 #b01111110 #b10000101000111101011100))))
(let ((.def_64 (fp.mul RNE x3 (fp #b0 #b01111110 #b01011010100111111011111))))
(let ((.def_60 (fp.mul RNE x2 (fp #b1 #b01111110 #b00100110111010010111100))))
(let ((.def_55 (fp.mul RNE x1 (fp #b1 #b01111101 #b00110110010001011010001))))
(let ((.def_50 (fp.mul RNE x0 (fp #b0 #b01111110 #b11001100110011001100110))))
(let ((.def_51 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_50)))
(let ((.def_56 (fp.add RNE .def_51 .def_55)))
(let ((.def_61 (fp.add RNE .def_56 .def_60)))
(let ((.def_65 (fp.add RNE .def_61 .def_64)))
(let ((.def_70 (fp.add RNE .def_65 .def_69)))
(let ((.def_74 (fp.add RNE .def_70 .def_73)))
(let ((.def_79 (fp.add RNE .def_74 .def_78)))
(let ((.def_80 (fp.leq (fp #b0 #b01111101 #b11110011101101100100011) .def_79)))
.def_80))))))))))))))))
(assert (let ((.def_113 (fp.mul RNE x6 (fp #b1 #b01111110 #b10010100111111011111010))))
(let ((.def_108 (fp.mul RNE x5 (fp #b0 #b01111101 #b01110001101010011111110))))
(let ((.def_104 (fp.mul RNE x4 (fp #b0 #b01111110 #b11111110111110011101110))))
(let ((.def_100 (fp.mul RNE x3 (fp #b1 #b01111100 #b01010001111010111000011))))
(let ((.def_95 (fp.mul RNE x2 (fp #b1 #b01111101 #b10011010100111111011111))))
(let ((.def_90 (fp.mul RNE x1 (fp #b0 #b01111101 #b10100111111011111001111))))
(let ((.def_86 (fp.mul RNE x0 (fp #b1 #b01111110 #b00101010011111101111101))))
(let ((.def_87 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_86)))
(let ((.def_91 (fp.add RNE .def_87 .def_90)))
(let ((.def_96 (fp.add RNE .def_91 .def_95)))
(let ((.def_101 (fp.add RNE .def_96 .def_100)))
(let ((.def_105 (fp.add RNE .def_101 .def_104)))
(let ((.def_109 (fp.add RNE .def_105 .def_108)))
(let ((.def_114 (fp.add RNE .def_109 .def_113)))
(let ((.def_115 (fp.leq .def_114 (fp #b0 #b01111101 #b11010011111101111100111))))
.def_115))))))))))))))))
(assert (let ((.def_149 (fp.mul RNE x6 (fp #b0 #b01111010 #b00100110111010010111100))))
(let ((.def_145 (fp.mul RNE x5 (fp #b1 #b01111110 #b11011111001110110110010))))
(let ((.def_140 (fp.mul RNE x4 (fp #b1 #b01111110 #b10110101110000101001000))))
(let ((.def_135 (fp.mul RNE x3 (fp #b0 #b01111110 #b11000111001010110000001))))
(let ((.def_131 (fp.mul RNE x2 (fp #b1 #b01111101 #b00011100101011000000100))))
(let ((.def_126 (fp.mul RNE x1 (fp #b1 #b01111101 #b10010100011110101110001))))
(let ((.def_121 (fp.mul RNE x0 (fp #b1 #b01111101 #b01001100110011001100110))))
(let ((.def_122 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_121)))
(let ((.def_127 (fp.add RNE .def_122 .def_126)))
(let ((.def_132 (fp.add RNE .def_127 .def_131)))
(let ((.def_136 (fp.add RNE .def_132 .def_135)))
(let ((.def_141 (fp.add RNE .def_136 .def_140)))
(let ((.def_146 (fp.add RNE .def_141 .def_145)))
(let ((.def_150 (fp.add RNE .def_146 .def_149)))
(let ((.def_151 (fp.leq (fp #b0 #b01111110 #b00110000101000111101100) .def_150)))
.def_151))))))))))))))))
(assert (let ((.def_183 (fp.mul RNE x6 (fp #b1 #b01111110 #b10001011010000111001011))))
(let ((.def_178 (fp.mul RNE x5 (fp #b1 #b01111110 #b01110101001111110111110))))
(let ((.def_173 (fp.mul RNE x4 (fp #b0 #b01111110 #b10101111000110101010000))))
(let ((.def_169 (fp.mul RNE x3 (fp #b0 #b01111101 #b10001011010000111001011))))
(let ((.def_165 (fp.mul RNE x2 (fp #b1 #b01111110 #b01111110011101101100100))))
(let ((.def_160 (fp.mul RNE x1 (fp #b0 #b01111011 #b10001101010011111110000))))
(let ((.def_156 (fp.mul RNE x0 (fp #b0 #b01111110 #b10000011100101011000001))))
(let ((.def_157 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_156)))
(let ((.def_161 (fp.add RNE .def_157 .def_160)))
(let ((.def_166 (fp.add RNE .def_161 .def_165)))
(let ((.def_170 (fp.add RNE .def_166 .def_169)))
(let ((.def_174 (fp.add RNE .def_170 .def_173)))
(let ((.def_179 (fp.add RNE .def_174 .def_178)))
(let ((.def_184 (fp.add RNE .def_179 .def_183)))
(let ((.def_185 (fp.leq .def_184 (fp #b0 #b01111110 #b00111011011001000101101))))
.def_185))))))))))))))))
(assert (let ((.def_220 (fp.mul RNE x6 (fp #b1 #b01111101 #b10010000011000100100111))))
(let ((.def_215 (fp.mul RNE x5 (fp #b1 #b01111110 #b11011011101001011110010))))
(let ((.def_210 (fp.mul RNE x4 (fp #b0 #b01111101 #b01101100100010110100010))))
(let ((.def_206 (fp.mul RNE x3 (fp #b0 #b01111101 #b01011011001000101101000))))
(let ((.def_202 (fp.mul RNE x2 (fp #b1 #b01111011 #b01001111110111110011110))))
(let ((.def_197 (fp.mul RNE x1 (fp #b1 #b01111101 #b11011101001011110001101))))
(let ((.def_192 (fp.mul RNE x0 (fp #b1 #b01111110 #b00001100110011001100110))))
(let ((.def_193 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_192)))
(let ((.def_198 (fp.add RNE .def_193 .def_197)))
(let ((.def_203 (fp.add RNE .def_198 .def_202)))
(let ((.def_207 (fp.add RNE .def_203 .def_206)))
(let ((.def_211 (fp.add RNE .def_207 .def_210)))
(let ((.def_216 (fp.add RNE .def_211 .def_215)))
(let ((.def_221 (fp.add RNE .def_216 .def_220)))
(let ((.def_222 (fp.leq (fp #b1 #b01111101 #b01101101100100010110100) .def_221)))
.def_222))))))))))))))))
(assert (let ((.def_256 (fp.mul RNE x6 (fp #b0 #b01111110 #b01111111011111001110111))))
(let ((.def_252 (fp.mul RNE x5 (fp #b0 #b01111110 #b11000100000110001001010))))
(let ((.def_248 (fp.mul RNE x4 (fp #b1 #b01111000 #b01000111101011100001010))))
(let ((.def_243 (fp.mul RNE x3 (fp #b0 #b01110110 #b10001001001101110100110))))
(let ((.def_239 (fp.mul RNE x2 (fp #b1 #b01111100 #b10011111101111100111011))))
(let ((.def_234 (fp.mul RNE x1 (fp #b1 #b01111110 #b11101101100100010110100))))
(let ((.def_229 (fp.mul RNE x0 (fp #b1 #b01111110 #b10001101110100101111001))))
(let ((.def_230 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_229)))
(let ((.def_235 (fp.add RNE .def_230 .def_234)))
(let ((.def_240 (fp.add RNE .def_235 .def_239)))
(let ((.def_244 (fp.add RNE .def_240 .def_243)))
(let ((.def_249 (fp.add RNE .def_244 .def_248)))
(let ((.def_253 (fp.add RNE .def_249 .def_252)))
(let ((.def_257 (fp.add RNE .def_253 .def_256)))
(let ((.def_258 (fp.leq .def_257 (fp #b1 #b01111101 #b00101000111101011100001))))
.def_258))))))))))))))))
(assert (let ((.def_292 (fp.mul RNE x6 (fp #b1 #b01111110 #b00011110101110000101001))))
(let ((.def_287 (fp.mul RNE x5 (fp #b0 #b01111110 #b00110001001001101110101))))
(let ((.def_283 (fp.mul RNE x4 (fp #b1 #b01111010 #b01001111110111110011110))))
(let ((.def_278 (fp.mul RNE x3 (fp #b1 #b01111101 #b10001111010111000010100))))
(let ((.def_273 (fp.mul RNE x2 (fp #b1 #b01111100 #b01111010111000010100100))))
(let ((.def_268 (fp.mul RNE x1 (fp #b0 #b01111101 #b01010010111100011010101))))
(let ((.def_264 (fp.mul RNE x0 (fp #b1 #b01111101 #b10110010001011010000111))))
(let ((.def_265 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_264)))
(let ((.def_269 (fp.add RNE .def_265 .def_268)))
(let ((.def_274 (fp.add RNE .def_269 .def_273)))
(let ((.def_279 (fp.add RNE .def_274 .def_278)))
(let ((.def_284 (fp.add RNE .def_279 .def_283)))
(let ((.def_288 (fp.add RNE .def_284 .def_287)))
(let ((.def_293 (fp.add RNE .def_288 .def_292)))
(let ((.def_294 (fp.leq .def_293 (fp #b0 #b01111110 #b10101000011100101011000))))
.def_294))))))))))))))))
(assert (let ((.def_321 (fp.mul RNE x6 (fp #b0 #b01111110 #b01011010100111111011111))))
(let ((.def_319 (fp.mul RNE x5 (fp #b0 #b01111011 #b11001010110000001000010))))
(let ((.def_315 (fp.mul RNE x4 (fp #b0 #b01111100 #b01110000101000111101100))))
(let ((.def_311 (fp.mul RNE x3 (fp #b1 #b01111110 #b01000101101000011100101))))
(let ((.def_306 (fp.mul RNE x2 (fp #b0 #b01111101 #b00000101000111101011100))))
(let ((.def_302 (fp.mul RNE x1 (fp #b1 #b01111101 #b11111110111110011101110))))
(let ((.def_297 (fp.mul RNE x0 (fp #b1 #b01111010 #b01001111110111110011110))))
(let ((.def_298 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_297)))
(let ((.def_303 (fp.add RNE .def_298 .def_302)))
(let ((.def_307 (fp.add RNE .def_303 .def_306)))
(let ((.def_312 (fp.add RNE .def_307 .def_311)))
(let ((.def_316 (fp.add RNE .def_312 .def_315)))
(let ((.def_320 (fp.add RNE .def_316 .def_319)))
(let ((.def_322 (fp.add RNE .def_320 .def_321)))
(let ((.def_323 (fp.leq (fp #b0 #b01111101 #b00111101011100001010010) .def_322)))
.def_323))))))))))))))))
(assert (let ((.def_357 (fp.mul RNE x6 (fp #b0 #b01111101 #b00000111001010110000001))))
(let ((.def_353 (fp.mul RNE x5 (fp #b1 #b01111110 #b00101101000011100101011))))
(let ((.def_348 (fp.mul RNE x4 (fp #b0 #b01111101 #b10010101100000010000011))))
(let ((.def_344 (fp.mul RNE x3 (fp #b1 #b01111101 #b11011000000100000110001))))
(let ((.def_339 (fp.mul RNE x2 (fp #b1 #b01111101 #b11001000101101000011101))))
(let ((.def_334 (fp.mul RNE x1 (fp #b1 #b01111011 #b10101110000101000111101))))
(let ((.def_329 (fp.mul RNE x0 (fp #b0 #b01111100 #b11011001000101101000100))))
(let ((.def_330 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_329)))
(let ((.def_335 (fp.add RNE .def_330 .def_334)))
(let ((.def_340 (fp.add RNE .def_335 .def_339)))
(let ((.def_345 (fp.add RNE .def_340 .def_344)))
(let ((.def_349 (fp.add RNE .def_345 .def_348)))
(let ((.def_354 (fp.add RNE .def_349 .def_353)))
(let ((.def_358 (fp.add RNE .def_354 .def_357)))
(let ((.def_359 (fp.leq .def_358 (fp #b1 #b01111101 #b11110100101111000110101))))
.def_359))))))))))))))))
(assert (let ((.def_389 (fp.mul RNE x6 (fp #b0 #b01111101 #b11100101011000000100001))))
(let ((.def_385 (fp.mul RNE x5 (fp #b0 #b01111110 #b10101011000000100000110))))
(let ((.def_381 (fp.mul RNE x4 (fp #b0 #b01111000 #b10001001001101110100110))))
(let ((.def_377 (fp.mul RNE x3 (fp #b1 #b01111101 #b10101000111101011100001))))
(let ((.def_372 (fp.mul RNE x2 (fp #b0 #b01111101 #b10111011011001000101101))))
(let ((.def_368 (fp.mul RNE x1 (fp #b1 #b01111110 #b10011100101011000000100))))
(let ((.def_363 (fp.mul RNE x0 (fp #b1 #b01111110 #b01110101001111110111110))))
(let ((.def_364 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_363)))
(let ((.def_369 (fp.add RNE .def_364 .def_368)))
(let ((.def_373 (fp.add RNE .def_369 .def_372)))
(let ((.def_378 (fp.add RNE .def_373 .def_377)))
(let ((.def_382 (fp.add RNE .def_378 .def_381)))
(let ((.def_386 (fp.add RNE .def_382 .def_385)))
(let ((.def_390 (fp.add RNE .def_386 .def_389)))
(let ((.def_391 (fp.leq .def_390 (fp #b1 #b01111110 #b10010001111010111000011))))
.def_391))))))))))))))))
(assert (let ((.def_422 (fp.mul RNE x6 (fp #b0 #b01111101 #b10111011011001000101101))))
(let ((.def_420 (fp.mul RNE x5 (fp #b0 #b01111110 #b11001001001101110100110))))
(let ((.def_416 (fp.mul RNE x4 (fp #b0 #b01111011 #b00100010110100001110011))))
(let ((.def_412 (fp.mul RNE x3 (fp #b1 #b01111110 #b11011100101011000000100))))
(let ((.def_407 (fp.mul RNE x2 (fp #b1 #b01111110 #b00111111011111001110111))))
(let ((.def_402 (fp.mul RNE x1 (fp #b0 #b01111101 #b10000000000000000000000))))
(let ((.def_398 (fp.mul RNE x0 (fp #b1 #b01111101 #b11111100111011011001001))))
(let ((.def_399 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_398)))
(let ((.def_403 (fp.add RNE .def_399 .def_402)))
(let ((.def_408 (fp.add RNE .def_403 .def_407)))
(let ((.def_413 (fp.add RNE .def_408 .def_412)))
(let ((.def_417 (fp.add RNE .def_413 .def_416)))
(let ((.def_421 (fp.add RNE .def_417 .def_420)))
(let ((.def_423 (fp.add RNE .def_421 .def_422)))
(let ((.def_424 (fp.leq (fp #b1 #b01111110 #b01111100111011011001001) .def_423)))
.def_424))))))))))))))))
(assert (let ((.def_457 (fp.mul RNE x6 (fp #b1 #b01111110 #b10011110001101010100000))))
(let ((.def_452 (fp.mul RNE x5 (fp #b1 #b01111110 #b10100000110001001001110))))
(let ((.def_447 (fp.mul RNE x4 (fp #b0 #b01111110 #b01110010001011010000111))))
(let ((.def_443 (fp.mul RNE x3 (fp #b1 #b01111011 #b00100110111010010111100))))
(let ((.def_438 (fp.mul RNE x2 (fp #b0 #b01111110 #b11110011101101100100011))))
(let ((.def_434 (fp.mul RNE x1 (fp #b0 #b01111110 #b10101101100100010110100))))
(let ((.def_430 (fp.mul RNE x0 (fp #b0 #b01111101 #b11101101100100010110100))))
(let ((.def_431 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_430)))
(let ((.def_435 (fp.add RNE .def_431 .def_434)))
(let ((.def_439 (fp.add RNE .def_435 .def_438)))
(let ((.def_444 (fp.add RNE .def_439 .def_443)))
(let ((.def_448 (fp.add RNE .def_444 .def_447)))
(let ((.def_453 (fp.add RNE .def_448 .def_452)))
(let ((.def_458 (fp.add RNE .def_453 .def_457)))
(let ((.def_459 (fp.leq (fp #b1 #b01111101 #b01001000101101000011101) .def_458)))
.def_459))))))))))))))))
(check-sat)
