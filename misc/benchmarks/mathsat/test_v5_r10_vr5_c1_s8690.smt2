(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_62 (fp.mul RNE x4 (fp #b1 #b01111110 #b11011111001110110110010))))
(let ((.def_57 (fp.mul RNE x3 (fp #b1 #b01111110 #b00100011010100111111100))))
(let ((.def_52 (fp.mul RNE x2 (fp #b0 #b01111110 #b11000111001010110000001))))
(let ((.def_48 (fp.mul RNE x1 (fp #b1 #b01111110 #b11100110111010010111100))))
(let ((.def_43 (fp.mul RNE x0 (fp #b0 #b01111101 #b01011011001000101101000))))
(let ((.def_44 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_43)))
(let ((.def_49 (fp.add RNE .def_44 .def_48)))
(let ((.def_53 (fp.add RNE .def_49 .def_52)))
(let ((.def_58 (fp.add RNE .def_53 .def_57)))
(let ((.def_63 (fp.add RNE .def_58 .def_62)))
(let ((.def_64 (fp.leq (fp #b1 #b01111110 #b10010001111010111000011) .def_63)))
.def_64))))))))))))
(assert (let ((.def_88 (fp.mul RNE x4 (fp #b0 #b01111100 #b10110000001000001100010))))
(let ((.def_84 (fp.mul RNE x3 (fp #b0 #b01111011 #b11000010100011110101110))))
(let ((.def_80 (fp.mul RNE x2 (fp #b0 #b01111110 #b01000100000110001001010))))
(let ((.def_76 (fp.mul RNE x1 (fp #b1 #b01111100 #b01011000000100000110001))))
(let ((.def_71 (fp.mul RNE x0 (fp #b1 #b01111110 #b01010000011000100100111))))
(let ((.def_72 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_71)))
(let ((.def_77 (fp.add RNE .def_72 .def_76)))
(let ((.def_81 (fp.add RNE .def_77 .def_80)))
(let ((.def_85 (fp.add RNE .def_81 .def_84)))
(let ((.def_89 (fp.add RNE .def_85 .def_88)))
(let ((.def_90 (fp.leq (fp #b1 #b01111101 #b10101110000101000111101) .def_89)))
.def_90))))))))))))
(assert (let ((.def_115 (fp.mul RNE x4 (fp #b1 #b01111101 #b11110110110010001011010))))
(let ((.def_110 (fp.mul RNE x3 (fp #b1 #b01111100 #b11111101111100111011011))))
(let ((.def_105 (fp.mul RNE x2 (fp #b0 #b01111010 #b01000111101011100001010))))
(let ((.def_101 (fp.mul RNE x1 (fp #b1 #b01111100 #b01011010000111001010110))))
(let ((.def_96 (fp.mul RNE x0 (fp #b1 #b01111110 #b01110010001011010000111))))
(let ((.def_97 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_96)))
(let ((.def_102 (fp.add RNE .def_97 .def_101)))
(let ((.def_106 (fp.add RNE .def_102 .def_105)))
(let ((.def_111 (fp.add RNE .def_106 .def_110)))
(let ((.def_116 (fp.add RNE .def_111 .def_115)))
(let ((.def_117 (fp.leq (fp #b0 #b01111110 #b10010011111101111100111) .def_116)))
.def_117))))))))))))
(assert (let ((.def_142 (fp.mul RNE x4 (fp #b1 #b01111101 #b01001101110100101111001))))
(let ((.def_137 (fp.mul RNE x3 (fp #b0 #b01111110 #b10010010011011101001100))))
(let ((.def_133 (fp.mul RNE x2 (fp #b0 #b01111110 #b01110011101101100100011))))
(let ((.def_129 (fp.mul RNE x1 (fp #b1 #b01111110 #b00101100100010110100010))))
(let ((.def_124 (fp.mul RNE x0 (fp #b1 #b01111101 #b01000100100110111010011))))
(let ((.def_125 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_124)))
(let ((.def_130 (fp.add RNE .def_125 .def_129)))
(let ((.def_134 (fp.add RNE .def_130 .def_133)))
(let ((.def_138 (fp.add RNE .def_134 .def_137)))
(let ((.def_143 (fp.add RNE .def_138 .def_142)))
(let ((.def_144 (fp.leq (fp #b1 #b01111010 #b00101111000110101010000) .def_143)))
.def_144))))))))))))
(assert (let ((.def_169 (fp.mul RNE x4 (fp #b0 #b01111101 #b01000000100000110001001))))
(let ((.def_165 (fp.mul RNE x3 (fp #b1 #b01111110 #b11101111100111011011001))))
(let ((.def_160 (fp.mul RNE x2 (fp #b1 #b01111110 #b00100001110010101100000))))
(let ((.def_155 (fp.mul RNE x1 (fp #b0 #b01111110 #b10010110000001000001100))))
(let ((.def_151 (fp.mul RNE x0 (fp #b1 #b01111110 #b10100110111010010111100))))
(let ((.def_152 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_151)))
(let ((.def_156 (fp.add RNE .def_152 .def_155)))
(let ((.def_161 (fp.add RNE .def_156 .def_160)))
(let ((.def_166 (fp.add RNE .def_161 .def_165)))
(let ((.def_170 (fp.add RNE .def_166 .def_169)))
(let ((.def_171 (fp.leq .def_170 (fp #b1 #b01111110 #b01000000000000000000000))))
.def_171))))))))))))
(assert (let ((.def_197 (fp.mul RNE x4 (fp #b0 #b01111110 #b01100011010100111111100))))
(let ((.def_193 (fp.mul RNE x3 (fp #b1 #b01111110 #b11111101011100001010010))))
(let ((.def_188 (fp.mul RNE x2 (fp #b1 #b01111100 #b00111111011111001110111))))
(let ((.def_183 (fp.mul RNE x1 (fp #b1 #b01111110 #b00111100011010100111111))))
(let ((.def_178 (fp.mul RNE x0 (fp #b1 #b01111110 #b10111101111100111011011))))
(let ((.def_179 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_178)))
(let ((.def_184 (fp.add RNE .def_179 .def_183)))
(let ((.def_189 (fp.add RNE .def_184 .def_188)))
(let ((.def_194 (fp.add RNE .def_189 .def_193)))
(let ((.def_198 (fp.add RNE .def_194 .def_197)))
(let ((.def_199 (fp.leq (fp #b1 #b01111101 #b10100110111010010111100) .def_198)))
.def_199))))))))))))
(assert (let ((.def_224 (fp.mul RNE x4 (fp #b1 #b01111110 #b10100001110010101100000))))
(let ((.def_219 (fp.mul RNE x3 (fp #b0 #b01111110 #b01110111110011101101101))))
(let ((.def_215 (fp.mul RNE x2 (fp #b1 #b01111100 #b10011001100110011001101))))
(let ((.def_210 (fp.mul RNE x1 (fp #b0 #b01111110 #b00111001110110110010001))))
(let ((.def_206 (fp.mul RNE x0 (fp #b1 #b01111101 #b10000000000000000000000))))
(let ((.def_207 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_206)))
(let ((.def_211 (fp.add RNE .def_207 .def_210)))
(let ((.def_216 (fp.add RNE .def_211 .def_215)))
(let ((.def_220 (fp.add RNE .def_216 .def_219)))
(let ((.def_225 (fp.add RNE .def_220 .def_224)))
(let ((.def_226 (fp.leq .def_225 (fp #b1 #b01111100 #b10111100011010100111111))))
.def_226))))))))))))
(assert (let ((.def_251 (fp.mul RNE x4 (fp #b0 #b01111101 #b00001000001100010010011))))
(let ((.def_247 (fp.mul RNE x3 (fp #b1 #b01111110 #b01011011101001011110010))))
(let ((.def_242 (fp.mul RNE x2 (fp #b0 #b01111101 #b01100100010110100001110))))
(let ((.def_238 (fp.mul RNE x1 (fp #b1 #b01111101 #b11110000101000111101100))))
(let ((.def_233 (fp.mul RNE x0 (fp #b1 #b01111101 #b10000111001010110000001))))
(let ((.def_234 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_233)))
(let ((.def_239 (fp.add RNE .def_234 .def_238)))
(let ((.def_243 (fp.add RNE .def_239 .def_242)))
(let ((.def_248 (fp.add RNE .def_243 .def_247)))
(let ((.def_252 (fp.add RNE .def_248 .def_251)))
(let ((.def_253 (fp.leq .def_252 (fp #b1 #b01111110 #b01111011111001110110110))))
.def_253))))))))))))
(assert (let ((.def_279 (fp.mul RNE x4 (fp #b1 #b01111101 #b10001000001100010010011))))
(let ((.def_274 (fp.mul RNE x3 (fp #b1 #b01111110 #b01000100100110111010011))))
(let ((.def_269 (fp.mul RNE x2 (fp #b1 #b01111010 #b01111000110101001111111))))
(let ((.def_264 (fp.mul RNE x1 (fp #b1 #b01110101 #b00000110001001001101111))))
(let ((.def_259 (fp.mul RNE x0 (fp #b0 #b01111110 #b10011110001101010100000))))
(let ((.def_260 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_259)))
(let ((.def_265 (fp.add RNE .def_260 .def_264)))
(let ((.def_270 (fp.add RNE .def_265 .def_269)))
(let ((.def_275 (fp.add RNE .def_270 .def_274)))
(let ((.def_280 (fp.add RNE .def_275 .def_279)))
(let ((.def_281 (fp.leq .def_280 (fp #b1 #b01111110 #b11011101101100100010111))))
.def_281))))))))))))
(assert (let ((.def_304 (fp.mul RNE x4 (fp #b0 #b01111100 #b11111001110110110010001))))
(let ((.def_300 (fp.mul RNE x3 (fp #b0 #b01111101 #b01011011001000101101000))))
(let ((.def_298 (fp.mul RNE x2 (fp #b1 #b01111110 #b11110010001011010000111))))
(let ((.def_293 (fp.mul RNE x1 (fp #b1 #b01111110 #b10100110011001100110011))))
(let ((.def_288 (fp.mul RNE x0 (fp #b1 #b01111100 #b01100000010000011000101))))
(let ((.def_289 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_288)))
(let ((.def_294 (fp.add RNE .def_289 .def_293)))
(let ((.def_299 (fp.add RNE .def_294 .def_298)))
(let ((.def_301 (fp.add RNE .def_299 .def_300)))
(let ((.def_305 (fp.add RNE .def_301 .def_304)))
(let ((.def_306 (fp.leq .def_305 (fp #b1 #b01111101 #b10001111010111000010100))))
.def_306))))))))))))
(check-sat)
