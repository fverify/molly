(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_60 (fp.mul RNE x4 (fp #b0 #b01111110 #b11111100111011011001001))))
(let ((.def_56 (fp.mul RNE x3 (fp #b0 #b01111110 #b10010110000001000001100))))
(let ((.def_52 (fp.mul RNE x2 (fp #b0 #b01111110 #b00000101101000011100101))))
(let ((.def_48 (fp.mul RNE x1 (fp #b1 #b01111110 #b10101101100100010110100))))
(let ((.def_43 (fp.mul RNE x0 (fp #b1 #b01111110 #b01111011011001000101101))))
(let ((.def_44 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_43)))
(let ((.def_49 (fp.add RNE .def_44 .def_48)))
(let ((.def_53 (fp.add RNE .def_49 .def_52)))
(let ((.def_57 (fp.add RNE .def_53 .def_56)))
(let ((.def_61 (fp.add RNE .def_57 .def_60)))
(let ((.def_62 (fp.leq .def_61 (fp #b0 #b01111110 #b01010001011010000111001))))
.def_62))))))))))))
(assert (let ((.def_84 (fp.mul RNE x4 (fp #b0 #b01111011 #b00010010011011101001100))))
(let ((.def_80 (fp.mul RNE x3 (fp #b0 #b01111101 #b11111011111001110110110))))
(let ((.def_76 (fp.mul RNE x2 (fp #b0 #b01111101 #b10111110011101101100100))))
(let ((.def_72 (fp.mul RNE x1 (fp #b0 #b01111110 #b10101000011100101011000))))
(let ((.def_68 (fp.mul RNE x0 (fp #b1 #b01111101 #b11011110001101010100000))))
(let ((.def_69 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_68)))
(let ((.def_73 (fp.add RNE .def_69 .def_72)))
(let ((.def_77 (fp.add RNE .def_73 .def_76)))
(let ((.def_81 (fp.add RNE .def_77 .def_80)))
(let ((.def_85 (fp.add RNE .def_81 .def_84)))
(let ((.def_86 (fp.leq .def_85 (fp #b0 #b01111011 #b00010110100001110010110))))
.def_86))))))))))))
(assert (let ((.def_110 (fp.mul RNE x4 (fp #b0 #b01111110 #b01111001110110110010001))))
(let ((.def_106 (fp.mul RNE x3 (fp #b1 #b01111110 #b10011000100100110111010))))
(let ((.def_101 (fp.mul RNE x2 (fp #b0 #b01111110 #b10001011010000111001011))))
(let ((.def_97 (fp.mul RNE x1 (fp #b0 #b01111101 #b00010101100000010000011))))
(let ((.def_93 (fp.mul RNE x0 (fp #b1 #b01111110 #b11111001010110000001000))))
(let ((.def_94 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_93)))
(let ((.def_98 (fp.add RNE .def_94 .def_97)))
(let ((.def_102 (fp.add RNE .def_98 .def_101)))
(let ((.def_107 (fp.add RNE .def_102 .def_106)))
(let ((.def_111 (fp.add RNE .def_107 .def_110)))
(let ((.def_112 (fp.leq .def_111 (fp #b1 #b01111101 #b10010100011110101110001))))
.def_112))))))))))))
(assert (let ((.def_136 (fp.mul RNE x4 (fp #b0 #b01111101 #b11001111110111110011110))))
(let ((.def_132 (fp.mul RNE x3 (fp #b0 #b01111011 #b01110000101000111101100))))
(let ((.def_128 (fp.mul RNE x2 (fp #b1 #b01111011 #b10010001011010000111001))))
(let ((.def_123 (fp.mul RNE x1 (fp #b1 #b01111101 #b01100010010011011101001))))
(let ((.def_118 (fp.mul RNE x0 (fp #b1 #b01111011 #b01100000010000011000101))))
(let ((.def_119 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_118)))
(let ((.def_124 (fp.add RNE .def_119 .def_123)))
(let ((.def_129 (fp.add RNE .def_124 .def_128)))
(let ((.def_133 (fp.add RNE .def_129 .def_132)))
(let ((.def_137 (fp.add RNE .def_133 .def_136)))
(let ((.def_138 (fp.leq .def_137 (fp #b0 #b01111101 #b00111001010110000001000))))
.def_138))))))))))))
(assert (let ((.def_161 (fp.mul RNE x4 (fp #b0 #b01111010 #b00110111010010111100011))))
(let ((.def_157 (fp.mul RNE x3 (fp #b0 #b01111010 #b10001001001101110100110))))
(let ((.def_153 (fp.mul RNE x2 (fp #b1 #b01111011 #b11000010100011110101110))))
(let ((.def_148 (fp.mul RNE x1 (fp #b0 #b01111001 #b00000110001001001101111))))
(let ((.def_144 (fp.mul RNE x0 (fp #b1 #b01111101 #b01100110011001100110011))))
(let ((.def_145 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_144)))
(let ((.def_149 (fp.add RNE .def_145 .def_148)))
(let ((.def_154 (fp.add RNE .def_149 .def_153)))
(let ((.def_158 (fp.add RNE .def_154 .def_157)))
(let ((.def_162 (fp.add RNE .def_158 .def_161)))
(let ((.def_163 (fp.leq .def_162 (fp #b0 #b01111101 #b01110111110011101101101))))
.def_163))))))))))))
(assert (let ((.def_188 (fp.mul RNE x4 (fp #b1 #b01111110 #b10100101011000000100001))))
(let ((.def_183 (fp.mul RNE x3 (fp #b0 #b01111101 #b10110100001110010101100))))
(let ((.def_179 (fp.mul RNE x2 (fp #b1 #b01111110 #b00001001101110100101111))))
(let ((.def_174 (fp.mul RNE x1 (fp #b0 #b01111101 #b01010111000010100011111))))
(let ((.def_170 (fp.mul RNE x0 (fp #b1 #b01111110 #b11000111101011100001010))))
(let ((.def_171 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_170)))
(let ((.def_175 (fp.add RNE .def_171 .def_174)))
(let ((.def_180 (fp.add RNE .def_175 .def_179)))
(let ((.def_184 (fp.add RNE .def_180 .def_183)))
(let ((.def_189 (fp.add RNE .def_184 .def_188)))
(let ((.def_190 (fp.leq .def_189 (fp #b1 #b01111100 #b00000110001001001101111))))
.def_190))))))))))))
(assert (let ((.def_214 (fp.mul RNE x4 (fp #b1 #b01111110 #b10101110100101111000111))))
(let ((.def_209 (fp.mul RNE x3 (fp #b1 #b01111110 #b01101011000000100000110))))
(let ((.def_204 (fp.mul RNE x2 (fp #b1 #b01111101 #b01010010111100011010101))))
(let ((.def_199 (fp.mul RNE x1 (fp #b0 #b01111100 #b11101011100001010001111))))
(let ((.def_195 (fp.mul RNE x0 (fp #b0 #b01111101 #b10010001011010000111001))))
(let ((.def_196 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_195)))
(let ((.def_200 (fp.add RNE .def_196 .def_199)))
(let ((.def_205 (fp.add RNE .def_200 .def_204)))
(let ((.def_210 (fp.add RNE .def_205 .def_209)))
(let ((.def_215 (fp.add RNE .def_210 .def_214)))
(let ((.def_216 (fp.leq .def_215 (fp #b0 #b01111101 #b00001010001111010111000))))
.def_216))))))))))))
(assert (let ((.def_242 (fp.mul RNE x4 (fp #b1 #b01111110 #b01000110101001111111000))))
(let ((.def_237 (fp.mul RNE x3 (fp #b1 #b01111110 #b00110011001100110011010))))
(let ((.def_232 (fp.mul RNE x2 (fp #b1 #b01111010 #b01111000110101001111111))))
(let ((.def_227 (fp.mul RNE x1 (fp #b1 #b01111101 #b00101101000011100101011))))
(let ((.def_222 (fp.mul RNE x0 (fp #b1 #b01111110 #b11111001110110110010001))))
(let ((.def_223 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_222)))
(let ((.def_228 (fp.add RNE .def_223 .def_227)))
(let ((.def_233 (fp.add RNE .def_228 .def_232)))
(let ((.def_238 (fp.add RNE .def_233 .def_237)))
(let ((.def_243 (fp.add RNE .def_238 .def_242)))
(let ((.def_244 (fp.leq (fp #b0 #b01111101 #b00010011011101001011110) .def_243)))
.def_244))))))))))))
(assert (let ((.def_266 (fp.mul RNE x4 (fp #b1 #b01111110 #b00100110111010010111100))))
(let ((.def_261 (fp.mul RNE x3 (fp #b0 #b01111110 #b01110101110000101001000))))
(let ((.def_257 (fp.mul RNE x2 (fp #b0 #b01111110 #b10111000110101001111111))))
(let ((.def_253 (fp.mul RNE x1 (fp #b0 #b01111001 #b10001001001101110100110))))
(let ((.def_249 (fp.mul RNE x0 (fp #b0 #b01111101 #b00110000001000001100010))))
(let ((.def_250 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_249)))
(let ((.def_254 (fp.add RNE .def_250 .def_253)))
(let ((.def_258 (fp.add RNE .def_254 .def_257)))
(let ((.def_262 (fp.add RNE .def_258 .def_261)))
(let ((.def_267 (fp.add RNE .def_262 .def_266)))
(let ((.def_268 (fp.leq (fp #b0 #b01111110 #b00111110111110011101110) .def_267)))
.def_268))))))))))))
(assert (let ((.def_290 (fp.mul RNE x4 (fp #b1 #b01111101 #b11010100111111011111010))))
(let ((.def_285 (fp.mul RNE x3 (fp #b0 #b01111110 #b00000100000110001001010))))
(let ((.def_281 (fp.mul RNE x2 (fp #b0 #b01111101 #b11000100100110111010011))))
(let ((.def_277 (fp.mul RNE x1 (fp #b0 #b01111110 #b11001110110110010001011))))
(let ((.def_273 (fp.mul RNE x0 (fp #b0 #b01111110 #b10001011110001101010100))))
(let ((.def_274 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_273)))
(let ((.def_278 (fp.add RNE .def_274 .def_277)))
(let ((.def_282 (fp.add RNE .def_278 .def_281)))
(let ((.def_286 (fp.add RNE .def_282 .def_285)))
(let ((.def_291 (fp.add RNE .def_286 .def_290)))
(let ((.def_292 (fp.leq (fp #b0 #b01111110 #b11000011100101011000001) .def_291)))
.def_292))))))))))))
(assert (let ((.def_316 (fp.mul RNE x4 (fp #b1 #b01111100 #b01011000000100000110001))))
(let ((.def_311 (fp.mul RNE x3 (fp #b1 #b01111011 #b00110111010010111100011))))
(let ((.def_306 (fp.mul RNE x2 (fp #b0 #b01111101 #b10000011000100100110111))))
(let ((.def_302 (fp.mul RNE x1 (fp #b1 #b01111101 #b10010000011000100100111))))
(let ((.def_297 (fp.mul RNE x0 (fp #b0 #b01111101 #b10101100000010000011001))))
(let ((.def_298 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_297)))
(let ((.def_303 (fp.add RNE .def_298 .def_302)))
(let ((.def_307 (fp.add RNE .def_303 .def_306)))
(let ((.def_312 (fp.add RNE .def_307 .def_311)))
(let ((.def_317 (fp.add RNE .def_312 .def_316)))
(let ((.def_318 (fp.leq (fp #b0 #b01111101 #b11101111100111011011001) .def_317)))
.def_318))))))))))))
(assert (let ((.def_340 (fp.mul RNE x4 (fp #b0 #b01111110 #b10000010100011110101110))))
(let ((.def_336 (fp.mul RNE x3 (fp #b0 #b01111110 #b11010011111101111100111))))
(let ((.def_332 (fp.mul RNE x2 (fp #b0 #b01111100 #b01011100001010001111011))))
(let ((.def_328 (fp.mul RNE x1 (fp #b0 #b01111110 #b00110111010010111100011))))
(let ((.def_324 (fp.mul RNE x0 (fp #b0 #b01111110 #b11110100001110010101100))))
(let ((.def_325 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_324)))
(let ((.def_329 (fp.add RNE .def_325 .def_328)))
(let ((.def_333 (fp.add RNE .def_329 .def_332)))
(let ((.def_337 (fp.add RNE .def_333 .def_336)))
(let ((.def_341 (fp.add RNE .def_337 .def_340)))
(let ((.def_342 (fp.leq (fp #b1 #b01111010 #b00000110001001001101111) .def_341)))
.def_342))))))))))))
(assert (let ((.def_365 (fp.mul RNE x4 (fp #b1 #b01111110 #b11110100001110010101100))))
(let ((.def_362 (fp.mul RNE x3 (fp #b0 #b01111101 #b10011110101110000101001))))
(let ((.def_358 (fp.mul RNE x2 (fp #b1 #b01111110 #b01101011100001010001111))))
(let ((.def_353 (fp.mul RNE x1 (fp #b1 #b01111110 #b01000011000100100110111))))
(let ((.def_348 (fp.mul RNE x0 (fp #b0 #b01111101 #b11101101100100010110100))))
(let ((.def_349 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_348)))
(let ((.def_354 (fp.add RNE .def_349 .def_353)))
(let ((.def_359 (fp.add RNE .def_354 .def_358)))
(let ((.def_363 (fp.add RNE .def_359 .def_362)))
(let ((.def_366 (fp.add RNE .def_363 .def_365)))
(let ((.def_367 (fp.leq (fp #b1 #b01111110 #b01000100000110001001010) .def_366)))
.def_367))))))))))))
(assert (let ((.def_388 (fp.mul RNE x4 (fp #b1 #b01111110 #b01000101000111101011100))))
(let ((.def_383 (fp.mul RNE x3 (fp #b0 #b01111110 #b01000011000100100110111))))
(let ((.def_381 (fp.mul RNE x2 (fp #b1 #b01111110 #b00101001111110111110100))))
(let ((.def_376 (fp.mul RNE x1 (fp #b0 #b01111101 #b10110001001001101110101))))
(let ((.def_372 (fp.mul RNE x0 (fp #b0 #b01111100 #b01111110111110011101110))))
(let ((.def_373 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_372)))
(let ((.def_377 (fp.add RNE .def_373 .def_376)))
(let ((.def_382 (fp.add RNE .def_377 .def_381)))
(let ((.def_384 (fp.add RNE .def_382 .def_383)))
(let ((.def_389 (fp.add RNE .def_384 .def_388)))
(let ((.def_390 (fp.leq (fp #b0 #b01111110 #b10000110101001111111000) .def_389)))
.def_390))))))))))))
(assert (let ((.def_413 (fp.mul RNE x4 (fp #b0 #b01111101 #b11000001100010010011100))))
(let ((.def_409 (fp.mul RNE x3 (fp #b1 #b01111101 #b01101000011100101011000))))
(let ((.def_404 (fp.mul RNE x2 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_400 (fp.mul RNE x1 (fp #b1 #b01111110 #b11011010100111111011111))))
(let ((.def_395 (fp.mul RNE x0 (fp #b0 #b01111110 #b00110010101100000010000))))
(let ((.def_396 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_395)))
(let ((.def_401 (fp.add RNE .def_396 .def_400)))
(let ((.def_405 (fp.add RNE .def_401 .def_404)))
(let ((.def_410 (fp.add RNE .def_405 .def_409)))
(let ((.def_414 (fp.add RNE .def_410 .def_413)))
(let ((.def_415 (fp.leq (fp #b0 #b01111110 #b01101000111101011100001) .def_414)))
.def_415))))))))))))
(check-sat)
