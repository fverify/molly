(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_63 (fp.mul RNE x4 (fp #b1 #b01111110 #b00111000010100011110110))))
(let ((.def_58 (fp.mul RNE x3 (fp #b1 #b01111110 #b10001100010010011011101))))
(let ((.def_53 (fp.mul RNE x2 (fp #b1 #b01111101 #b11111100111011011001001))))
(let ((.def_48 (fp.mul RNE x1 (fp #b0 #b01111110 #b01111110011101101100100))))
(let ((.def_44 (fp.mul RNE x0 (fp #b1 #b01111100 #b10110000001000001100010))))
(let ((.def_45 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_44)))
(let ((.def_49 (fp.add RNE .def_45 .def_48)))
(let ((.def_54 (fp.add RNE .def_49 .def_53)))
(let ((.def_59 (fp.add RNE .def_54 .def_58)))
(let ((.def_64 (fp.add RNE .def_59 .def_63)))
(let ((.def_65 (fp.leq (fp #b1 #b01111110 #b00001101110100101111001) .def_64)))
.def_65))))))))))))
(assert (let ((.def_89 (fp.mul RNE x4 (fp #b0 #b01111010 #b01110000101000111101100))))
(let ((.def_85 (fp.mul RNE x3 (fp #b1 #b01111001 #b11001010110000001000010))))
(let ((.def_80 (fp.mul RNE x2 (fp #b1 #b01111001 #b10111010010111100011011))))
(let ((.def_75 (fp.mul RNE x1 (fp #b0 #b01111101 #b11011000000100000110001))))
(let ((.def_71 (fp.mul RNE x0 (fp #b1 #b01111110 #b01101001111110111110100))))
(let ((.def_72 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_71)))
(let ((.def_76 (fp.add RNE .def_72 .def_75)))
(let ((.def_81 (fp.add RNE .def_76 .def_80)))
(let ((.def_86 (fp.add RNE .def_81 .def_85)))
(let ((.def_90 (fp.add RNE .def_86 .def_89)))
(let ((.def_91 (fp.leq (fp #b0 #b01110110 #b00000110001001001101111) .def_90)))
.def_91))))))))))))
(assert (let ((.def_117 (fp.mul RNE x4 (fp #b1 #b01111110 #b01011001100110011001101))))
(let ((.def_112 (fp.mul RNE x3 (fp #b1 #b01111110 #b11001000101101000011101))))
(let ((.def_107 (fp.mul RNE x2 (fp #b1 #b01111110 #b10110010101100000010000))))
(let ((.def_102 (fp.mul RNE x1 (fp #b0 #b01111110 #b11001110010101100000010))))
(let ((.def_98 (fp.mul RNE x0 (fp #b1 #b01111101 #b11110011101101100100011))))
(let ((.def_99 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_98)))
(let ((.def_103 (fp.add RNE .def_99 .def_102)))
(let ((.def_108 (fp.add RNE .def_103 .def_107)))
(let ((.def_113 (fp.add RNE .def_108 .def_112)))
(let ((.def_118 (fp.add RNE .def_113 .def_117)))
(let ((.def_119 (fp.leq .def_118 (fp #b1 #b01111101 #b01000110101001111111000))))
.def_119))))))))))))
(assert (let ((.def_145 (fp.mul RNE x4 (fp #b1 #b01111010 #b01111000110101001111111))))
(let ((.def_140 (fp.mul RNE x3 (fp #b1 #b01111101 #b10100010110100001110011))))
(let ((.def_135 (fp.mul RNE x2 (fp #b1 #b01111110 #b11011101001011110001101))))
(let ((.def_130 (fp.mul RNE x1 (fp #b1 #b01111110 #b00100001010001111010111))))
(let ((.def_125 (fp.mul RNE x0 (fp #b1 #b01111110 #b11000101000111101011100))))
(let ((.def_126 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_125)))
(let ((.def_131 (fp.add RNE .def_126 .def_130)))
(let ((.def_136 (fp.add RNE .def_131 .def_135)))
(let ((.def_141 (fp.add RNE .def_136 .def_140)))
(let ((.def_146 (fp.add RNE .def_141 .def_145)))
(let ((.def_147 (fp.leq (fp #b0 #b01111110 #b10000001100010010011100) .def_146)))
.def_147))))))))))))
(assert (let ((.def_170 (fp.mul RNE x4 (fp #b0 #b01111110 #b10010111100011010101000))))
(let ((.def_166 (fp.mul RNE x3 (fp #b0 #b01111101 #b00111000010100011110110))))
(let ((.def_162 (fp.mul RNE x2 (fp #b0 #b01111011 #b00011110101110000101001))))
(let ((.def_158 (fp.mul RNE x1 (fp #b1 #b01111110 #b11111110111110011101110))))
(let ((.def_153 (fp.mul RNE x0 (fp #b0 #b01111100 #b10111010010111100011011))))
(let ((.def_154 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_153)))
(let ((.def_159 (fp.add RNE .def_154 .def_158)))
(let ((.def_163 (fp.add RNE .def_159 .def_162)))
(let ((.def_167 (fp.add RNE .def_163 .def_166)))
(let ((.def_171 (fp.add RNE .def_167 .def_170)))
(let ((.def_172 (fp.leq (fp #b1 #b01111101 #b00010101100000010000011) .def_171)))
.def_172))))))))))))
(assert (let ((.def_198 (fp.mul RNE x4 (fp #b1 #b01111011 #b01110000101000111101100))))
(let ((.def_193 (fp.mul RNE x3 (fp #b1 #b01111110 #b01101100100010110100010))))
(let ((.def_188 (fp.mul RNE x2 (fp #b1 #b01111110 #b10110101001111110111110))))
(let ((.def_183 (fp.mul RNE x1 (fp #b1 #b01111110 #b11110101001111110111110))))
(let ((.def_178 (fp.mul RNE x0 (fp #b0 #b01111100 #b01110010101100000010000))))
(let ((.def_179 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_178)))
(let ((.def_184 (fp.add RNE .def_179 .def_183)))
(let ((.def_189 (fp.add RNE .def_184 .def_188)))
(let ((.def_194 (fp.add RNE .def_189 .def_193)))
(let ((.def_199 (fp.add RNE .def_194 .def_198)))
(let ((.def_200 (fp.leq .def_199 (fp #b1 #b01111110 #b11011010000111001010110))))
.def_200))))))))))))
(assert (let ((.def_223 (fp.mul RNE x4 (fp #b0 #b01111101 #b11100110011001100110011))))
(let ((.def_219 (fp.mul RNE x3 (fp #b1 #b01111110 #b10000011000100100110111))))
(let ((.def_214 (fp.mul RNE x2 (fp #b0 #b01111110 #b01000110001001001101111))))
(let ((.def_210 (fp.mul RNE x1 (fp #b0 #b01111101 #b00011101101100100010111))))
(let ((.def_206 (fp.mul RNE x0 (fp #b0 #b01111110 #b01000101101000011100101))))
(let ((.def_207 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_206)))
(let ((.def_211 (fp.add RNE .def_207 .def_210)))
(let ((.def_215 (fp.add RNE .def_211 .def_214)))
(let ((.def_220 (fp.add RNE .def_215 .def_219)))
(let ((.def_224 (fp.add RNE .def_220 .def_223)))
(let ((.def_225 (fp.leq .def_224 (fp #b1 #b01111000 #b11101011100001010001111))))
.def_225))))))))))))
(assert (let ((.def_249 (fp.mul RNE x4 (fp #b0 #b01111110 #b01001000101101000011101))))
(let ((.def_245 (fp.mul RNE x3 (fp #b0 #b01111110 #b00111101011100001010010))))
(let ((.def_241 (fp.mul RNE x2 (fp #b1 #b01111101 #b10100101111000110101010))))
(let ((.def_236 (fp.mul RNE x1 (fp #b1 #b01111101 #b00111101011100001010010))))
(let ((.def_231 (fp.mul RNE x0 (fp #b1 #b01111100 #b00011100101011000000100))))
(let ((.def_232 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_231)))
(let ((.def_237 (fp.add RNE .def_232 .def_236)))
(let ((.def_242 (fp.add RNE .def_237 .def_241)))
(let ((.def_246 (fp.add RNE .def_242 .def_245)))
(let ((.def_250 (fp.add RNE .def_246 .def_249)))
(let ((.def_251 (fp.leq (fp #b0 #b01111011 #b10011101101100100010111) .def_250)))
.def_251))))))))))))
(assert (let ((.def_273 (fp.mul RNE x4 (fp #b0 #b01111110 #b00000010100011110101110))))
(let ((.def_269 (fp.mul RNE x3 (fp #b0 #b01111110 #b00110100001110010101100))))
(let ((.def_265 (fp.mul RNE x2 (fp #b0 #b01111100 #b01111110111110011101110))))
(let ((.def_261 (fp.mul RNE x1 (fp #b1 #b01111101 #b01011001000101101000100))))
(let ((.def_256 (fp.mul RNE x0 (fp #b0 #b01111101 #b11001101110100101111001))))
(let ((.def_257 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_256)))
(let ((.def_262 (fp.add RNE .def_257 .def_261)))
(let ((.def_266 (fp.add RNE .def_262 .def_265)))
(let ((.def_270 (fp.add RNE .def_266 .def_269)))
(let ((.def_274 (fp.add RNE .def_270 .def_273)))
(let ((.def_275 (fp.leq .def_274 (fp #b0 #b01111100 #b11111101111100111011011))))
.def_275))))))))))))
(assert (let ((.def_300 (fp.mul RNE x4 (fp #b0 #b01111100 #b00001000001100010010011))))
(let ((.def_296 (fp.mul RNE x3 (fp #b0 #b01111110 #b10001010110000001000010))))
(let ((.def_292 (fp.mul RNE x2 (fp #b1 #b01111100 #b11011011001000101101000))))
(let ((.def_287 (fp.mul RNE x1 (fp #b1 #b01111110 #b10000000000000000000000))))
(let ((.def_282 (fp.mul RNE x0 (fp #b1 #b01111110 #b01010111000010100011111))))
(let ((.def_283 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_282)))
(let ((.def_288 (fp.add RNE .def_283 .def_287)))
(let ((.def_293 (fp.add RNE .def_288 .def_292)))
(let ((.def_297 (fp.add RNE .def_293 .def_296)))
(let ((.def_301 (fp.add RNE .def_297 .def_300)))
(let ((.def_302 (fp.leq (fp #b1 #b01111101 #b11100100010110100001110) .def_301)))
.def_302))))))))))))
(assert (let ((.def_319 (fp.mul RNE x4 (fp #b0 #b01111101 #b00001001001101110100110))))
(let ((.def_315 (fp.mul RNE x3 (fp #b0 #b01111100 #b10111010010111100011011))))
(let ((.def_313 (fp.mul RNE x2 (fp #b0 #b01111011 #b01001011110001101010100))))
(let ((.def_309 (fp.mul RNE x1 (fp #b0 #b01111100 #b00100100110111010011000))))
(let ((.def_305 (fp.mul RNE x0 (fp #b0 #b01111100 #b10011111101111100111011))))
(let ((.def_306 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_305)))
(let ((.def_310 (fp.add RNE .def_306 .def_309)))
(let ((.def_314 (fp.add RNE .def_310 .def_313)))
(let ((.def_316 (fp.add RNE .def_314 .def_315)))
(let ((.def_320 (fp.add RNE .def_316 .def_319)))
(let ((.def_321 (fp.leq (fp #b0 #b01111101 #b00011101101100100010111) .def_320)))
.def_321))))))))))))
(assert (let ((.def_340 (fp.mul RNE x4 (fp #b0 #b01111101 #b00011010100111111011111))))
(let ((.def_336 (fp.mul RNE x3 (fp #b0 #b01111011 #b00111011011001000101101))))
(let ((.def_332 (fp.mul RNE x2 (fp #b1 #b01111110 #b01110010001011010000111))))
(let ((.def_326 (fp.mul RNE x0 (fp #b0 #b01111101 #b01110100101111000110101))))
(let ((.def_327 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_326)))
(let ((.def_102 (fp.mul RNE x1 (fp #b0 #b01111110 #b11001110010101100000010))))
(let ((.def_328 (fp.add RNE .def_102 .def_327)))
(let ((.def_333 (fp.add RNE .def_328 .def_332)))
(let ((.def_337 (fp.add RNE .def_333 .def_336)))
(let ((.def_341 (fp.add RNE .def_337 .def_340)))
(let ((.def_342 (fp.leq (fp #b0 #b01111101 #b01011111001110110110010) .def_341)))
.def_342))))))))))))
(assert (let ((.def_368 (fp.mul RNE x4 (fp #b1 #b01111101 #b00001111010111000010100))))
(let ((.def_363 (fp.mul RNE x3 (fp #b1 #b01111110 #b11000100100110111010011))))
(let ((.def_358 (fp.mul RNE x2 (fp #b0 #b01111101 #b01010110000001000001100))))
(let ((.def_354 (fp.mul RNE x1 (fp #b1 #b01111110 #b01010100111111011111010))))
(let ((.def_349 (fp.mul RNE x0 (fp #b1 #b01111100 #b00100010110100001110011))))
(let ((.def_350 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_349)))
(let ((.def_355 (fp.add RNE .def_350 .def_354)))
(let ((.def_359 (fp.add RNE .def_355 .def_358)))
(let ((.def_364 (fp.add RNE .def_359 .def_363)))
(let ((.def_369 (fp.add RNE .def_364 .def_368)))
(let ((.def_370 (fp.leq (fp #b1 #b01111101 #b01010010111100011010101) .def_369)))
.def_370))))))))))))
(assert (let ((.def_392 (fp.mul RNE x4 (fp #b1 #b01111100 #b01100010010011011101001))))
(let ((.def_387 (fp.mul RNE x3 (fp #b1 #b01111001 #b01011000000100000110001))))
(let ((.def_382 (fp.mul RNE x2 (fp #b0 #b01111010 #b01111000110101001111111))))
(let ((.def_380 (fp.mul RNE x1 (fp #b0 #b01111110 #b00101100100010110100010))))
(let ((.def_376 (fp.mul RNE x0 (fp #b1 #b01111101 #b00001011010000111001011))))
(let ((.def_377 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_376)))
(let ((.def_381 (fp.add RNE .def_377 .def_380)))
(let ((.def_383 (fp.add RNE .def_381 .def_382)))
(let ((.def_388 (fp.add RNE .def_383 .def_387)))
(let ((.def_393 (fp.add RNE .def_388 .def_392)))
(let ((.def_394 (fp.leq .def_393 (fp #b0 #b01111100 #b10100001110010101100000))))
.def_394))))))))))))
(assert (let ((.def_416 (fp.mul RNE x4 (fp #b0 #b01111110 #b10110110010001011010001))))
(let ((.def_412 (fp.mul RNE x3 (fp #b1 #b01111110 #b11011110001101010100000))))
(let ((.def_407 (fp.mul RNE x2 (fp #b1 #b01111100 #b11001110110110010001011))))
(let ((.def_402 (fp.mul RNE x1 (fp #b1 #b01111101 #b01010010111100011010101))))
(let ((.def_400 (fp.mul RNE x0 (fp #b0 #b01111010 #b00010110100001110010110))))
(let ((.def_401 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_400)))
(let ((.def_403 (fp.add RNE .def_401 .def_402)))
(let ((.def_408 (fp.add RNE .def_403 .def_407)))
(let ((.def_413 (fp.add RNE .def_408 .def_412)))
(let ((.def_417 (fp.add RNE .def_413 .def_416)))
(let ((.def_418 (fp.leq (fp #b1 #b01111101 #b10100011110101110000101) .def_417)))
.def_418))))))))))))
(check-sat)
