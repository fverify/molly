(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_63 (fp.mul RNE x4 (fp #b1 #b01111101 #b11101001011110001101010))))
(let ((.def_58 (fp.mul RNE x3 (fp #b0 #b01111100 #b10000001000001100010010))))
(let ((.def_54 (fp.mul RNE x2 (fp #b1 #b01111110 #b01111001110110110010001))))
(let ((.def_49 (fp.mul RNE x1 (fp #b1 #b01111011 #b10011101101100100010111))))
(let ((.def_44 (fp.mul RNE x0 (fp #b1 #b01111101 #b10001100010010011011101))))
(let ((.def_45 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_44)))
(let ((.def_50 (fp.add RNE .def_45 .def_49)))
(let ((.def_55 (fp.add RNE .def_50 .def_54)))
(let ((.def_59 (fp.add RNE .def_55 .def_58)))
(let ((.def_64 (fp.add RNE .def_59 .def_63)))
(let ((.def_65 (fp.leq .def_64 (fp #b1 #b01111101 #b01001111110111110011110))))
.def_65))))))))))))
(assert (let ((.def_89 (fp.mul RNE x4 (fp #b1 #b01111110 #b11001000101101000011101))))
(let ((.def_84 (fp.mul RNE x3 (fp #b0 #b01111110 #b01001101110100101111001))))
(let ((.def_80 (fp.mul RNE x2 (fp #b0 #b01111011 #b00000010000011000100101))))
(let ((.def_76 (fp.mul RNE x1 (fp #b0 #b01111110 #b10010010011011101001100))))
(let ((.def_72 (fp.mul RNE x0 (fp #b1 #b01111100 #b10101001111110111110100))))
(let ((.def_73 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_72)))
(let ((.def_77 (fp.add RNE .def_73 .def_76)))
(let ((.def_81 (fp.add RNE .def_77 .def_80)))
(let ((.def_85 (fp.add RNE .def_81 .def_84)))
(let ((.def_90 (fp.add RNE .def_85 .def_89)))
(let ((.def_91 (fp.leq (fp #b1 #b01111100 #b00100010110100001110011) .def_90)))
.def_91))))))))))))
(assert (let ((.def_116 (fp.mul RNE x4 (fp #b1 #b01111011 #b11101011100001010001111))))
(let ((.def_111 (fp.mul RNE x3 (fp #b1 #b01111110 #b11000001100010010011100))))
(let ((.def_106 (fp.mul RNE x2 (fp #b0 #b01111101 #b11101101100100010110100))))
(let ((.def_102 (fp.mul RNE x1 (fp #b0 #b01111110 #b10010100011110101110001))))
(let ((.def_98 (fp.mul RNE x0 (fp #b1 #b01111100 #b00001110010101100000010))))
(let ((.def_99 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_98)))
(let ((.def_103 (fp.add RNE .def_99 .def_102)))
(let ((.def_107 (fp.add RNE .def_103 .def_106)))
(let ((.def_112 (fp.add RNE .def_107 .def_111)))
(let ((.def_117 (fp.add RNE .def_112 .def_116)))
(let ((.def_118 (fp.leq .def_117 (fp #b1 #b01111101 #b11010000111001010110000))))
.def_118))))))))))))
(assert (let ((.def_140 (fp.mul RNE x4 (fp #b0 #b01111110 #b00010010011011101001100))))
(let ((.def_136 (fp.mul RNE x3 (fp #b0 #b01111110 #b01101110100101111000111))))
(let ((.def_132 (fp.mul RNE x2 (fp #b0 #b01111010 #b11111011111001110110110))))
(let ((.def_128 (fp.mul RNE x1 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_124 (fp.mul RNE x0 (fp #b1 #b01111101 #b11011100001010001111011))))
(let ((.def_125 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_124)))
(let ((.def_129 (fp.add RNE .def_125 .def_128)))
(let ((.def_133 (fp.add RNE .def_129 .def_132)))
(let ((.def_137 (fp.add RNE .def_133 .def_136)))
(let ((.def_141 (fp.add RNE .def_137 .def_140)))
(let ((.def_142 (fp.leq (fp #b0 #b01111101 #b11001001101110100101111) .def_141)))
.def_142))))))))))))
(assert (let ((.def_165 (fp.mul RNE x4 (fp #b0 #b01110110 #b00000110001001001101111))))
(let ((.def_161 (fp.mul RNE x3 (fp #b0 #b01111110 #b01011100001010001111011))))
(let ((.def_157 (fp.mul RNE x2 (fp #b1 #b01111110 #b01000111001010110000001))))
(let ((.def_152 (fp.mul RNE x1 (fp #b0 #b01111100 #b00000110001001001101111))))
(let ((.def_148 (fp.mul RNE x0 (fp #b0 #b01111110 #b11100010010011011101001))))
(let ((.def_149 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_148)))
(let ((.def_153 (fp.add RNE .def_149 .def_152)))
(let ((.def_158 (fp.add RNE .def_153 .def_157)))
(let ((.def_162 (fp.add RNE .def_158 .def_161)))
(let ((.def_166 (fp.add RNE .def_162 .def_165)))
(let ((.def_167 (fp.leq (fp #b1 #b01111101 #b00110101001111110111110) .def_166)))
.def_167))))))))))))
(assert (let ((.def_189 (fp.mul RNE x4 (fp #b0 #b01111110 #b11011001000101101000100))))
(let ((.def_185 (fp.mul RNE x3 (fp #b1 #b01111100 #b00001110010101100000010))))
(let ((.def_183 (fp.mul RNE x2 (fp #b1 #b01111110 #b01011011101001011110010))))
(let ((.def_178 (fp.mul RNE x1 (fp #b1 #b01111110 #b10011001100110011001101))))
(let ((.def_173 (fp.mul RNE x0 (fp #b0 #b01111110 #b00110110010001011010001))))
(let ((.def_174 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_173)))
(let ((.def_179 (fp.add RNE .def_174 .def_178)))
(let ((.def_184 (fp.add RNE .def_179 .def_183)))
(let ((.def_186 (fp.add RNE .def_184 .def_185)))
(let ((.def_190 (fp.add RNE .def_186 .def_189)))
(let ((.def_191 (fp.leq (fp #b1 #b01111110 #b11000010100011110101110) .def_190)))
.def_191))))))))))))
(assert (let ((.def_209 (fp.mul RNE x4 (fp #b1 #b01111100 #b00100000110001001001110))))
(let ((.def_204 (fp.mul RNE x3 (fp #b0 #b01111110 #b11001000101101000011101))))
(let ((.def_202 (fp.mul RNE x2 (fp #b0 #b01111110 #b00010011011101001011110))))
(let ((.def_198 (fp.mul RNE x1 (fp #b0 #b01111101 #b01100010010011011101001))))
(let ((.def_194 (fp.mul RNE x0 (fp #b0 #b01111101 #b11010000111001010110000))))
(let ((.def_195 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_194)))
(let ((.def_199 (fp.add RNE .def_195 .def_198)))
(let ((.def_203 (fp.add RNE .def_199 .def_202)))
(let ((.def_205 (fp.add RNE .def_203 .def_204)))
(let ((.def_210 (fp.add RNE .def_205 .def_209)))
(let ((.def_211 (fp.leq .def_210 (fp #b0 #b01111110 #b10101111100111011011001))))
.def_211))))))))))))
(assert (let ((.def_234 (fp.mul RNE x4 (fp #b1 #b01111011 #b00111111011111001110111))))
(let ((.def_229 (fp.mul RNE x3 (fp #b0 #b01111101 #b11010010111100011010101))))
(let ((.def_225 (fp.mul RNE x2 (fp #b0 #b01111110 #b10111011111001110110110))))
(let ((.def_221 (fp.mul RNE x1 (fp #b1 #b01111000 #b00000110001001001101111))))
(let ((.def_216 (fp.mul RNE x0 (fp #b0 #b01111110 #b01001100110011001100110))))
(let ((.def_217 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_216)))
(let ((.def_222 (fp.add RNE .def_217 .def_221)))
(let ((.def_226 (fp.add RNE .def_222 .def_225)))
(let ((.def_230 (fp.add RNE .def_226 .def_229)))
(let ((.def_235 (fp.add RNE .def_230 .def_234)))
(let ((.def_236 (fp.leq .def_235 (fp #b0 #b01111101 #b01000111101011100001010))))
.def_236))))))))))))
(assert (let ((.def_259 (fp.mul RNE x4 (fp #b0 #b01111101 #b10011111101111100111011))))
(let ((.def_255 (fp.mul RNE x3 (fp #b0 #b01111011 #b00111011011001000101101))))
(let ((.def_251 (fp.mul RNE x2 (fp #b0 #b01111101 #b00101100000010000011001))))
(let ((.def_247 (fp.mul RNE x1 (fp #b1 #b01111110 #b10000101000111101011100))))
(let ((.def_242 (fp.mul RNE x0 (fp #b0 #b01111101 #b11011111001110110110010))))
(let ((.def_243 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_242)))
(let ((.def_248 (fp.add RNE .def_243 .def_247)))
(let ((.def_252 (fp.add RNE .def_248 .def_251)))
(let ((.def_256 (fp.add RNE .def_252 .def_255)))
(let ((.def_260 (fp.add RNE .def_256 .def_259)))
(let ((.def_261 (fp.leq .def_260 (fp #b1 #b01111100 #b11000110101001111111000))))
.def_261))))))))))))
(assert (let ((.def_283 (fp.mul RNE x4 (fp #b0 #b01111101 #b11100011010100111111100))))
(let ((.def_279 (fp.mul RNE x3 (fp #b1 #b01111101 #b10100001110010101100000))))
(let ((.def_274 (fp.mul RNE x2 (fp #b0 #b01111101 #b01011110001101010100000))))
(let ((.def_270 (fp.mul RNE x1 (fp #b0 #b01111110 #b10100011110101110000101))))
(let ((.def_266 (fp.mul RNE x0 (fp #b0 #b01111101 #b11100111011011001000110))))
(let ((.def_267 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_266)))
(let ((.def_271 (fp.add RNE .def_267 .def_270)))
(let ((.def_275 (fp.add RNE .def_271 .def_274)))
(let ((.def_280 (fp.add RNE .def_275 .def_279)))
(let ((.def_284 (fp.add RNE .def_280 .def_283)))
(let ((.def_285 (fp.leq .def_284 (fp #b0 #b01111100 #b01011010000111001010110))))
.def_285))))))))))))
(check-sat)
