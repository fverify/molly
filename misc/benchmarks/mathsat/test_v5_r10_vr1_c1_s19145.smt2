(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_62 (fp.mul RNE x4 (fp #b1 #b01111110 #b10101111000110101010000))))
(let ((.def_57 (fp.mul RNE x3 (fp #b1 #b01111110 #b00101010011111101111101))))
(let ((.def_52 (fp.mul RNE x2 (fp #b1 #b01111100 #b00010110100001110010110))))
(let ((.def_47 (fp.mul RNE x1 (fp #b0 #b01111110 #b01101100000010000011001))))
(let ((.def_43 (fp.mul RNE x0 (fp #b1 #b01111101 #b01110101110000101001000))))
(let ((.def_44 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_43)))
(let ((.def_48 (fp.add RNE .def_44 .def_47)))
(let ((.def_53 (fp.add RNE .def_48 .def_52)))
(let ((.def_58 (fp.add RNE .def_53 .def_57)))
(let ((.def_63 (fp.add RNE .def_58 .def_62)))
(let ((.def_64 (fp.leq (fp #b0 #b01111000 #b11001010110000001000010) .def_63)))
.def_64))))))))))))
(assert (let ((.def_87 (fp.mul RNE x4 (fp #b0 #b01111110 #b11100100110111010011000))))
(let ((.def_83 (fp.mul RNE x3 (fp #b0 #b01111110 #b10011101001011110001101))))
(let ((.def_79 (fp.mul RNE x2 (fp #b0 #b01110110 #b00000110001001001101111))))
(let ((.def_75 (fp.mul RNE x1 (fp #b1 #b01111110 #b01110101110000101001000))))
(let ((.def_70 (fp.mul RNE x0 (fp #b0 #b01111101 #b00110101001111110111110))))
(let ((.def_71 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_70)))
(let ((.def_76 (fp.add RNE .def_71 .def_75)))
(let ((.def_80 (fp.add RNE .def_76 .def_79)))
(let ((.def_84 (fp.add RNE .def_80 .def_83)))
(let ((.def_88 (fp.add RNE .def_84 .def_87)))
(let ((.def_89 (fp.leq .def_88 (fp #b1 #b01111100 #b00000110001001001101111))))
.def_89))))))))))))
(assert (let ((.def_114 (fp.mul RNE x4 (fp #b0 #b01111100 #b00101101000011100101011))))
(let ((.def_110 (fp.mul RNE x3 (fp #b0 #b01111101 #b11010011111101111100111))))
(let ((.def_106 (fp.mul RNE x2 (fp #b1 #b01111110 #b10011100001010001111011))))
(let ((.def_101 (fp.mul RNE x1 (fp #b1 #b01111110 #b10001111010111000010100))))
(let ((.def_96 (fp.mul RNE x0 (fp #b1 #b01110111 #b01000111101011100001010))))
(let ((.def_97 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_96)))
(let ((.def_102 (fp.add RNE .def_97 .def_101)))
(let ((.def_107 (fp.add RNE .def_102 .def_106)))
(let ((.def_111 (fp.add RNE .def_107 .def_110)))
(let ((.def_115 (fp.add RNE .def_111 .def_114)))
(let ((.def_116 (fp.leq .def_115 (fp #b1 #b01111110 #b10011010000111001010110))))
.def_116))))))))))))
(assert (let ((.def_141 (fp.mul RNE x4 (fp #b1 #b01111110 #b00110101110000101001000))))
(let ((.def_136 (fp.mul RNE x3 (fp #b1 #b01111110 #b11111100011010100111111))))
(let ((.def_131 (fp.mul RNE x2 (fp #b0 #b01111101 #b11100010010011011101001))))
(let ((.def_127 (fp.mul RNE x1 (fp #b1 #b01111101 #b01011000000100000110001))))
(let ((.def_122 (fp.mul RNE x0 (fp #b0 #b01111011 #b11011011001000101101000))))
(let ((.def_123 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_122)))
(let ((.def_128 (fp.add RNE .def_123 .def_127)))
(let ((.def_132 (fp.add RNE .def_128 .def_131)))
(let ((.def_137 (fp.add RNE .def_132 .def_136)))
(let ((.def_142 (fp.add RNE .def_137 .def_141)))
(let ((.def_143 (fp.leq (fp #b1 #b01111101 #b00100000110001001001110) .def_142)))
.def_143))))))))))))
(assert (let ((.def_168 (fp.mul RNE x4 (fp #b0 #b01111011 #b11001010110000001000010))))
(let ((.def_164 (fp.mul RNE x3 (fp #b1 #b01111110 #b00111000110101001111111))))
(let ((.def_159 (fp.mul RNE x2 (fp #b1 #b01111101 #b01000101101000011100101))))
(let ((.def_154 (fp.mul RNE x1 (fp #b1 #b01111001 #b10101001111110111110100))))
(let ((.def_149 (fp.mul RNE x0 (fp #b0 #b01111110 #b00000101000111101011100))))
(let ((.def_150 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_149)))
(let ((.def_155 (fp.add RNE .def_150 .def_154)))
(let ((.def_160 (fp.add RNE .def_155 .def_159)))
(let ((.def_165 (fp.add RNE .def_160 .def_164)))
(let ((.def_169 (fp.add RNE .def_165 .def_168)))
(let ((.def_170 (fp.leq (fp #b1 #b01111100 #b01111100111011011001001) .def_169)))
.def_170))))))))))))
(assert (let ((.def_192 (fp.mul RNE x4 (fp #b0 #b01111010 #b01101000011100101011000))))
(let ((.def_188 (fp.mul RNE x3 (fp #b0 #b01111110 #b10011110001101010100000))))
(let ((.def_184 (fp.mul RNE x2 (fp #b0 #b01111110 #b10111110011101101100100))))
(let ((.def_180 (fp.mul RNE x1 (fp #b1 #b01111110 #b00110001001001101110101))))
(let ((.def_175 (fp.mul RNE x0 (fp #b0 #b01111110 #b01111100111011011001001))))
(let ((.def_176 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_175)))
(let ((.def_181 (fp.add RNE .def_176 .def_180)))
(let ((.def_185 (fp.add RNE .def_181 .def_184)))
(let ((.def_189 (fp.add RNE .def_185 .def_188)))
(let ((.def_193 (fp.add RNE .def_189 .def_192)))
(let ((.def_194 (fp.leq .def_193 (fp #b0 #b01111110 #b00111000010100011110110))))
.def_194))))))))))))
(assert (let ((.def_219 (fp.mul RNE x4 (fp #b0 #b01111110 #b10010000011000100100111))))
(let ((.def_215 (fp.mul RNE x3 (fp #b1 #b01111101 #b11110110110010001011010))))
(let ((.def_210 (fp.mul RNE x2 (fp #b1 #b01111100 #b11001100110011001100110))))
(let ((.def_205 (fp.mul RNE x1 (fp #b1 #b01111101 #b00001111010111000010100))))
(let ((.def_200 (fp.mul RNE x0 (fp #b0 #b01111101 #b10010001011010000111001))))
(let ((.def_201 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_200)))
(let ((.def_206 (fp.add RNE .def_201 .def_205)))
(let ((.def_211 (fp.add RNE .def_206 .def_210)))
(let ((.def_216 (fp.add RNE .def_211 .def_215)))
(let ((.def_220 (fp.add RNE .def_216 .def_219)))
(let ((.def_221 (fp.leq (fp #b1 #b01111001 #b10111010010111100011011) .def_220)))
.def_221))))))))))))
(assert (let ((.def_243 (fp.mul RNE x4 (fp #b0 #b01111110 #b00000010000011000100101))))
(let ((.def_239 (fp.mul RNE x3 (fp #b0 #b01111110 #b10001001001101110100110))))
(let ((.def_235 (fp.mul RNE x2 (fp #b0 #b01111110 #b00100111011011001000110))))
(let ((.def_231 (fp.mul RNE x1 (fp #b1 #b01111100 #b01101110100101111000111))))
(let ((.def_226 (fp.mul RNE x0 (fp #b0 #b01111110 #b10010010011011101001100))))
(let ((.def_227 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_226)))
(let ((.def_232 (fp.add RNE .def_227 .def_231)))
(let ((.def_236 (fp.add RNE .def_232 .def_235)))
(let ((.def_240 (fp.add RNE .def_236 .def_239)))
(let ((.def_244 (fp.add RNE .def_240 .def_243)))
(let ((.def_245 (fp.leq (fp #b0 #b01111100 #b11010000111001010110000) .def_244)))
.def_245))))))))))))
(assert (let ((.def_268 (fp.mul RNE x4 (fp #b0 #b01111101 #b00011100101011000000100))))
(let ((.def_264 (fp.mul RNE x3 (fp #b0 #b01111110 #b01011110101110000101001))))
(let ((.def_260 (fp.mul RNE x2 (fp #b1 #b01111110 #b00111101111100111011011))))
(let ((.def_255 (fp.mul RNE x1 (fp #b0 #b01111110 #b10111000010100011110110))))
(let ((.def_251 (fp.mul RNE x0 (fp #b0 #b01111101 #b01000011100101011000001))))
(let ((.def_252 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_251)))
(let ((.def_256 (fp.add RNE .def_252 .def_255)))
(let ((.def_261 (fp.add RNE .def_256 .def_260)))
(let ((.def_265 (fp.add RNE .def_261 .def_264)))
(let ((.def_269 (fp.add RNE .def_265 .def_268)))
(let ((.def_270 (fp.leq (fp #b1 #b01111010 #b00000110001001001101111) .def_269)))
.def_270))))))))))))
(assert (let ((.def_294 (fp.mul RNE x4 (fp #b1 #b01111101 #b01011110001101010100000))))
(let ((.def_289 (fp.mul RNE x3 (fp #b1 #b01111110 #b11101100000010000011001))))
(let ((.def_284 (fp.mul RNE x2 (fp #b0 #b01111110 #b11000001100010010011100))))
(let ((.def_280 (fp.mul RNE x1 (fp #b1 #b01111101 #b10001010001111010111000))))
(let ((.def_275 (fp.mul RNE x0 (fp #b0 #b01111101 #b11100100010110100001110))))
(let ((.def_276 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_275)))
(let ((.def_281 (fp.add RNE .def_276 .def_280)))
(let ((.def_285 (fp.add RNE .def_281 .def_284)))
(let ((.def_290 (fp.add RNE .def_285 .def_289)))
(let ((.def_295 (fp.add RNE .def_290 .def_294)))
(let ((.def_296 (fp.leq .def_295 (fp #b0 #b01111110 #b01010110000001000001100))))
.def_296))))))))))))
(check-sat)
