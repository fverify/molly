(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_79 (fp.mul RNE x6 (fp #b0 #b01111110 #b01101100000010000011001))))
(let ((.def_75 (fp.mul RNE x5 (fp #b1 #b01111110 #b00001100110011001100110))))
(let ((.def_70 (fp.mul RNE x4 (fp #b1 #b01111101 #b10101000111101011100001))))
(let ((.def_65 (fp.mul RNE x3 (fp #b1 #b01111100 #b11001100110011001100110))))
(let ((.def_60 (fp.mul RNE x2 (fp #b1 #b01111110 #b01111100111011011001001))))
(let ((.def_55 (fp.mul RNE x1 (fp #b0 #b01111110 #b11011100001010001111011))))
(let ((.def_51 (fp.mul RNE x0 (fp #b1 #b01111110 #b00000010100011110101110))))
(let ((.def_52 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_51)))
(let ((.def_56 (fp.add RNE .def_52 .def_55)))
(let ((.def_61 (fp.add RNE .def_56 .def_60)))
(let ((.def_66 (fp.add RNE .def_61 .def_65)))
(let ((.def_71 (fp.add RNE .def_66 .def_70)))
(let ((.def_76 (fp.add RNE .def_71 .def_75)))
(let ((.def_80 (fp.add RNE .def_76 .def_79)))
(let ((.def_81 (fp.leq (fp #b0 #b01111110 #b10110001101010011111110) .def_80)))
.def_81))))))))))))))))
(assert (let ((.def_116 (fp.mul RNE x6 (fp #b1 #b01111110 #b11100011010100111111100))))
(let ((.def_111 (fp.mul RNE x5 (fp #b1 #b01111110 #b00111001010110000001000))))
(let ((.def_106 (fp.mul RNE x4 (fp #b1 #b01111110 #b10000011000100100110111))))
(let ((.def_101 (fp.mul RNE x3 (fp #b1 #b01111110 #b10010001011010000111001))))
(let ((.def_96 (fp.mul RNE x2 (fp #b1 #b01111101 #b01101011100001010001111))))
(let ((.def_91 (fp.mul RNE x1 (fp #b0 #b01111100 #b00001110010101100000010))))
(let ((.def_87 (fp.mul RNE x0 (fp #b1 #b01111110 #b00011000000100000110001))))
(let ((.def_88 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_87)))
(let ((.def_92 (fp.add RNE .def_88 .def_91)))
(let ((.def_97 (fp.add RNE .def_92 .def_96)))
(let ((.def_102 (fp.add RNE .def_97 .def_101)))
(let ((.def_107 (fp.add RNE .def_102 .def_106)))
(let ((.def_112 (fp.add RNE .def_107 .def_111)))
(let ((.def_117 (fp.add RNE .def_112 .def_116)))
(let ((.def_118 (fp.leq .def_117 (fp #b0 #b01111110 #b11101111000110101010000))))
.def_118))))))))))))))))
(assert (let ((.def_150 (fp.mul RNE x6 (fp #b1 #b01111110 #b10100101111000110101010))))
(let ((.def_145 (fp.mul RNE x5 (fp #b1 #b01111101 #b00100111111011111001111))))
(let ((.def_140 (fp.mul RNE x4 (fp #b1 #b01111110 #b01101000111101011100001))))
(let ((.def_135 (fp.mul RNE x3 (fp #b1 #b01111110 #b11111110111110011101110))))
(let ((.def_130 (fp.mul RNE x2 (fp #b0 #b01111101 #b01011001000101101000100))))
(let ((.def_126 (fp.mul RNE x1 (fp #b1 #b01111101 #b11100111011011001000110))))
(let ((.def_121 (fp.mul RNE x0 (fp #b0 #b01111110 #b10101010011111101111101))))
(let ((.def_122 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_121)))
(let ((.def_127 (fp.add RNE .def_122 .def_126)))
(let ((.def_131 (fp.add RNE .def_127 .def_130)))
(let ((.def_136 (fp.add RNE .def_131 .def_135)))
(let ((.def_141 (fp.add RNE .def_136 .def_140)))
(let ((.def_146 (fp.add RNE .def_141 .def_145)))
(let ((.def_151 (fp.add RNE .def_146 .def_150)))
(let ((.def_152 (fp.leq .def_151 (fp #b0 #b00000000 #b00000000000000000000000))))
.def_152))))))))))))))))
(assert (let ((.def_183 (fp.mul RNE x6 (fp #b0 #b01111110 #b11010111000010100011111))))
(let ((.def_179 (fp.mul RNE x5 (fp #b0 #b01111110 #b11001001101110100101111))))
(let ((.def_175 (fp.mul RNE x4 (fp #b0 #b01111110 #b11011001000101101000100))))
(let ((.def_171 (fp.mul RNE x3 (fp #b0 #b01111110 #b00111000110101001111111))))
(let ((.def_167 (fp.mul RNE x2 (fp #b1 #b01111110 #b01001010110000001000010))))
(let ((.def_162 (fp.mul RNE x1 (fp #b0 #b01111110 #b00011010100111111011111))))
(let ((.def_158 (fp.mul RNE x0 (fp #b1 #b01111100 #b00010100011110101110001))))
(let ((.def_159 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_158)))
(let ((.def_163 (fp.add RNE .def_159 .def_162)))
(let ((.def_168 (fp.add RNE .def_163 .def_167)))
(let ((.def_172 (fp.add RNE .def_168 .def_171)))
(let ((.def_176 (fp.add RNE .def_172 .def_175)))
(let ((.def_180 (fp.add RNE .def_176 .def_179)))
(let ((.def_184 (fp.add RNE .def_180 .def_183)))
(let ((.def_185 (fp.leq (fp #b0 #b01111101 #b11000011100101011000001) .def_184)))
.def_185))))))))))))))))
(assert (let ((.def_216 (fp.mul RNE x6 (fp #b0 #b01111100 #b01100110011001100110011))))
(let ((.def_212 (fp.mul RNE x5 (fp #b0 #b01111110 #b10110111110011101101101))))
(let ((.def_208 (fp.mul RNE x4 (fp #b0 #b01111101 #b01100101011000000100001))))
(let ((.def_204 (fp.mul RNE x3 (fp #b0 #b01111110 #b11100110111010010111100))))
(let ((.def_200 (fp.mul RNE x2 (fp #b1 #b01111110 #b11111010111000010100100))))
(let ((.def_195 (fp.mul RNE x1 (fp #b1 #b01111110 #b11111001110110110010001))))
(let ((.def_190 (fp.mul RNE x0 (fp #b0 #b01111110 #b10110011101101100100011))))
(let ((.def_191 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_190)))
(let ((.def_196 (fp.add RNE .def_191 .def_195)))
(let ((.def_201 (fp.add RNE .def_196 .def_200)))
(let ((.def_205 (fp.add RNE .def_201 .def_204)))
(let ((.def_209 (fp.add RNE .def_205 .def_208)))
(let ((.def_213 (fp.add RNE .def_209 .def_212)))
(let ((.def_217 (fp.add RNE .def_213 .def_216)))
(let ((.def_218 (fp.leq .def_217 (fp #b0 #b01111110 #b01001001101110100101111))))
.def_218))))))))))))))))
(assert (let ((.def_252 (fp.mul RNE x6 (fp #b1 #b01111110 #b11000110101001111111000))))
(let ((.def_247 (fp.mul RNE x5 (fp #b0 #b01111110 #b01100011110101110000101))))
(let ((.def_243 (fp.mul RNE x4 (fp #b1 #b01111101 #b01100110011001100110011))))
(let ((.def_238 (fp.mul RNE x3 (fp #b1 #b01111101 #b10011000100100110111010))))
(let ((.def_233 (fp.mul RNE x2 (fp #b0 #b01111110 #b01000100100110111010011))))
(let ((.def_229 (fp.mul RNE x1 (fp #b1 #b01111101 #b11110110110010001011010))))
(let ((.def_224 (fp.mul RNE x0 (fp #b1 #b01111101 #b00110111010010111100011))))
(let ((.def_225 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_224)))
(let ((.def_230 (fp.add RNE .def_225 .def_229)))
(let ((.def_234 (fp.add RNE .def_230 .def_233)))
(let ((.def_239 (fp.add RNE .def_234 .def_238)))
(let ((.def_244 (fp.add RNE .def_239 .def_243)))
(let ((.def_248 (fp.add RNE .def_244 .def_247)))
(let ((.def_253 (fp.add RNE .def_248 .def_252)))
(let ((.def_254 (fp.leq .def_253 (fp #b0 #b01111110 #b00011110101110000101001))))
.def_254))))))))))))))))
(assert (let ((.def_289 (fp.mul RNE x6 (fp #b1 #b01111110 #b00111101111100111011011))))
(let ((.def_284 (fp.mul RNE x5 (fp #b0 #b01111100 #b11001110110110010001011))))
(let ((.def_280 (fp.mul RNE x4 (fp #b1 #b01111011 #b00111111011111001110111))))
(let ((.def_275 (fp.mul RNE x3 (fp #b1 #b01111110 #b11000101101000011100101))))
(let ((.def_270 (fp.mul RNE x2 (fp #b0 #b01111110 #b00100101111000110101010))))
(let ((.def_266 (fp.mul RNE x1 (fp #b1 #b01111101 #b00001011010000111001011))))
(let ((.def_261 (fp.mul RNE x0 (fp #b1 #b01111101 #b11010110000001000001100))))
(let ((.def_262 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_261)))
(let ((.def_267 (fp.add RNE .def_262 .def_266)))
(let ((.def_271 (fp.add RNE .def_267 .def_270)))
(let ((.def_276 (fp.add RNE .def_271 .def_275)))
(let ((.def_281 (fp.add RNE .def_276 .def_280)))
(let ((.def_285 (fp.add RNE .def_281 .def_284)))
(let ((.def_290 (fp.add RNE .def_285 .def_289)))
(let ((.def_291 (fp.leq .def_290 (fp #b1 #b01111100 #b10010101100000010000011))))
.def_291))))))))))))))))
(assert (let ((.def_321 (fp.mul RNE x6 (fp #b0 #b01111110 #b01011010000111001010110))))
(let ((.def_317 (fp.mul RNE x5 (fp #b1 #b01111101 #b11110001101010011111110))))
(let ((.def_312 (fp.mul RNE x4 (fp #b0 #b01111110 #b01111001010110000001000))))
(let ((.def_308 (fp.mul RNE x3 (fp #b0 #b01111110 #b00110001101010011111110))))
(let ((.def_304 (fp.mul RNE x2 (fp #b0 #b01111101 #b11110011101101100100011))))
(let ((.def_300 (fp.mul RNE x1 (fp #b0 #b01111101 #b11000100100110111010011))))
(let ((.def_296 (fp.mul RNE x0 (fp #b0 #b01111110 #b11011010100111111011111))))
(let ((.def_297 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_296)))
(let ((.def_301 (fp.add RNE .def_297 .def_300)))
(let ((.def_305 (fp.add RNE .def_301 .def_304)))
(let ((.def_309 (fp.add RNE .def_305 .def_308)))
(let ((.def_313 (fp.add RNE .def_309 .def_312)))
(let ((.def_318 (fp.add RNE .def_313 .def_317)))
(let ((.def_322 (fp.add RNE .def_318 .def_321)))
(let ((.def_323 (fp.leq .def_322 (fp #b0 #b01111110 #b01111000110101001111111))))
.def_323))))))))))))))))
(assert (let ((.def_354 (fp.mul RNE x6 (fp #b0 #b01111100 #b11100001010001111010111))))
(let ((.def_350 (fp.mul RNE x5 (fp #b1 #b01111101 #b10000100000110001001010))))
(let ((.def_345 (fp.mul RNE x4 (fp #b1 #b01111110 #b11001110110110010001011))))
(let ((.def_340 (fp.mul RNE x3 (fp #b0 #b01111101 #b10110100001110010101100))))
(let ((.def_336 (fp.mul RNE x2 (fp #b0 #b01111110 #b10010111100011010101000))))
(let ((.def_332 (fp.mul RNE x1 (fp #b0 #b01111110 #b10111101011100001010010))))
(let ((.def_328 (fp.mul RNE x0 (fp #b0 #b01111101 #b00111001010110000001000))))
(let ((.def_329 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_328)))
(let ((.def_333 (fp.add RNE .def_329 .def_332)))
(let ((.def_337 (fp.add RNE .def_333 .def_336)))
(let ((.def_341 (fp.add RNE .def_337 .def_340)))
(let ((.def_346 (fp.add RNE .def_341 .def_345)))
(let ((.def_351 (fp.add RNE .def_346 .def_350)))
(let ((.def_355 (fp.add RNE .def_351 .def_354)))
(let ((.def_356 (fp.leq (fp #b0 #b01111100 #b10001001001101110100110) .def_355)))
.def_356))))))))))))))))
(assert (let ((.def_385 (fp.mul RNE x6 (fp #b0 #b01111101 #b10100101111000110101010))))
(let ((.def_383 (fp.mul RNE x5 (fp #b1 #b01111101 #b10100101111000110101010))))
(let ((.def_378 (fp.mul RNE x4 (fp #b0 #b01111110 #b11111011011001000101101))))
(let ((.def_374 (fp.mul RNE x3 (fp #b1 #b01111101 #b11010010111100011010101))))
(let ((.def_369 (fp.mul RNE x2 (fp #b0 #b01111101 #b00100001110010101100000))))
(let ((.def_365 (fp.mul RNE x1 (fp #b0 #b01111110 #b00010001111010111000011))))
(let ((.def_361 (fp.mul RNE x0 (fp #b0 #b01111101 #b01000000100000110001001))))
(let ((.def_362 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_361)))
(let ((.def_366 (fp.add RNE .def_362 .def_365)))
(let ((.def_370 (fp.add RNE .def_366 .def_369)))
(let ((.def_375 (fp.add RNE .def_370 .def_374)))
(let ((.def_379 (fp.add RNE .def_375 .def_378)))
(let ((.def_384 (fp.add RNE .def_379 .def_383)))
(let ((.def_386 (fp.add RNE .def_384 .def_385)))
(let ((.def_387 (fp.leq (fp #b0 #b01111010 #b11001010110000001000010) .def_386)))
.def_387))))))))))))))))
(assert (let ((.def_417 (fp.mul RNE x6 (fp #b0 #b01111101 #b10000011000100100110111))))
(let ((.def_413 (fp.mul RNE x5 (fp #b1 #b01111110 #b01000011100101011000001))))
(let ((.def_408 (fp.mul RNE x4 (fp #b1 #b01111110 #b01100110111010010111100))))
(let ((.def_403 (fp.mul RNE x3 (fp #b1 #b01111101 #b01100110011001100110011))))
(let ((.def_401 (fp.mul RNE x2 (fp #b0 #b01111010 #b00011110101110000101001))))
(let ((.def_397 (fp.mul RNE x1 (fp #b0 #b01111100 #b11011011001000101101000))))
(let ((.def_393 (fp.mul RNE x0 (fp #b1 #b01111100 #b00011110101110000101001))))
(let ((.def_394 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_393)))
(let ((.def_398 (fp.add RNE .def_394 .def_397)))
(let ((.def_402 (fp.add RNE .def_398 .def_401)))
(let ((.def_404 (fp.add RNE .def_402 .def_403)))
(let ((.def_409 (fp.add RNE .def_404 .def_408)))
(let ((.def_414 (fp.add RNE .def_409 .def_413)))
(let ((.def_418 (fp.add RNE .def_414 .def_417)))
(let ((.def_419 (fp.leq (fp #b0 #b01111101 #b10010100011110101110001) .def_418)))
.def_419))))))))))))))))
(assert (let ((.def_448 (fp.mul RNE x6 (fp #b0 #b01110111 #b10001001001101110100110))))
(let ((.def_444 (fp.mul RNE x5 (fp #b1 #b01111101 #b10111011011001000101101))))
(let ((.def_439 (fp.mul RNE x4 (fp #b0 #b01111110 #b00100011010100111111100))))
(let ((.def_435 (fp.mul RNE x3 (fp #b0 #b01111110 #b11111001110110110010001))))
(let ((.def_433 (fp.mul RNE x2 (fp #b0 #b01111110 #b10001101110100101111001))))
(let ((.def_429 (fp.mul RNE x1 (fp #b0 #b01111110 #b10101110100101111000111))))
(let ((.def_425 (fp.mul RNE x0 (fp #b0 #b01111101 #b01010001111010111000011))))
(let ((.def_426 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_425)))
(let ((.def_430 (fp.add RNE .def_426 .def_429)))
(let ((.def_434 (fp.add RNE .def_430 .def_433)))
(let ((.def_436 (fp.add RNE .def_434 .def_435)))
(let ((.def_440 (fp.add RNE .def_436 .def_439)))
(let ((.def_445 (fp.add RNE .def_440 .def_444)))
(let ((.def_449 (fp.add RNE .def_445 .def_448)))
(let ((.def_450 (fp.leq .def_449 (fp #b1 #b01111110 #b00001111110111110011110))))
.def_450))))))))))))))))
(check-sat)
