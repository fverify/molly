(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_78 (fp.mul RNE x6 (fp #b0 #b01111110 #b10110110110010001011010))))
(let ((.def_74 (fp.mul RNE x5 (fp #b1 #b01111110 #b00010011111101111100111))))
(let ((.def_69 (fp.mul RNE x4 (fp #b0 #b01111110 #b10011011101001011110010))))
(let ((.def_65 (fp.mul RNE x3 (fp #b1 #b01111101 #b10001101010011111110000))))
(let ((.def_60 (fp.mul RNE x2 (fp #b0 #b01111110 #b10101100000010000011001))))
(let ((.def_56 (fp.mul RNE x1 (fp #b1 #b01111100 #b10010101100000010000011))))
(let ((.def_51 (fp.mul RNE x0 (fp #b0 #b01111110 #b11100010110100001110011))))
(let ((.def_52 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_51)))
(let ((.def_57 (fp.add RNE .def_52 .def_56)))
(let ((.def_61 (fp.add RNE .def_57 .def_60)))
(let ((.def_66 (fp.add RNE .def_61 .def_65)))
(let ((.def_70 (fp.add RNE .def_66 .def_69)))
(let ((.def_75 (fp.add RNE .def_70 .def_74)))
(let ((.def_79 (fp.add RNE .def_75 .def_78)))
(let ((.def_80 (fp.leq (fp #b1 #b01111110 #b00001110010101100000010) .def_79)))
.def_80))))))))))))))))
(assert (let ((.def_113 (fp.mul RNE x6 (fp #b1 #b01111110 #b00111000010100011110110))))
(let ((.def_108 (fp.mul RNE x5 (fp #b1 #b01111110 #b01101110000101000111101))))
(let ((.def_103 (fp.mul RNE x4 (fp #b0 #b01111110 #b00000110001001001101111))))
(let ((.def_99 (fp.mul RNE x3 (fp #b1 #b01111110 #b00001011010000111001011))))
(let ((.def_94 (fp.mul RNE x2 (fp #b1 #b01111101 #b00011010100111111011111))))
(let ((.def_89 (fp.mul RNE x1 (fp #b0 #b01111110 #b10101111100111011011001))))
(let ((.def_85 (fp.mul RNE x0 (fp #b0 #b01111110 #b01001000001100010010011))))
(let ((.def_86 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_85)))
(let ((.def_90 (fp.add RNE .def_86 .def_89)))
(let ((.def_95 (fp.add RNE .def_90 .def_94)))
(let ((.def_100 (fp.add RNE .def_95 .def_99)))
(let ((.def_104 (fp.add RNE .def_100 .def_103)))
(let ((.def_109 (fp.add RNE .def_104 .def_108)))
(let ((.def_114 (fp.add RNE .def_109 .def_113)))
(let ((.def_115 (fp.leq (fp #b0 #b01111101 #b10100101111000110101010) .def_114)))
.def_115))))))))))))))))
(assert (let ((.def_148 (fp.mul RNE x6 (fp #b0 #b01111011 #b01111000110101001111111))))
(let ((.def_144 (fp.mul RNE x5 (fp #b0 #b01111100 #b11000100100110111010011))))
(let ((.def_140 (fp.mul RNE x4 (fp #b1 #b01111101 #b01100110011001100110011))))
(let ((.def_135 (fp.mul RNE x3 (fp #b0 #b01111100 #b11010100111111011111010))))
(let ((.def_131 (fp.mul RNE x2 (fp #b1 #b01111101 #b11001011110001101010100))))
(let ((.def_126 (fp.mul RNE x1 (fp #b1 #b01111110 #b00111111011111001110111))))
(let ((.def_121 (fp.mul RNE x0 (fp #b0 #b01111011 #b11000110101001111111000))))
(let ((.def_122 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_121)))
(let ((.def_127 (fp.add RNE .def_122 .def_126)))
(let ((.def_132 (fp.add RNE .def_127 .def_131)))
(let ((.def_136 (fp.add RNE .def_132 .def_135)))
(let ((.def_141 (fp.add RNE .def_136 .def_140)))
(let ((.def_145 (fp.add RNE .def_141 .def_144)))
(let ((.def_149 (fp.add RNE .def_145 .def_148)))
(let ((.def_150 (fp.leq .def_149 (fp #b1 #b01111101 #b11011011001000101101000))))
.def_150))))))))))))))))
(assert (let ((.def_181 (fp.mul RNE x6 (fp #b0 #b01111110 #b01100011110101110000101))))
(let ((.def_177 (fp.mul RNE x5 (fp #b1 #b01111110 #b11101101000011100101011))))
(let ((.def_172 (fp.mul RNE x4 (fp #b0 #b01111110 #b10100110011001100110011))))
(let ((.def_168 (fp.mul RNE x3 (fp #b0 #b01111110 #b11011100101011000000100))))
(let ((.def_164 (fp.mul RNE x2 (fp #b0 #b01111101 #b10010011011101001011110))))
(let ((.def_160 (fp.mul RNE x1 (fp #b0 #b01111101 #b10001111010111000010100))))
(let ((.def_156 (fp.mul RNE x0 (fp #b1 #b01111110 #b11100100110111010011000))))
(let ((.def_157 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_156)))
(let ((.def_161 (fp.add RNE .def_157 .def_160)))
(let ((.def_165 (fp.add RNE .def_161 .def_164)))
(let ((.def_169 (fp.add RNE .def_165 .def_168)))
(let ((.def_173 (fp.add RNE .def_169 .def_172)))
(let ((.def_178 (fp.add RNE .def_173 .def_177)))
(let ((.def_182 (fp.add RNE .def_178 .def_181)))
(let ((.def_183 (fp.leq .def_182 (fp #b0 #b01111110 #b00111100111011011001001))))
.def_183))))))))))))))))
(assert (let ((.def_213 (fp.mul RNE x6 (fp #b1 #b01111011 #b10011101101100100010111))))
(let ((.def_208 (fp.mul RNE x5 (fp #b1 #b01111101 #b10100101111000110101010))))
(let ((.def_205 (fp.mul RNE x4 (fp #b0 #b01111101 #b11101000011100101011000))))
(let ((.def_201 (fp.mul RNE x3 (fp #b0 #b01111110 #b10010000011000100100111))))
(let ((.def_197 (fp.mul RNE x2 (fp #b0 #b01110110 #b00000110001001001101111))))
(let ((.def_193 (fp.mul RNE x1 (fp #b1 #b01111110 #b11000110101001111111000))))
(let ((.def_188 (fp.mul RNE x0 (fp #b0 #b01111110 #b10100000110001001001110))))
(let ((.def_189 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_188)))
(let ((.def_194 (fp.add RNE .def_189 .def_193)))
(let ((.def_198 (fp.add RNE .def_194 .def_197)))
(let ((.def_202 (fp.add RNE .def_198 .def_201)))
(let ((.def_206 (fp.add RNE .def_202 .def_205)))
(let ((.def_209 (fp.add RNE .def_206 .def_208)))
(let ((.def_214 (fp.add RNE .def_209 .def_213)))
(let ((.def_215 (fp.leq (fp #b0 #b01111101 #b00001010001111010111000) .def_214)))
.def_215))))))))))))))))
(assert (let ((.def_247 (fp.mul RNE x6 (fp #b0 #b01111100 #b01110000101000111101100))))
(let ((.def_243 (fp.mul RNE x5 (fp #b1 #b01111100 #b01101110100101111000111))))
(let ((.def_238 (fp.mul RNE x4 (fp #b0 #b01111010 #b10000001000001100010010))))
(let ((.def_234 (fp.mul RNE x3 (fp #b0 #b01111110 #b00000110101001111111000))))
(let ((.def_230 (fp.mul RNE x2 (fp #b1 #b01111110 #b00010001111010111000011))))
(let ((.def_225 (fp.mul RNE x1 (fp #b0 #b01111110 #b01101100000010000011001))))
(let ((.def_221 (fp.mul RNE x0 (fp #b1 #b01111110 #b11001010110000001000010))))
(let ((.def_222 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_221)))
(let ((.def_226 (fp.add RNE .def_222 .def_225)))
(let ((.def_231 (fp.add RNE .def_226 .def_230)))
(let ((.def_235 (fp.add RNE .def_231 .def_234)))
(let ((.def_239 (fp.add RNE .def_235 .def_238)))
(let ((.def_244 (fp.add RNE .def_239 .def_243)))
(let ((.def_248 (fp.add RNE .def_244 .def_247)))
(let ((.def_249 (fp.leq .def_248 (fp #b0 #b01111110 #b01111101011100001010010))))
.def_249))))))))))))))))
(assert (let ((.def_283 (fp.mul RNE x6 (fp #b0 #b01111110 #b00001101110100101111001))))
(let ((.def_279 (fp.mul RNE x5 (fp #b1 #b01111011 #b11000010100011110101110))))
(let ((.def_274 (fp.mul RNE x4 (fp #b0 #b01110111 #b00000110001001001101111))))
(let ((.def_270 (fp.mul RNE x3 (fp #b1 #b01111110 #b01001001101110100101111))))
(let ((.def_265 (fp.mul RNE x2 (fp #b1 #b01111110 #b10011001100110011001101))))
(let ((.def_260 (fp.mul RNE x1 (fp #b1 #b01111110 #b10000100100110111010011))))
(let ((.def_255 (fp.mul RNE x0 (fp #b0 #b01111010 #b11110011101101100100011))))
(let ((.def_256 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_255)))
(let ((.def_261 (fp.add RNE .def_256 .def_260)))
(let ((.def_266 (fp.add RNE .def_261 .def_265)))
(let ((.def_271 (fp.add RNE .def_266 .def_270)))
(let ((.def_275 (fp.add RNE .def_271 .def_274)))
(let ((.def_280 (fp.add RNE .def_275 .def_279)))
(let ((.def_284 (fp.add RNE .def_280 .def_283)))
(let ((.def_285 (fp.leq .def_284 (fp #b1 #b01111110 #b00110110110010001011010))))
.def_285))))))))))))))))
(assert (let ((.def_315 (fp.mul RNE x6 (fp #b1 #b01111100 #b01000001100010010011100))))
(let ((.def_310 (fp.mul RNE x5 (fp #b0 #b01111110 #b00011011101001011110010))))
(let ((.def_306 (fp.mul RNE x4 (fp #b0 #b01111101 #b10100000110001001001110))))
(let ((.def_302 (fp.mul RNE x3 (fp #b0 #b01111101 #b01010000111001010110000))))
(let ((.def_298 (fp.mul RNE x2 (fp #b1 #b01111100 #b01000111101011100001010))))
(let ((.def_293 (fp.mul RNE x1 (fp #b0 #b01111110 #b00111101011100001010010))))
(let ((.def_289 (fp.mul RNE x0 (fp #b1 #b01111100 #b11001100110011001100110))))
(let ((.def_290 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_289)))
(let ((.def_294 (fp.add RNE .def_290 .def_293)))
(let ((.def_299 (fp.add RNE .def_294 .def_298)))
(let ((.def_303 (fp.add RNE .def_299 .def_302)))
(let ((.def_307 (fp.add RNE .def_303 .def_306)))
(let ((.def_311 (fp.add RNE .def_307 .def_310)))
(let ((.def_316 (fp.add RNE .def_311 .def_315)))
(let ((.def_317 (fp.leq .def_316 (fp #b0 #b01111100 #b01101110100101111000111))))
.def_317))))))))))))))))
(assert (let ((.def_350 (fp.mul RNE x6 (fp #b1 #b01111011 #b01110100101111000110101))))
(let ((.def_345 (fp.mul RNE x5 (fp #b0 #b01111101 #b01001110110110010001011))))
(let ((.def_341 (fp.mul RNE x4 (fp #b0 #b01111110 #b11111111011111001110111))))
(let ((.def_337 (fp.mul RNE x3 (fp #b1 #b01111110 #b11111000110101001111111))))
(let ((.def_332 (fp.mul RNE x2 (fp #b1 #b01111110 #b10001100010010011011101))))
(let ((.def_327 (fp.mul RNE x1 (fp #b1 #b01111101 #b01101111100111011011001))))
(let ((.def_322 (fp.mul RNE x0 (fp #b0 #b01111101 #b10101001111110111110100))))
(let ((.def_323 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_322)))
(let ((.def_328 (fp.add RNE .def_323 .def_327)))
(let ((.def_333 (fp.add RNE .def_328 .def_332)))
(let ((.def_338 (fp.add RNE .def_333 .def_337)))
(let ((.def_342 (fp.add RNE .def_338 .def_341)))
(let ((.def_346 (fp.add RNE .def_342 .def_345)))
(let ((.def_351 (fp.add RNE .def_346 .def_350)))
(let ((.def_352 (fp.leq .def_351 (fp #b0 #b01111110 #b10010000111001010110000))))
.def_352))))))))))))))))
(assert (let ((.def_381 (fp.mul RNE x6 (fp #b0 #b01111110 #b10011001000101101000100))))
(let ((.def_377 (fp.mul RNE x5 (fp #b0 #b01111110 #b00011001000101101000100))))
(let ((.def_373 (fp.mul RNE x4 (fp #b1 #b01111011 #b00001110010101100000010))))
(let ((.def_368 (fp.mul RNE x3 (fp #b1 #b01111110 #b10010111100011010101000))))
(let ((.def_362 (fp.mul RNE x1 (fp #b0 #b01111011 #b00100010110100001110011))))
(let ((.def_358 (fp.mul RNE x0 (fp #b0 #b01111101 #b11101011100001010001111))))
(let ((.def_359 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_358)))
(let ((.def_363 (fp.add RNE .def_359 .def_362)))
(let ((.def_265 (fp.mul RNE x2 (fp #b1 #b01111110 #b10011001100110011001101))))
(let ((.def_364 (fp.add RNE .def_265 .def_363)))
(let ((.def_369 (fp.add RNE .def_364 .def_368)))
(let ((.def_374 (fp.add RNE .def_369 .def_373)))
(let ((.def_378 (fp.add RNE .def_374 .def_377)))
(let ((.def_382 (fp.add RNE .def_378 .def_381)))
(let ((.def_383 (fp.leq (fp #b1 #b01111101 #b01111110111110011101110) .def_382)))
.def_383))))))))))))))))
(assert (let ((.def_418 (fp.mul RNE x6 (fp #b1 #b01111101 #b01000000100000110001001))))
(let ((.def_413 (fp.mul RNE x5 (fp #b1 #b01111100 #b10100001110010101100000))))
(let ((.def_408 (fp.mul RNE x4 (fp #b0 #b01111101 #b01010110000001000001100))))
(let ((.def_404 (fp.mul RNE x3 (fp #b1 #b01111110 #b00001010001111010111000))))
(let ((.def_399 (fp.mul RNE x2 (fp #b1 #b01111101 #b01111000110101001111111))))
(let ((.def_394 (fp.mul RNE x1 (fp #b1 #b01111110 #b10110011101101100100011))))
(let ((.def_389 (fp.mul RNE x0 (fp #b1 #b01111110 #b01001011010000111001011))))
(let ((.def_390 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_389)))
(let ((.def_395 (fp.add RNE .def_390 .def_394)))
(let ((.def_400 (fp.add RNE .def_395 .def_399)))
(let ((.def_405 (fp.add RNE .def_400 .def_404)))
(let ((.def_409 (fp.add RNE .def_405 .def_408)))
(let ((.def_414 (fp.add RNE .def_409 .def_413)))
(let ((.def_419 (fp.add RNE .def_414 .def_418)))
(let ((.def_420 (fp.leq .def_419 (fp #b0 #b01111101 #b11000101101000011100101))))
.def_420))))))))))))))))
(assert (let ((.def_451 (fp.mul RNE x6 (fp #b0 #b01111110 #b10100010110100001110011))))
(let ((.def_447 (fp.mul RNE x5 (fp #b0 #b01111110 #b01100110011001100110011))))
(let ((.def_443 (fp.mul RNE x4 (fp #b0 #b01111110 #b10011000100100110111010))))
(let ((.def_439 (fp.mul RNE x3 (fp #b1 #b01111010 #b01011000000100000110001))))
(let ((.def_434 (fp.mul RNE x2 (fp #b0 #b01111110 #b10001001101110100101111))))
(let ((.def_430 (fp.mul RNE x1 (fp #b1 #b01111101 #b01000100100110111010011))))
(let ((.def_425 (fp.mul RNE x0 (fp #b0 #b01111110 #b01011001000101101000100))))
(let ((.def_426 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_425)))
(let ((.def_431 (fp.add RNE .def_426 .def_430)))
(let ((.def_435 (fp.add RNE .def_431 .def_434)))
(let ((.def_440 (fp.add RNE .def_435 .def_439)))
(let ((.def_444 (fp.add RNE .def_440 .def_443)))
(let ((.def_448 (fp.add RNE .def_444 .def_447)))
(let ((.def_452 (fp.add RNE .def_448 .def_451)))
(let ((.def_453 (fp.leq (fp #b0 #b01111100 #b10101100000010000011001) .def_452)))
.def_453))))))))))))))))
(assert (let ((.def_487 (fp.mul RNE x6 (fp #b1 #b01111101 #b10000110001001001101111))))
(let ((.def_482 (fp.mul RNE x5 (fp #b1 #b01111110 #b11000111101011100001010))))
(let ((.def_477 (fp.mul RNE x4 (fp #b1 #b01111010 #b01110000101000111101100))))
(let ((.def_472 (fp.mul RNE x3 (fp #b0 #b01111110 #b11000101101000011100101))))
(let ((.def_468 (fp.mul RNE x2 (fp #b1 #b01111101 #b10010100011110101110001))))
(let ((.def_463 (fp.mul RNE x1 (fp #b0 #b01111110 #b01001111010111000010100))))
(let ((.def_459 (fp.mul RNE x0 (fp #b1 #b01111110 #b11101011100001010001111))))
(let ((.def_460 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_459)))
(let ((.def_464 (fp.add RNE .def_460 .def_463)))
(let ((.def_469 (fp.add RNE .def_464 .def_468)))
(let ((.def_473 (fp.add RNE .def_469 .def_472)))
(let ((.def_478 (fp.add RNE .def_473 .def_477)))
(let ((.def_483 (fp.add RNE .def_478 .def_482)))
(let ((.def_488 (fp.add RNE .def_483 .def_487)))
(let ((.def_489 (fp.leq (fp #b0 #b01111101 #b01001011110001101010100) .def_488)))
.def_489))))))))))))))))
(assert (let ((.def_520 (fp.mul RNE x6 (fp #b0 #b01111101 #b01101100100010110100010))))
(let ((.def_516 (fp.mul RNE x5 (fp #b1 #b01111101 #b10110010001011010000111))))
(let ((.def_511 (fp.mul RNE x4 (fp #b0 #b01111110 #b10111111011111001110111))))
(let ((.def_507 (fp.mul RNE x3 (fp #b1 #b01111101 #b11010111000010100011111))))
(let ((.def_502 (fp.mul RNE x2 (fp #b0 #b01111101 #b10110111010010111100011))))
(let ((.def_498 (fp.mul RNE x1 (fp #b0 #b01111011 #b00101011000000100000110))))
(let ((.def_494 (fp.mul RNE x0 (fp #b0 #b01111110 #b01110010101100000010000))))
(let ((.def_495 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_494)))
(let ((.def_499 (fp.add RNE .def_495 .def_498)))
(let ((.def_503 (fp.add RNE .def_499 .def_502)))
(let ((.def_508 (fp.add RNE .def_503 .def_507)))
(let ((.def_512 (fp.add RNE .def_508 .def_511)))
(let ((.def_517 (fp.add RNE .def_512 .def_516)))
(let ((.def_521 (fp.add RNE .def_517 .def_520)))
(let ((.def_522 (fp.leq .def_521 (fp #b0 #b01111100 #b11110101110000101001000))))
.def_522))))))))))))))))
(assert (let ((.def_556 (fp.mul RNE x6 (fp #b1 #b01111110 #b00011000100100110111010))))
(let ((.def_551 (fp.mul RNE x5 (fp #b1 #b01111100 #b01001001101110100101111))))
(let ((.def_546 (fp.mul RNE x4 (fp #b0 #b01111110 #b01101000111101011100001))))
(let ((.def_542 (fp.mul RNE x3 (fp #b0 #b01111110 #b11000001100010010011100))))
(let ((.def_538 (fp.mul RNE x2 (fp #b1 #b01111110 #b01111000010100011110110))))
(let ((.def_533 (fp.mul RNE x1 (fp #b1 #b01111110 #b10001010001111010111000))))
(let ((.def_528 (fp.mul RNE x0 (fp #b0 #b01111101 #b00101011000000100000110))))
(let ((.def_529 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_528)))
(let ((.def_534 (fp.add RNE .def_529 .def_533)))
(let ((.def_539 (fp.add RNE .def_534 .def_538)))
(let ((.def_543 (fp.add RNE .def_539 .def_542)))
(let ((.def_547 (fp.add RNE .def_543 .def_546)))
(let ((.def_552 (fp.add RNE .def_547 .def_551)))
(let ((.def_557 (fp.add RNE .def_552 .def_556)))
(let ((.def_558 (fp.leq .def_557 (fp #b1 #b01111110 #b11100111111011111001111))))
.def_558))))))))))))))))
(assert (let ((.def_586 (fp.mul RNE x6 (fp #b0 #b01111100 #b11100101011000000100001))))
(let ((.def_582 (fp.mul RNE x5 (fp #b0 #b01111101 #b00010000011000100100111))))
(let ((.def_578 (fp.mul RNE x4 (fp #b0 #b01111110 #b01111011111001110110110))))
(let ((.def_574 (fp.mul RNE x3 (fp #b0 #b01111110 #b10000100100110111010011))))
(let ((.def_572 (fp.mul RNE x2 (fp #b0 #b01111101 #b01110001101010011111110))))
(let ((.def_568 (fp.mul RNE x1 (fp #b1 #b01111110 #b01111011011001000101101))))
(let ((.def_563 (fp.mul RNE x0 (fp #b0 #b01111010 #b00011110101110000101001))))
(let ((.def_564 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_563)))
(let ((.def_569 (fp.add RNE .def_564 .def_568)))
(let ((.def_573 (fp.add RNE .def_569 .def_572)))
(let ((.def_575 (fp.add RNE .def_573 .def_574)))
(let ((.def_579 (fp.add RNE .def_575 .def_578)))
(let ((.def_583 (fp.add RNE .def_579 .def_582)))
(let ((.def_587 (fp.add RNE .def_583 .def_586)))
(let ((.def_588 (fp.leq (fp #b0 #b01111101 #b10111011011001000101101) .def_587)))
.def_588))))))))))))))))
(assert (let ((.def_619 (fp.mul RNE x6 (fp #b0 #b01111110 #b10001111110111110011110))))
(let ((.def_615 (fp.mul RNE x5 (fp #b1 #b01111011 #b01111100111011011001001))))
(let ((.def_610 (fp.mul RNE x4 (fp #b1 #b01111011 #b10001001001101110100110))))
(let ((.def_605 (fp.mul RNE x3 (fp #b1 #b01111110 #b01100111011011001000110))))
(let ((.def_600 (fp.mul RNE x2 (fp #b1 #b01111101 #b10110010001011010000111))))
(let ((.def_598 (fp.mul RNE x1 (fp #b0 #b01111100 #b10110100001110010101100))))
(let ((.def_594 (fp.mul RNE x0 (fp #b1 #b01111100 #b00010100011110101110001))))
(let ((.def_595 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_594)))
(let ((.def_599 (fp.add RNE .def_595 .def_598)))
(let ((.def_601 (fp.add RNE .def_599 .def_600)))
(let ((.def_606 (fp.add RNE .def_601 .def_605)))
(let ((.def_611 (fp.add RNE .def_606 .def_610)))
(let ((.def_616 (fp.add RNE .def_611 .def_615)))
(let ((.def_620 (fp.add RNE .def_616 .def_619)))
(let ((.def_621 (fp.leq (fp #b0 #b01111110 #b01001101110100101111001) .def_620)))
.def_621))))))))))))))))
(check-sat)
