(declare-fun |c::main::1::IN!0@1#0| () (_ FloatingPoint 8 24))
(assert (let ((.def_17 (fp.mul RNE |c::main::1::IN!0@1#0| |c::main::1::IN!0@1#0|)))
(let ((.def_18 (fp.mul RNE |c::main::1::IN!0@1#0| .def_17)))
(let ((.def_24 (fp.mul RNE |c::main::1::IN!0@1#0| .def_18)))
(let ((.def_25 (fp.mul RNE |c::main::1::IN!0@1#0| .def_24)))
(let ((.def_30 (fp.mul RNE |c::main::1::IN!0@1#0| .def_25)))
(let ((.def_31 (fp.mul RNE |c::main::1::IN!0@1#0| .def_30)))
(let ((.def_34 (fp.div RNE .def_31 (fp #b0 #b10001011 #b00111011000000000000000))))
(let ((.def_28 (fp.div RNE .def_25 (fp #b0 #b10000101 #b11100000000000000000000))))
(let ((.def_21 (fp.div RNE .def_18 (fp #b0 #b10000001 #b10000000000000000000000))))
(let ((.def_22 (fp.neg .def_21)))
(let ((.def_23 (fp.add RNE |c::main::1::IN!0@1#0| .def_22)))
(let ((.def_29 (fp.add RNE .def_23 .def_28)))
(let ((.def_35 (fp.add RNE .def_29 .def_34)))
(let ((.def_36 ((_ to_fp 11 53) RNE .def_35)))
(let ((.def_39 (fp.leq .def_36 (fp #b0 #b01111111110 #b1111101011100001010001111010111000010100011110101110))))
(let ((.def_40 (not .def_39)))
(let ((.def_15 (fp.lt (fp #b1 #b01111111 #b10010010000111111011011) |c::main::1::IN!0@1#0|)))
(let ((.def_12 (fp.lt |c::main::1::IN!0@1#0| (fp #b0 #b01111111 #b10010010000111111011011))))
(let ((.def_16 (and .def_12 .def_15)))
(let ((.def_41 (and .def_16 .def_40)))
.def_41)))))))))))))))))))))
(check-sat)
