(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_76 (fp.mul RNE x6 (fp #b0 #b01111110 #b10110010101100000010000))))
(let ((.def_72 (fp.mul RNE x5 (fp #b0 #b01111101 #b11001000101101000011101))))
(let ((.def_68 (fp.mul RNE x4 (fp #b1 #b01111110 #b10101100000010000011001))))
(let ((.def_63 (fp.mul RNE x3 (fp #b0 #b01111110 #b10100010110100001110011))))
(let ((.def_59 (fp.mul RNE x2 (fp #b1 #b01111100 #b01100100010110100001110))))
(let ((.def_54 (fp.mul RNE x1 (fp #b0 #b01111101 #b10111011011001000101101))))
(let ((.def_50 (fp.mul RNE x0 (fp #b0 #b01111110 #b00101110000101000111101))))
(let ((.def_51 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_50)))
(let ((.def_55 (fp.add RNE .def_51 .def_54)))
(let ((.def_60 (fp.add RNE .def_55 .def_59)))
(let ((.def_64 (fp.add RNE .def_60 .def_63)))
(let ((.def_69 (fp.add RNE .def_64 .def_68)))
(let ((.def_73 (fp.add RNE .def_69 .def_72)))
(let ((.def_77 (fp.add RNE .def_73 .def_76)))
(let ((.def_78 (fp.leq (fp #b0 #b01111110 #b10011101001011110001101) .def_77)))
.def_78))))))))))))))))
(assert (let ((.def_111 (fp.mul RNE x6 (fp #b1 #b01111100 #b01100110011001100110011))))
(let ((.def_106 (fp.mul RNE x5 (fp #b0 #b01111101 #b01011010000111001010110))))
(let ((.def_102 (fp.mul RNE x4 (fp #b1 #b01111110 #b00010111100011010101000))))
(let ((.def_97 (fp.mul RNE x3 (fp #b0 #b01111110 #b00110000101000111101100))))
(let ((.def_93 (fp.mul RNE x2 (fp #b0 #b01111100 #b01010110000001000001100))))
(let ((.def_89 (fp.mul RNE x1 (fp #b1 #b01111110 #b11011111101111100111011))))
(let ((.def_84 (fp.mul RNE x0 (fp #b1 #b01111110 #b01100011110101110000101))))
(let ((.def_85 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_84)))
(let ((.def_90 (fp.add RNE .def_85 .def_89)))
(let ((.def_94 (fp.add RNE .def_90 .def_93)))
(let ((.def_98 (fp.add RNE .def_94 .def_97)))
(let ((.def_103 (fp.add RNE .def_98 .def_102)))
(let ((.def_107 (fp.add RNE .def_103 .def_106)))
(let ((.def_112 (fp.add RNE .def_107 .def_111)))
(let ((.def_113 (fp.leq (fp #b0 #b01111101 #b00011001100110011001101) .def_112)))
.def_113))))))))))))))))
(assert (let ((.def_147 (fp.mul RNE x6 (fp #b0 #b01111110 #b10110001101010011111110))))
(let ((.def_143 (fp.mul RNE x5 (fp #b1 #b01111010 #b01100000010000011000101))))
(let ((.def_138 (fp.mul RNE x4 (fp #b1 #b01111101 #b10000110001001001101111))))
(let ((.def_133 (fp.mul RNE x3 (fp #b1 #b01111010 #b00001110010101100000010))))
(let ((.def_128 (fp.mul RNE x2 (fp #b1 #b01111100 #b01000101101000011100101))))
(let ((.def_123 (fp.mul RNE x1 (fp #b0 #b01111001 #b10011001100110011001101))))
(let ((.def_119 (fp.mul RNE x0 (fp #b0 #b01111010 #b00010110100001110010110))))
(let ((.def_120 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_119)))
(let ((.def_124 (fp.add RNE .def_120 .def_123)))
(let ((.def_129 (fp.add RNE .def_124 .def_128)))
(let ((.def_134 (fp.add RNE .def_129 .def_133)))
(let ((.def_139 (fp.add RNE .def_134 .def_138)))
(let ((.def_144 (fp.add RNE .def_139 .def_143)))
(let ((.def_148 (fp.add RNE .def_144 .def_147)))
(let ((.def_149 (fp.leq .def_148 (fp #b1 #b01111110 #b01010111100011010101000))))
.def_149))))))))))))))))
(assert (let ((.def_182 (fp.mul RNE x6 (fp #b0 #b01111110 #b10000110001001001101111))))
(let ((.def_178 (fp.mul RNE x5 (fp #b1 #b01111010 #b11000010100011110101110))))
(let ((.def_173 (fp.mul RNE x4 (fp #b0 #b01111100 #b00000010000011000100101))))
(let ((.def_169 (fp.mul RNE x3 (fp #b0 #b01111110 #b11000010000011000100101))))
(let ((.def_165 (fp.mul RNE x2 (fp #b1 #b01111001 #b01111000110101001111111))))
(let ((.def_160 (fp.mul RNE x1 (fp #b1 #b01111110 #b01110111110011101101101))))
(let ((.def_155 (fp.mul RNE x0 (fp #b1 #b01111110 #b11111110111110011101110))))
(let ((.def_156 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_155)))
(let ((.def_161 (fp.add RNE .def_156 .def_160)))
(let ((.def_166 (fp.add RNE .def_161 .def_165)))
(let ((.def_170 (fp.add RNE .def_166 .def_169)))
(let ((.def_174 (fp.add RNE .def_170 .def_173)))
(let ((.def_179 (fp.add RNE .def_174 .def_178)))
(let ((.def_183 (fp.add RNE .def_179 .def_182)))
(let ((.def_184 (fp.leq .def_183 (fp #b0 #b01111110 #b11011100001010001111011))))
.def_184))))))))))))))))
(assert (let ((.def_215 (fp.mul RNE x6 (fp #b1 #b01111110 #b10001010110000001000010))))
(let ((.def_210 (fp.mul RNE x5 (fp #b1 #b01111110 #b01010110100001110010110))))
(let ((.def_205 (fp.mul RNE x4 (fp #b0 #b01111110 #b01111011111001110110110))))
(let ((.def_201 (fp.mul RNE x3 (fp #b0 #b01111110 #b10010110000001000001100))))
(let ((.def_197 (fp.mul RNE x2 (fp #b0 #b01111110 #b10001000001100010010011))))
(let ((.def_193 (fp.mul RNE x1 (fp #b0 #b01111100 #b01011010000111001010110))))
(let ((.def_189 (fp.mul RNE x0 (fp #b0 #b01111110 #b11101010011111101111101))))
(let ((.def_190 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_189)))
(let ((.def_194 (fp.add RNE .def_190 .def_193)))
(let ((.def_198 (fp.add RNE .def_194 .def_197)))
(let ((.def_202 (fp.add RNE .def_198 .def_201)))
(let ((.def_206 (fp.add RNE .def_202 .def_205)))
(let ((.def_211 (fp.add RNE .def_206 .def_210)))
(let ((.def_216 (fp.add RNE .def_211 .def_215)))
(let ((.def_217 (fp.leq (fp #b0 #b01111101 #b11101111100111011011001) .def_216)))
.def_217))))))))))))))))
(assert (let ((.def_249 (fp.mul RNE x6 (fp #b1 #b01111101 #b01100010010011011101001))))
(let ((.def_244 (fp.mul RNE x5 (fp #b1 #b01111110 #b00011000100100110111010))))
(let ((.def_239 (fp.mul RNE x4 (fp #b1 #b01111110 #b10011101001011110001101))))
(let ((.def_236 (fp.mul RNE x3 (fp #b0 #b01111101 #b11110110110010001011010))))
(let ((.def_232 (fp.mul RNE x2 (fp #b0 #b01111110 #b10011000100100110111010))))
(let ((.def_228 (fp.mul RNE x1 (fp #b1 #b01111101 #b10101011000000100000110))))
(let ((.def_223 (fp.mul RNE x0 (fp #b1 #b01111100 #b10010101100000010000011))))
(let ((.def_224 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_223)))
(let ((.def_229 (fp.add RNE .def_224 .def_228)))
(let ((.def_233 (fp.add RNE .def_229 .def_232)))
(let ((.def_237 (fp.add RNE .def_233 .def_236)))
(let ((.def_240 (fp.add RNE .def_237 .def_239)))
(let ((.def_245 (fp.add RNE .def_240 .def_244)))
(let ((.def_250 (fp.add RNE .def_245 .def_249)))
(let ((.def_251 (fp.leq (fp #b0 #b01111100 #b01001111110111110011110) .def_250)))
.def_251))))))))))))))))
(assert (let ((.def_285 (fp.mul RNE x6 (fp #b0 #b01111101 #b01011101001011110001101))))
(let ((.def_281 (fp.mul RNE x5 (fp #b1 #b01111101 #b00100100110111010011000))))
(let ((.def_276 (fp.mul RNE x4 (fp #b1 #b01111110 #b11001001101110100101111))))
(let ((.def_271 (fp.mul RNE x3 (fp #b0 #b01111100 #b00001110010101100000010))))
(let ((.def_267 (fp.mul RNE x2 (fp #b1 #b01111101 #b10111010010111100011011))))
(let ((.def_262 (fp.mul RNE x1 (fp #b1 #b01111110 #b11101000011100101011000))))
(let ((.def_257 (fp.mul RNE x0 (fp #b0 #b01111100 #b11010010111100011010101))))
(let ((.def_258 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_257)))
(let ((.def_263 (fp.add RNE .def_258 .def_262)))
(let ((.def_268 (fp.add RNE .def_263 .def_267)))
(let ((.def_272 (fp.add RNE .def_268 .def_271)))
(let ((.def_277 (fp.add RNE .def_272 .def_276)))
(let ((.def_282 (fp.add RNE .def_277 .def_281)))
(let ((.def_286 (fp.add RNE .def_282 .def_285)))
(let ((.def_287 (fp.leq (fp #b1 #b01111110 #b11010010011011101001100) .def_286)))
.def_287))))))))))))))))
(assert (let ((.def_321 (fp.mul RNE x6 (fp #b1 #b01111110 #b10000111101011100001010))))
(let ((.def_316 (fp.mul RNE x5 (fp #b1 #b01111101 #b01011110001101010100000))))
(let ((.def_311 (fp.mul RNE x4 (fp #b1 #b01111101 #b10110000001000001100010))))
(let ((.def_306 (fp.mul RNE x3 (fp #b0 #b01111110 #b10010100111111011111010))))
(let ((.def_302 (fp.mul RNE x2 (fp #b0 #b01111110 #b01000111001010110000001))))
(let ((.def_298 (fp.mul RNE x1 (fp #b1 #b01111100 #b10110010001011010000111))))
(let ((.def_293 (fp.mul RNE x0 (fp #b1 #b01111110 #b00011100001010001111011))))
(let ((.def_294 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_293)))
(let ((.def_299 (fp.add RNE .def_294 .def_298)))
(let ((.def_303 (fp.add RNE .def_299 .def_302)))
(let ((.def_307 (fp.add RNE .def_303 .def_306)))
(let ((.def_312 (fp.add RNE .def_307 .def_311)))
(let ((.def_317 (fp.add RNE .def_312 .def_316)))
(let ((.def_322 (fp.add RNE .def_317 .def_321)))
(let ((.def_323 (fp.leq .def_322 (fp #b0 #b01111101 #b01100100010110100001110))))
.def_323))))))))))))))))
(assert (let ((.def_355 (fp.mul RNE x6 (fp #b1 #b01111001 #b00010110100001110010110))))
(let ((.def_350 (fp.mul RNE x5 (fp #b1 #b01111101 #b10101011000000100000110))))
(let ((.def_348 (fp.mul RNE x4 (fp #b1 #b01111110 #b10011010100111111011111))))
(let ((.def_343 (fp.mul RNE x3 (fp #b1 #b01111100 #b00001010001111010111000))))
(let ((.def_338 (fp.mul RNE x2 (fp #b0 #b01111101 #b01001111110111110011110))))
(let ((.def_334 (fp.mul RNE x1 (fp #b0 #b01111100 #b11010000111001010110000))))
(let ((.def_330 (fp.mul RNE x0 (fp #b1 #b01111110 #b00010001111010111000011))))
(let ((.def_331 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_330)))
(let ((.def_335 (fp.add RNE .def_331 .def_334)))
(let ((.def_339 (fp.add RNE .def_335 .def_338)))
(let ((.def_344 (fp.add RNE .def_339 .def_343)))
(let ((.def_349 (fp.add RNE .def_344 .def_348)))
(let ((.def_351 (fp.add RNE .def_349 .def_350)))
(let ((.def_356 (fp.add RNE .def_351 .def_355)))
(let ((.def_357 (fp.leq .def_356 (fp #b1 #b01111110 #b10110010001011010000111))))
.def_357))))))))))))))))
(assert (let ((.def_388 (fp.mul RNE x6 (fp #b1 #b01111110 #b11111111011111001110111))))
(let ((.def_383 (fp.mul RNE x5 (fp #b1 #b01111110 #b01110111110011101101101))))
(let ((.def_381 (fp.mul RNE x4 (fp #b0 #b01111110 #b11000100100110111010011))))
(let ((.def_377 (fp.mul RNE x3 (fp #b1 #b01111110 #b01101011000000100000110))))
(let ((.def_372 (fp.mul RNE x2 (fp #b0 #b01111110 #b00111010111000010100100))))
(let ((.def_368 (fp.mul RNE x1 (fp #b0 #b01111110 #b01001111110111110011110))))
(let ((.def_364 (fp.mul RNE x0 (fp #b1 #b01111100 #b11110001101010011111110))))
(let ((.def_365 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_364)))
(let ((.def_369 (fp.add RNE .def_365 .def_368)))
(let ((.def_373 (fp.add RNE .def_369 .def_372)))
(let ((.def_378 (fp.add RNE .def_373 .def_377)))
(let ((.def_382 (fp.add RNE .def_378 .def_381)))
(let ((.def_384 (fp.add RNE .def_382 .def_383)))
(let ((.def_389 (fp.add RNE .def_384 .def_388)))
(let ((.def_390 (fp.leq (fp #b1 #b01111110 #b11110000101000111101100) .def_389)))
.def_390))))))))))))))))
(assert (let ((.def_421 (fp.mul RNE x6 (fp #b0 #b01111101 #b00100100110111010011000))))
(let ((.def_419 (fp.mul RNE x5 (fp #b0 #b01111110 #b01111000110101001111111))))
(let ((.def_415 (fp.mul RNE x4 (fp #b1 #b01111110 #b11111100111011011001001))))
(let ((.def_410 (fp.mul RNE x3 (fp #b1 #b01111101 #b11001000101101000011101))))
(let ((.def_407 (fp.mul RNE x2 (fp #b1 #b01111011 #b11100111011011001000110))))
(let ((.def_402 (fp.mul RNE x1 (fp #b1 #b01111101 #b10000000000000000000000))))
(let ((.def_397 (fp.mul RNE x0 (fp #b1 #b01111110 #b11001101110100101111001))))
(let ((.def_398 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_397)))
(let ((.def_403 (fp.add RNE .def_398 .def_402)))
(let ((.def_408 (fp.add RNE .def_403 .def_407)))
(let ((.def_411 (fp.add RNE .def_408 .def_410)))
(let ((.def_416 (fp.add RNE .def_411 .def_415)))
(let ((.def_420 (fp.add RNE .def_416 .def_419)))
(let ((.def_422 (fp.add RNE .def_420 .def_421)))
(let ((.def_423 (fp.leq .def_422 (fp #b1 #b01111110 #b00000001100010010011100))))
.def_423))))))))))))))))
(assert (let ((.def_454 (fp.mul RNE x6 (fp #b0 #b01111001 #b10111010010111100011011))))
(let ((.def_450 (fp.mul RNE x5 (fp #b1 #b01111101 #b01110100101111000110101))))
(let ((.def_445 (fp.mul RNE x4 (fp #b0 #b01111110 #b01101000111101011100001))))
(let ((.def_441 (fp.mul RNE x3 (fp #b0 #b01111110 #b01110101001111110111110))))
(let ((.def_437 (fp.mul RNE x2 (fp #b1 #b01111101 #b00110100001110010101100))))
(let ((.def_432 (fp.mul RNE x1 (fp #b0 #b01111101 #b10111010010111100011011))))
(let ((.def_430 (fp.mul RNE x0 (fp #b1 #b01111110 #b10011001000101101000100))))
(let ((.def_431 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_430)))
(let ((.def_433 (fp.add RNE .def_431 .def_432)))
(let ((.def_438 (fp.add RNE .def_433 .def_437)))
(let ((.def_442 (fp.add RNE .def_438 .def_441)))
(let ((.def_446 (fp.add RNE .def_442 .def_445)))
(let ((.def_451 (fp.add RNE .def_446 .def_450)))
(let ((.def_455 (fp.add RNE .def_451 .def_454)))
(let ((.def_456 (fp.leq .def_455 (fp #b1 #b01111101 #b10011011101001011110010))))
.def_456))))))))))))))))
(assert (let ((.def_489 (fp.mul RNE x6 (fp #b1 #b01111101 #b01100101011000000100001))))
(let ((.def_484 (fp.mul RNE x5 (fp #b1 #b01111011 #b01100100010110100001110))))
(let ((.def_479 (fp.mul RNE x4 (fp #b1 #b01111110 #b01100001110010101100000))))
(let ((.def_474 (fp.mul RNE x3 (fp #b0 #b01111101 #b01000011100101011000001))))
(let ((.def_470 (fp.mul RNE x2 (fp #b0 #b01111110 #b01100101111000110101010))))
(let ((.def_466 (fp.mul RNE x1 (fp #b0 #b01111110 #b10000001000001100010010))))
(let ((.def_462 (fp.mul RNE x0 (fp #b0 #b01111110 #b00110111010010111100011))))
(let ((.def_463 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_462)))
(let ((.def_467 (fp.add RNE .def_463 .def_466)))
(let ((.def_471 (fp.add RNE .def_467 .def_470)))
(let ((.def_475 (fp.add RNE .def_471 .def_474)))
(let ((.def_480 (fp.add RNE .def_475 .def_479)))
(let ((.def_485 (fp.add RNE .def_480 .def_484)))
(let ((.def_490 (fp.add RNE .def_485 .def_489)))
(let ((.def_491 (fp.leq (fp #b1 #b01111110 #b00010010011011101001100) .def_490)))
.def_491))))))))))))))))
(assert (let ((.def_524 (fp.mul RNE x6 (fp #b1 #b01111101 #b11001001101110100101111))))
(let ((.def_519 (fp.mul RNE x5 (fp #b0 #b01111100 #b01111110111110011101110))))
(let ((.def_515 (fp.mul RNE x4 (fp #b1 #b01111110 #b01000101101000011100101))))
(let ((.def_510 (fp.mul RNE x3 (fp #b1 #b01111110 #b10011111001110110110010))))
(let ((.def_505 (fp.mul RNE x2 (fp #b0 #b01111110 #b00110111010010111100011))))
(let ((.def_503 (fp.mul RNE x1 (fp #b1 #b01111110 #b10111011111001110110110))))
(let ((.def_498 (fp.mul RNE x0 (fp #b1 #b01110111 #b01000111101011100001010))))
(let ((.def_499 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_498)))
(let ((.def_504 (fp.add RNE .def_499 .def_503)))
(let ((.def_506 (fp.add RNE .def_504 .def_505)))
(let ((.def_511 (fp.add RNE .def_506 .def_510)))
(let ((.def_516 (fp.add RNE .def_511 .def_515)))
(let ((.def_520 (fp.add RNE .def_516 .def_519)))
(let ((.def_525 (fp.add RNE .def_520 .def_524)))
(let ((.def_526 (fp.leq .def_525 (fp #b1 #b01111110 #b01101001111110111110100))))
.def_526))))))))))))))))
(assert (let ((.def_558 (fp.mul RNE x6 (fp #b0 #b01111101 #b10110110010001011010001))))
(let ((.def_554 (fp.mul RNE x5 (fp #b0 #b01111110 #b01000010000011000100101))))
(let ((.def_550 (fp.mul RNE x4 (fp #b1 #b01111110 #b00010011111101111100111))))
(let ((.def_545 (fp.mul RNE x3 (fp #b0 #b01111011 #b01110100101111000110101))))
(let ((.def_541 (fp.mul RNE x2 (fp #b0 #b01111110 #b10001110010101100000010))))
(let ((.def_537 (fp.mul RNE x1 (fp #b1 #b01111100 #b00111101011100001010010))))
(let ((.def_532 (fp.mul RNE x0 (fp #b1 #b01111101 #b01010111000010100011111))))
(let ((.def_533 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_532)))
(let ((.def_538 (fp.add RNE .def_533 .def_537)))
(let ((.def_542 (fp.add RNE .def_538 .def_541)))
(let ((.def_546 (fp.add RNE .def_542 .def_545)))
(let ((.def_551 (fp.add RNE .def_546 .def_550)))
(let ((.def_555 (fp.add RNE .def_551 .def_554)))
(let ((.def_559 (fp.add RNE .def_555 .def_558)))
(let ((.def_560 (fp.leq (fp #b0 #b01111101 #b10100001110010101100000) .def_559)))
.def_560))))))))))))))))
(assert (let ((.def_595 (fp.mul RNE x6 (fp #b0 #b01111110 #b00000010100011110101110))))
(let ((.def_591 (fp.mul RNE x5 (fp #b1 #b01111110 #b00011001100110011001101))))
(let ((.def_586 (fp.mul RNE x4 (fp #b1 #b01111011 #b10011101101100100010111))))
(let ((.def_581 (fp.mul RNE x3 (fp #b1 #b01111110 #b10100010010011011101001))))
(let ((.def_576 (fp.mul RNE x2 (fp #b1 #b01111101 #b10010000011000100100111))))
(let ((.def_571 (fp.mul RNE x1 (fp #b1 #b01111110 #b00101110100101111000111))))
(let ((.def_566 (fp.mul RNE x0 (fp #b0 #b01111101 #b11110011101101100100011))))
(let ((.def_567 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_566)))
(let ((.def_572 (fp.add RNE .def_567 .def_571)))
(let ((.def_577 (fp.add RNE .def_572 .def_576)))
(let ((.def_582 (fp.add RNE .def_577 .def_581)))
(let ((.def_587 (fp.add RNE .def_582 .def_586)))
(let ((.def_592 (fp.add RNE .def_587 .def_591)))
(let ((.def_596 (fp.add RNE .def_592 .def_595)))
(let ((.def_597 (fp.leq .def_596 (fp #b1 #b01111110 #b00101011100001010001111))))
.def_597))))))))))))))))
(assert (let ((.def_628 (fp.mul RNE x6 (fp #b1 #b01111110 #b10100101011000000100001))))
(let ((.def_623 (fp.mul RNE x5 (fp #b1 #b01111110 #b10101111100111011011001))))
(let ((.def_618 (fp.mul RNE x4 (fp #b1 #b01111110 #b11100000010000011000101))))
(let ((.def_613 (fp.mul RNE x3 (fp #b1 #b01111011 #b00110111010010111100011))))
(let ((.def_608 (fp.mul RNE x2 (fp #b0 #b01111110 #b10111010010111100011011))))
(let ((.def_604 (fp.mul RNE x1 (fp #b0 #b01111101 #b01001000101101000011101))))
(let ((.def_600 (fp.mul RNE x0 (fp #b0 #b01111110 #b00111001010110000001000))))
(let ((.def_601 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_600)))
(let ((.def_605 (fp.add RNE .def_601 .def_604)))
(let ((.def_609 (fp.add RNE .def_605 .def_608)))
(let ((.def_614 (fp.add RNE .def_609 .def_613)))
(let ((.def_619 (fp.add RNE .def_614 .def_618)))
(let ((.def_624 (fp.add RNE .def_619 .def_623)))
(let ((.def_629 (fp.add RNE .def_624 .def_628)))
(let ((.def_630 (fp.leq (fp #b1 #b01111101 #b10010000011000100100111) .def_629)))
.def_630))))))))))))))))
(check-sat)
