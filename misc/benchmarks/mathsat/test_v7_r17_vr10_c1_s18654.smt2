(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_79 (fp.mul RNE x6 (fp #b0 #b01111110 #b01000111001010110000001))))
(let ((.def_75 (fp.mul RNE x5 (fp #b1 #b01111110 #b01110101110000101001000))))
(let ((.def_70 (fp.mul RNE x4 (fp #b1 #b01111100 #b10000001000001100010010))))
(let ((.def_65 (fp.mul RNE x3 (fp #b1 #b01111110 #b11010110000001000001100))))
(let ((.def_60 (fp.mul RNE x2 (fp #b1 #b01111101 #b00110001001001101110101))))
(let ((.def_55 (fp.mul RNE x1 (fp #b0 #b01111110 #b11110111010010111100011))))
(let ((.def_51 (fp.mul RNE x0 (fp #b0 #b01111101 #b01001111110111110011110))))
(let ((.def_52 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_51)))
(let ((.def_56 (fp.add RNE .def_52 .def_55)))
(let ((.def_61 (fp.add RNE .def_56 .def_60)))
(let ((.def_66 (fp.add RNE .def_61 .def_65)))
(let ((.def_71 (fp.add RNE .def_66 .def_70)))
(let ((.def_76 (fp.add RNE .def_71 .def_75)))
(let ((.def_80 (fp.add RNE .def_76 .def_79)))
(let ((.def_81 (fp.leq (fp #b1 #b01111110 #b11001001001101110100110) .def_80)))
.def_81))))))))))))))))
(assert (let ((.def_114 (fp.mul RNE x6 (fp #b1 #b01111101 #b00010010011011101001100))))
(let ((.def_109 (fp.mul RNE x5 (fp #b1 #b01111100 #b00101101000011100101011))))
(let ((.def_104 (fp.mul RNE x4 (fp #b1 #b01111110 #b10011011101001011110010))))
(let ((.def_99 (fp.mul RNE x3 (fp #b0 #b01111110 #b00010000011000100100111))))
(let ((.def_95 (fp.mul RNE x2 (fp #b1 #b01111101 #b00101000111101011100001))))
(let ((.def_90 (fp.mul RNE x1 (fp #b0 #b01111100 #b10101001111110111110100))))
(let ((.def_86 (fp.mul RNE x0 (fp #b0 #b01111101 #b10110110010001011010001))))
(let ((.def_87 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_86)))
(let ((.def_91 (fp.add RNE .def_87 .def_90)))
(let ((.def_96 (fp.add RNE .def_91 .def_95)))
(let ((.def_100 (fp.add RNE .def_96 .def_99)))
(let ((.def_105 (fp.add RNE .def_100 .def_104)))
(let ((.def_110 (fp.add RNE .def_105 .def_109)))
(let ((.def_115 (fp.add RNE .def_110 .def_114)))
(let ((.def_116 (fp.leq (fp #b0 #b01111110 #b00101000111101011100001) .def_115)))
.def_116))))))))))))))))
(assert (let ((.def_151 (fp.mul RNE x6 (fp #b0 #b01111101 #b01001100110011001100110))))
(let ((.def_147 (fp.mul RNE x5 (fp #b1 #b01111110 #b01101100100010110100010))))
(let ((.def_142 (fp.mul RNE x4 (fp #b1 #b01111100 #b10001001001101110100110))))
(let ((.def_137 (fp.mul RNE x3 (fp #b1 #b01111110 #b11010110100001110010110))))
(let ((.def_132 (fp.mul RNE x2 (fp #b1 #b01111101 #b10011100101011000000100))))
(let ((.def_127 (fp.mul RNE x1 (fp #b0 #b01111101 #b10011110101110000101001))))
(let ((.def_123 (fp.mul RNE x0 (fp #b1 #b01111110 #b01111010111000010100100))))
(let ((.def_124 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_123)))
(let ((.def_128 (fp.add RNE .def_124 .def_127)))
(let ((.def_133 (fp.add RNE .def_128 .def_132)))
(let ((.def_138 (fp.add RNE .def_133 .def_137)))
(let ((.def_143 (fp.add RNE .def_138 .def_142)))
(let ((.def_148 (fp.add RNE .def_143 .def_147)))
(let ((.def_152 (fp.add RNE .def_148 .def_151)))
(let ((.def_153 (fp.leq .def_152 (fp #b1 #b01111101 #b00100110111010010111100))))
.def_153))))))))))))))))
(assert (let ((.def_186 (fp.mul RNE x6 (fp #b1 #b01111100 #b01100010010011011101001))))
(let ((.def_181 (fp.mul RNE x5 (fp #b0 #b01111101 #b11101110100101111000111))))
(let ((.def_177 (fp.mul RNE x4 (fp #b1 #b01111110 #b01010011111101111100111))))
(let ((.def_172 (fp.mul RNE x3 (fp #b0 #b01111110 #b10001110110110010001011))))
(let ((.def_168 (fp.mul RNE x2 (fp #b1 #b01111011 #b11001110110110010001011))))
(let ((.def_163 (fp.mul RNE x1 (fp #b0 #b01111101 #b01011111001110110110010))))
(let ((.def_159 (fp.mul RNE x0 (fp #b0 #b01111010 #b00100110111010010111100))))
(let ((.def_160 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_159)))
(let ((.def_164 (fp.add RNE .def_160 .def_163)))
(let ((.def_169 (fp.add RNE .def_164 .def_168)))
(let ((.def_173 (fp.add RNE .def_169 .def_172)))
(let ((.def_178 (fp.add RNE .def_173 .def_177)))
(let ((.def_182 (fp.add RNE .def_178 .def_181)))
(let ((.def_187 (fp.add RNE .def_182 .def_186)))
(let ((.def_188 (fp.leq (fp #b1 #b01111101 #b11101111100111011011001) .def_187)))
.def_188))))))))))))))))
(assert (let ((.def_219 (fp.mul RNE x6 (fp #b1 #b01111101 #b11111101111100111011011))))
(let ((.def_214 (fp.mul RNE x5 (fp #b0 #b01111110 #b11001001001101110100110))))
(let ((.def_212 (fp.mul RNE x4 (fp #b0 #b01111101 #b10100101111000110101010))))
(let ((.def_208 (fp.mul RNE x3 (fp #b1 #b01111011 #b10101110000101000111101))))
(let ((.def_203 (fp.mul RNE x2 (fp #b0 #b01111110 #b00011001100110011001101))))
(let ((.def_199 (fp.mul RNE x1 (fp #b1 #b01111110 #b10000100000110001001010))))
(let ((.def_194 (fp.mul RNE x0 (fp #b1 #b01111110 #b00111010010111100011011))))
(let ((.def_195 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_194)))
(let ((.def_200 (fp.add RNE .def_195 .def_199)))
(let ((.def_204 (fp.add RNE .def_200 .def_203)))
(let ((.def_209 (fp.add RNE .def_204 .def_208)))
(let ((.def_213 (fp.add RNE .def_209 .def_212)))
(let ((.def_215 (fp.add RNE .def_213 .def_214)))
(let ((.def_220 (fp.add RNE .def_215 .def_219)))
(let ((.def_221 (fp.leq .def_220 (fp #b0 #b01111101 #b00111010010111100011011))))
.def_221))))))))))))))))
(assert (let ((.def_254 (fp.mul RNE x6 (fp #b1 #b01111101 #b00100001110010101100000))))
(let ((.def_249 (fp.mul RNE x5 (fp #b0 #b01111100 #b00000100000110001001010))))
(let ((.def_245 (fp.mul RNE x4 (fp #b1 #b01111110 #b10100111011011001000110))))
(let ((.def_240 (fp.mul RNE x3 (fp #b1 #b01111110 #b01110011001100110011010))))
(let ((.def_235 (fp.mul RNE x2 (fp #b0 #b01111110 #b10110001001001101110101))))
(let ((.def_231 (fp.mul RNE x1 (fp #b0 #b01111110 #b11100001110010101100000))))
(let ((.def_227 (fp.mul RNE x0 (fp #b1 #b01111110 #b01101001011110001101010))))
(let ((.def_228 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_227)))
(let ((.def_232 (fp.add RNE .def_228 .def_231)))
(let ((.def_236 (fp.add RNE .def_232 .def_235)))
(let ((.def_241 (fp.add RNE .def_236 .def_240)))
(let ((.def_246 (fp.add RNE .def_241 .def_245)))
(let ((.def_250 (fp.add RNE .def_246 .def_249)))
(let ((.def_255 (fp.add RNE .def_250 .def_254)))
(let ((.def_256 (fp.leq .def_255 (fp #b0 #b01111110 #b10000101000111101011100))))
.def_256))))))))))))))))
(assert (let ((.def_288 (fp.mul RNE x6 (fp #b0 #b01111101 #b10101011000000100000110))))
(let ((.def_284 (fp.mul RNE x5 (fp #b0 #b01111100 #b10100101111000110101010))))
(let ((.def_280 (fp.mul RNE x4 (fp #b0 #b01111110 #b00100001010001111010111))))
(let ((.def_276 (fp.mul RNE x3 (fp #b1 #b01111100 #b11011101001011110001101))))
(let ((.def_271 (fp.mul RNE x2 (fp #b0 #b01111110 #b00100100110111010011000))))
(let ((.def_267 (fp.mul RNE x1 (fp #b0 #b01111110 #b11001110010101100000010))))
(let ((.def_263 (fp.mul RNE x0 (fp #b1 #b01111110 #b00010001011010000111001))))
(let ((.def_264 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_263)))
(let ((.def_268 (fp.add RNE .def_264 .def_267)))
(let ((.def_272 (fp.add RNE .def_268 .def_271)))
(let ((.def_277 (fp.add RNE .def_272 .def_276)))
(let ((.def_281 (fp.add RNE .def_277 .def_280)))
(let ((.def_285 (fp.add RNE .def_281 .def_284)))
(let ((.def_289 (fp.add RNE .def_285 .def_288)))
(let ((.def_290 (fp.leq .def_289 (fp #b1 #b01111110 #b01001100110011001100110))))
.def_290))))))))))))))))
(assert (let ((.def_323 (fp.mul RNE x6 (fp #b1 #b01111110 #b10000111101011100001010))))
(let ((.def_318 (fp.mul RNE x5 (fp #b1 #b01111110 #b00000100100110111010011))))
(let ((.def_313 (fp.mul RNE x4 (fp #b0 #b01111100 #b00111111011111001110111))))
(let ((.def_309 (fp.mul RNE x3 (fp #b0 #b01111110 #b11011011101001011110010))))
(let ((.def_305 (fp.mul RNE x2 (fp #b0 #b01111110 #b00010100011110101110001))))
(let ((.def_301 (fp.mul RNE x1 (fp #b0 #b01111110 #b01100001010001111010111))))
(let ((.def_297 (fp.mul RNE x0 (fp #b1 #b01111101 #b00111000010100011110110))))
(let ((.def_298 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_297)))
(let ((.def_302 (fp.add RNE .def_298 .def_301)))
(let ((.def_306 (fp.add RNE .def_302 .def_305)))
(let ((.def_310 (fp.add RNE .def_306 .def_309)))
(let ((.def_314 (fp.add RNE .def_310 .def_313)))
(let ((.def_319 (fp.add RNE .def_314 .def_318)))
(let ((.def_324 (fp.add RNE .def_319 .def_323)))
(let ((.def_325 (fp.leq .def_324 (fp #b1 #b01111101 #b10110000001000001100010))))
.def_325))))))))))))))))
(assert (let ((.def_355 (fp.mul RNE x6 (fp #b1 #b01111101 #b11101110100101111000111))))
(let ((.def_352 (fp.mul RNE x5 (fp #b0 #b01111100 #b10100011110101110000101))))
(let ((.def_348 (fp.mul RNE x4 (fp #b0 #b01111101 #b00100000110001001001110))))
(let ((.def_344 (fp.mul RNE x3 (fp #b0 #b01111100 #b01110010101100000010000))))
(let ((.def_340 (fp.mul RNE x2 (fp #b0 #b01111110 #b10110100001110010101100))))
(let ((.def_336 (fp.mul RNE x1 (fp #b1 #b01111110 #b00110100101111000110101))))
(let ((.def_331 (fp.mul RNE x0 (fp #b0 #b01111010 #b10011001100110011001101))))
(let ((.def_332 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_331)))
(let ((.def_337 (fp.add RNE .def_332 .def_336)))
(let ((.def_341 (fp.add RNE .def_337 .def_340)))
(let ((.def_345 (fp.add RNE .def_341 .def_344)))
(let ((.def_349 (fp.add RNE .def_345 .def_348)))
(let ((.def_353 (fp.add RNE .def_349 .def_352)))
(let ((.def_356 (fp.add RNE .def_353 .def_355)))
(let ((.def_357 (fp.leq (fp #b1 #b01111101 #b00101111000110101010000) .def_356)))
.def_357))))))))))))))))
(assert (let ((.def_389 (fp.mul RNE x6 (fp #b0 #b01111101 #b00001100010010011011101))))
(let ((.def_385 (fp.mul RNE x5 (fp #b0 #b01111110 #b00000111101011100001010))))
(let ((.def_381 (fp.mul RNE x4 (fp #b0 #b01111110 #b11010010111100011010101))))
(let ((.def_377 (fp.mul RNE x3 (fp #b0 #b01111110 #b10101110100101111000111))))
(let ((.def_373 (fp.mul RNE x2 (fp #b0 #b01111101 #b11011111001110110110010))))
(let ((.def_369 (fp.mul RNE x1 (fp #b1 #b01111100 #b11111011111001110110110))))
(let ((.def_364 (fp.mul RNE x0 (fp #b1 #b01111110 #b00101110000101000111101))))
(let ((.def_365 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_364)))
(let ((.def_370 (fp.add RNE .def_365 .def_369)))
(let ((.def_374 (fp.add RNE .def_370 .def_373)))
(let ((.def_378 (fp.add RNE .def_374 .def_377)))
(let ((.def_382 (fp.add RNE .def_378 .def_381)))
(let ((.def_386 (fp.add RNE .def_382 .def_385)))
(let ((.def_390 (fp.add RNE .def_386 .def_389)))
(let ((.def_391 (fp.leq .def_390 (fp #b1 #b01111110 #b11001100110011001100110))))
.def_391))))))))))))))))
(assert (let ((.def_423 (fp.mul RNE x6 (fp #b1 #b01111110 #b10110101001111110111110))))
(let ((.def_418 (fp.mul RNE x5 (fp #b0 #b01111011 #b01100100010110100001110))))
(let ((.def_414 (fp.mul RNE x4 (fp #b0 #b01111110 #b10111101111100111011011))))
(let ((.def_410 (fp.mul RNE x3 (fp #b1 #b01111001 #b10101001111110111110100))))
(let ((.def_405 (fp.mul RNE x2 (fp #b0 #b01111001 #b11101011100001010001111))))
(let ((.def_401 (fp.mul RNE x1 (fp #b0 #b01111011 #b00011110101110000101001))))
(let ((.def_397 (fp.mul RNE x0 (fp #b1 #b01111110 #b01000101000111101011100))))
(let ((.def_398 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_397)))
(let ((.def_402 (fp.add RNE .def_398 .def_401)))
(let ((.def_406 (fp.add RNE .def_402 .def_405)))
(let ((.def_411 (fp.add RNE .def_406 .def_410)))
(let ((.def_415 (fp.add RNE .def_411 .def_414)))
(let ((.def_419 (fp.add RNE .def_415 .def_418)))
(let ((.def_424 (fp.add RNE .def_419 .def_423)))
(let ((.def_425 (fp.leq (fp #b0 #b01111100 #b00010000011000100100111) .def_424)))
.def_425))))))))))))))))
(assert (let ((.def_451 (fp.mul RNE x6 (fp #b0 #b01111011 #b01101000011100101011000))))
(let ((.def_447 (fp.mul RNE x5 (fp #b0 #b01111101 #b10001110010101100000010))))
(let ((.def_443 (fp.mul RNE x4 (fp #b1 #b01111110 #b10110100001110010101100))))
(let ((.def_440 (fp.mul RNE x3 (fp #b1 #b01111101 #b10011100101011000000100))))
(let ((.def_438 (fp.mul RNE x2 (fp #b1 #b01111110 #b11100100010110100001110))))
(let ((.def_433 (fp.mul RNE x1 (fp #b0 #b01111101 #b01000111101011100001010))))
(let ((.def_429 (fp.mul RNE x0 (fp #b1 #b01111110 #b10010011011101001011110))))
(let ((.def_430 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_429)))
(let ((.def_434 (fp.add RNE .def_430 .def_433)))
(let ((.def_439 (fp.add RNE .def_434 .def_438)))
(let ((.def_441 (fp.add RNE .def_439 .def_440)))
(let ((.def_444 (fp.add RNE .def_441 .def_443)))
(let ((.def_448 (fp.add RNE .def_444 .def_447)))
(let ((.def_452 (fp.add RNE .def_448 .def_451)))
(let ((.def_453 (fp.leq (fp #b1 #b01111110 #b10011011101001011110010) .def_452)))
.def_453))))))))))))))))
(assert (let ((.def_486 (fp.mul RNE x6 (fp #b0 #b01111110 #b00011010000111001010110))))
(let ((.def_482 (fp.mul RNE x5 (fp #b1 #b01111010 #b11101011100001010001111))))
(let ((.def_477 (fp.mul RNE x4 (fp #b1 #b01111110 #b01001001101110100101111))))
(let ((.def_472 (fp.mul RNE x3 (fp #b1 #b01111110 #b11101000111101011100001))))
(let ((.def_467 (fp.mul RNE x2 (fp #b1 #b01111110 #b10000101000111101011100))))
(let ((.def_464 (fp.mul RNE x1 (fp #b1 #b01111110 #b01100011110101110000101))))
(let ((.def_459 (fp.mul RNE x0 (fp #b1 #b01111110 #b10011000000100000110001))))
(let ((.def_460 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_459)))
(let ((.def_465 (fp.add RNE .def_460 .def_464)))
(let ((.def_468 (fp.add RNE .def_465 .def_467)))
(let ((.def_473 (fp.add RNE .def_468 .def_472)))
(let ((.def_478 (fp.add RNE .def_473 .def_477)))
(let ((.def_483 (fp.add RNE .def_478 .def_482)))
(let ((.def_487 (fp.add RNE .def_483 .def_486)))
(let ((.def_488 (fp.leq (fp #b0 #b01111101 #b01100010010011011101001) .def_487)))
.def_488))))))))))))))))
(assert (let ((.def_518 (fp.mul RNE x6 (fp #b1 #b01111110 #b00110100001110010101100))))
(let ((.def_513 (fp.mul RNE x5 (fp #b0 #b01111101 #b10101111000110101010000))))
(let ((.def_509 (fp.mul RNE x4 (fp #b0 #b01111110 #b10000101101000011100101))))
(let ((.def_505 (fp.mul RNE x3 (fp #b1 #b01111110 #b11000100000110001001010))))
(let ((.def_500 (fp.mul RNE x2 (fp #b0 #b01111110 #b10101000011100101011000))))
(let ((.def_496 (fp.mul RNE x1 (fp #b1 #b01111101 #b11010110000001000001100))))
(let ((.def_491 (fp.mul RNE x0 (fp #b0 #b01111110 #b10011011101001011110010))))
(let ((.def_492 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_491)))
(let ((.def_497 (fp.add RNE .def_492 .def_496)))
(let ((.def_501 (fp.add RNE .def_497 .def_500)))
(let ((.def_506 (fp.add RNE .def_501 .def_505)))
(let ((.def_510 (fp.add RNE .def_506 .def_509)))
(let ((.def_514 (fp.add RNE .def_510 .def_513)))
(let ((.def_519 (fp.add RNE .def_514 .def_518)))
(let ((.def_520 (fp.leq .def_519 (fp #b0 #b01111110 #b00111101011100001010010))))
.def_520))))))))))))))))
(assert (let ((.def_551 (fp.mul RNE x6 (fp #b0 #b01111110 #b01010111100011010101000))))
(let ((.def_547 (fp.mul RNE x5 (fp #b0 #b01111110 #b10101100000010000011001))))
(let ((.def_543 (fp.mul RNE x4 (fp #b0 #b01111101 #b01001101110100101111001))))
(let ((.def_539 (fp.mul RNE x3 (fp #b1 #b01111110 #b11011010100111111011111))))
(let ((.def_534 (fp.mul RNE x2 (fp #b0 #b01111101 #b10111001010110000001000))))
(let ((.def_530 (fp.mul RNE x1 (fp #b0 #b01111101 #b10010000011000100100111))))
(let ((.def_526 (fp.mul RNE x0 (fp #b0 #b01111110 #b00000010000011000100101))))
(let ((.def_527 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_526)))
(let ((.def_531 (fp.add RNE .def_527 .def_530)))
(let ((.def_535 (fp.add RNE .def_531 .def_534)))
(let ((.def_540 (fp.add RNE .def_535 .def_539)))
(let ((.def_544 (fp.add RNE .def_540 .def_543)))
(let ((.def_548 (fp.add RNE .def_544 .def_547)))
(let ((.def_552 (fp.add RNE .def_548 .def_551)))
(let ((.def_553 (fp.leq .def_552 (fp #b1 #b01111110 #b01100110011001100110011))))
.def_553))))))))))))))))
(assert (let ((.def_588 (fp.mul RNE x6 (fp #b1 #b01111110 #b00101001011110001101010))))
(let ((.def_583 (fp.mul RNE x5 (fp #b0 #b01111101 #b01010000111001010110000))))
(let ((.def_579 (fp.mul RNE x4 (fp #b1 #b01111100 #b01111100111011011001001))))
(let ((.def_574 (fp.mul RNE x3 (fp #b0 #b01111110 #b01001101110100101111001))))
(let ((.def_570 (fp.mul RNE x2 (fp #b1 #b01111011 #b11100111011011001000110))))
(let ((.def_565 (fp.mul RNE x1 (fp #b1 #b01111011 #b10101001111110111110100))))
(let ((.def_560 (fp.mul RNE x0 (fp #b1 #b01111110 #b10111100011010100111111))))
(let ((.def_561 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_560)))
(let ((.def_566 (fp.add RNE .def_561 .def_565)))
(let ((.def_571 (fp.add RNE .def_566 .def_570)))
(let ((.def_575 (fp.add RNE .def_571 .def_574)))
(let ((.def_580 (fp.add RNE .def_575 .def_579)))
(let ((.def_584 (fp.add RNE .def_580 .def_583)))
(let ((.def_589 (fp.add RNE .def_584 .def_588)))
(let ((.def_590 (fp.leq .def_589 (fp #b1 #b01111011 #b10010101100000010000011))))
.def_590))))))))))))))))
(assert (let ((.def_622 (fp.mul RNE x6 (fp #b0 #b01111110 #b01001110010101100000010))))
(let ((.def_618 (fp.mul RNE x5 (fp #b1 #b01111110 #b10001100010010011011101))))
(let ((.def_613 (fp.mul RNE x4 (fp #b0 #b01111101 #b01110101110000101001000))))
(let ((.def_609 (fp.mul RNE x3 (fp #b0 #b01111010 #b01001111110111110011110))))
(let ((.def_605 (fp.mul RNE x2 (fp #b0 #b01111110 #b11000111101011100001010))))
(let ((.def_601 (fp.mul RNE x1 (fp #b1 #b01111110 #b01011000000100000110001))))
(let ((.def_596 (fp.mul RNE x0 (fp #b0 #b01111110 #b00000000100000110001001))))
(let ((.def_597 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_596)))
(let ((.def_602 (fp.add RNE .def_597 .def_601)))
(let ((.def_606 (fp.add RNE .def_602 .def_605)))
(let ((.def_610 (fp.add RNE .def_606 .def_609)))
(let ((.def_614 (fp.add RNE .def_610 .def_613)))
(let ((.def_619 (fp.add RNE .def_614 .def_618)))
(let ((.def_623 (fp.add RNE .def_619 .def_622)))
(let ((.def_624 (fp.leq (fp #b1 #b01111110 #b00001001101110100101111) .def_623)))
.def_624))))))))))))))))
(check-sat)
