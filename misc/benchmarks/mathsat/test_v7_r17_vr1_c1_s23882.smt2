(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_78 (fp.mul RNE x6 (fp #b0 #b01111101 #b11010011111101111100111))))
(let ((.def_74 (fp.mul RNE x5 (fp #b1 #b01111110 #b11001110110110010001011))))
(let ((.def_69 (fp.mul RNE x4 (fp #b1 #b01111110 #b11111001010110000001000))))
(let ((.def_64 (fp.mul RNE x3 (fp #b0 #b01111101 #b00110110010001011010001))))
(let ((.def_60 (fp.mul RNE x2 (fp #b0 #b01111110 #b01111010010111100011011))))
(let ((.def_56 (fp.mul RNE x1 (fp #b1 #b01111110 #b01010001011010000111001))))
(let ((.def_51 (fp.mul RNE x0 (fp #b1 #b01111011 #b00111011011001000101101))))
(let ((.def_52 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_51)))
(let ((.def_57 (fp.add RNE .def_52 .def_56)))
(let ((.def_61 (fp.add RNE .def_57 .def_60)))
(let ((.def_65 (fp.add RNE .def_61 .def_64)))
(let ((.def_70 (fp.add RNE .def_65 .def_69)))
(let ((.def_75 (fp.add RNE .def_70 .def_74)))
(let ((.def_79 (fp.add RNE .def_75 .def_78)))
(let ((.def_80 (fp.leq (fp #b0 #b01111110 #b01111101111100111011011) .def_79)))
.def_80))))))))))))))))
(assert (let ((.def_113 (fp.mul RNE x6 (fp #b1 #b01111110 #b01111011111001110110110))))
(let ((.def_108 (fp.mul RNE x5 (fp #b0 #b01111110 #b00010101100000010000011))))
(let ((.def_104 (fp.mul RNE x4 (fp #b0 #b01111110 #b01101111000110101010000))))
(let ((.def_100 (fp.mul RNE x3 (fp #b1 #b01111101 #b00001100010010011011101))))
(let ((.def_95 (fp.mul RNE x2 (fp #b0 #b01111011 #b01100100010110100001110))))
(let ((.def_91 (fp.mul RNE x1 (fp #b1 #b01111010 #b10001001001101110100110))))
(let ((.def_86 (fp.mul RNE x0 (fp #b1 #b01111110 #b01000000100000110001001))))
(let ((.def_87 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_86)))
(let ((.def_92 (fp.add RNE .def_87 .def_91)))
(let ((.def_96 (fp.add RNE .def_92 .def_95)))
(let ((.def_101 (fp.add RNE .def_96 .def_100)))
(let ((.def_105 (fp.add RNE .def_101 .def_104)))
(let ((.def_109 (fp.add RNE .def_105 .def_108)))
(let ((.def_114 (fp.add RNE .def_109 .def_113)))
(let ((.def_115 (fp.leq .def_114 (fp #b0 #b01111101 #b11000100100110111010011))))
.def_115))))))))))))))))
(assert (let ((.def_149 (fp.mul RNE x6 (fp #b1 #b01111110 #b11101100000010000011001))))
(let ((.def_144 (fp.mul RNE x5 (fp #b1 #b01111010 #b10111010010111100011011))))
(let ((.def_139 (fp.mul RNE x4 (fp #b0 #b01111110 #b00100100010110100001110))))
(let ((.def_135 (fp.mul RNE x3 (fp #b1 #b01111011 #b10011101101100100010111))))
(let ((.def_130 (fp.mul RNE x2 (fp #b1 #b01111100 #b01111000110101001111111))))
(let ((.def_125 (fp.mul RNE x1 (fp #b0 #b01111101 #b11101100100010110100010))))
(let ((.def_121 (fp.mul RNE x0 (fp #b1 #b01111110 #b01000101101000011100101))))
(let ((.def_122 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_121)))
(let ((.def_126 (fp.add RNE .def_122 .def_125)))
(let ((.def_131 (fp.add RNE .def_126 .def_130)))
(let ((.def_136 (fp.add RNE .def_131 .def_135)))
(let ((.def_140 (fp.add RNE .def_136 .def_139)))
(let ((.def_145 (fp.add RNE .def_140 .def_144)))
(let ((.def_150 (fp.add RNE .def_145 .def_149)))
(let ((.def_151 (fp.leq .def_150 (fp #b0 #b01111101 #b00100100110111010011000))))
.def_151))))))))))))))))
(assert (let ((.def_184 (fp.mul RNE x6 (fp #b1 #b01111110 #b10110001101010011111110))))
(let ((.def_179 (fp.mul RNE x5 (fp #b0 #b01111101 #b00010001011010000111001))))
(let ((.def_175 (fp.mul RNE x4 (fp #b1 #b01111101 #b10110110010001011010001))))
(let ((.def_170 (fp.mul RNE x3 (fp #b1 #b01111101 #b11001000101101000011101))))
(let ((.def_165 (fp.mul RNE x2 (fp #b0 #b01111110 #b01110011101101100100011))))
(let ((.def_161 (fp.mul RNE x1 (fp #b1 #b01111110 #b10101000011100101011000))))
(let ((.def_156 (fp.mul RNE x0 (fp #b0 #b01111110 #b01110011001100110011010))))
(let ((.def_157 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_156)))
(let ((.def_162 (fp.add RNE .def_157 .def_161)))
(let ((.def_166 (fp.add RNE .def_162 .def_165)))
(let ((.def_171 (fp.add RNE .def_166 .def_170)))
(let ((.def_176 (fp.add RNE .def_171 .def_175)))
(let ((.def_180 (fp.add RNE .def_176 .def_179)))
(let ((.def_185 (fp.add RNE .def_180 .def_184)))
(let ((.def_186 (fp.leq (fp #b0 #b01111101 #b10111010010111100011011) .def_185)))
.def_186))))))))))))))))
(assert (let ((.def_221 (fp.mul RNE x6 (fp #b1 #b01111110 #b11100110011001100110011))))
(let ((.def_216 (fp.mul RNE x5 (fp #b1 #b01111101 #b11011001000101101000100))))
(let ((.def_211 (fp.mul RNE x4 (fp #b1 #b01111110 #b10000111101011100001010))))
(let ((.def_206 (fp.mul RNE x3 (fp #b1 #b01111110 #b00111111011111001110111))))
(let ((.def_201 (fp.mul RNE x2 (fp #b0 #b01111010 #b11010010111100011010101))))
(let ((.def_197 (fp.mul RNE x1 (fp #b1 #b01111110 #b00110100101111000110101))))
(let ((.def_192 (fp.mul RNE x0 (fp #b1 #b01111110 #b01100011010100111111100))))
(let ((.def_193 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_192)))
(let ((.def_198 (fp.add RNE .def_193 .def_197)))
(let ((.def_202 (fp.add RNE .def_198 .def_201)))
(let ((.def_207 (fp.add RNE .def_202 .def_206)))
(let ((.def_212 (fp.add RNE .def_207 .def_211)))
(let ((.def_217 (fp.add RNE .def_212 .def_216)))
(let ((.def_222 (fp.add RNE .def_217 .def_221)))
(let ((.def_223 (fp.leq (fp #b0 #b01111110 #b00011110101110000101001) .def_222)))
.def_223))))))))))))))))
(assert (let ((.def_255 (fp.mul RNE x6 (fp #b0 #b01111110 #b11000001100010010011100))))
(let ((.def_251 (fp.mul RNE x5 (fp #b1 #b01111101 #b11110110110010001011010))))
(let ((.def_246 (fp.mul RNE x4 (fp #b1 #b01111011 #b11000010100011110101110))))
(let ((.def_241 (fp.mul RNE x3 (fp #b0 #b01111110 #b01001000001100010010011))))
(let ((.def_237 (fp.mul RNE x2 (fp #b1 #b01111101 #b11000100100110111010011))))
(let ((.def_234 (fp.mul RNE x1 (fp #b1 #b01111110 #b01011110001101010100000))))
(let ((.def_229 (fp.mul RNE x0 (fp #b1 #b01111101 #b11011111001110110110010))))
(let ((.def_230 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_229)))
(let ((.def_235 (fp.add RNE .def_230 .def_234)))
(let ((.def_238 (fp.add RNE .def_235 .def_237)))
(let ((.def_242 (fp.add RNE .def_238 .def_241)))
(let ((.def_247 (fp.add RNE .def_242 .def_246)))
(let ((.def_252 (fp.add RNE .def_247 .def_251)))
(let ((.def_256 (fp.add RNE .def_252 .def_255)))
(let ((.def_257 (fp.leq .def_256 (fp #b0 #b01111110 #b11111001110110110010001))))
.def_257))))))))))))))))
(assert (let ((.def_287 (fp.mul RNE x6 (fp #b1 #b01111100 #b00100110111010010111100))))
(let ((.def_282 (fp.mul RNE x5 (fp #b1 #b01111110 #b10000100100110111010011))))
(let ((.def_277 (fp.mul RNE x4 (fp #b0 #b01111010 #b10001001001101110100110))))
(let ((.def_275 (fp.mul RNE x3 (fp #b0 #b01111110 #b10010000111001010110000))))
(let ((.def_271 (fp.mul RNE x2 (fp #b0 #b01111110 #b00111101011100001010010))))
(let ((.def_267 (fp.mul RNE x1 (fp #b1 #b01111101 #b00100110111010010111100))))
(let ((.def_262 (fp.mul RNE x0 (fp #b0 #b01111101 #b00000001000001100010010))))
(let ((.def_263 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_262)))
(let ((.def_268 (fp.add RNE .def_263 .def_267)))
(let ((.def_272 (fp.add RNE .def_268 .def_271)))
(let ((.def_276 (fp.add RNE .def_272 .def_275)))
(let ((.def_278 (fp.add RNE .def_276 .def_277)))
(let ((.def_283 (fp.add RNE .def_278 .def_282)))
(let ((.def_288 (fp.add RNE .def_283 .def_287)))
(let ((.def_289 (fp.leq .def_288 (fp #b0 #b01111110 #b00101100100010110100010))))
.def_289))))))))))))))))
(assert (let ((.def_324 (fp.mul RNE x6 (fp #b1 #b01111110 #b10101100100010110100010))))
(let ((.def_319 (fp.mul RNE x5 (fp #b1 #b01111110 #b11101011000000100000110))))
(let ((.def_314 (fp.mul RNE x4 (fp #b1 #b01111101 #b01100100010110100001110))))
(let ((.def_309 (fp.mul RNE x3 (fp #b1 #b01111101 #b10100100110111010011000))))
(let ((.def_304 (fp.mul RNE x2 (fp #b1 #b01111101 #b11110111110011101101101))))
(let ((.def_299 (fp.mul RNE x1 (fp #b0 #b01111110 #b00100011010100111111100))))
(let ((.def_295 (fp.mul RNE x0 (fp #b1 #b01111011 #b11101011100001010001111))))
(let ((.def_296 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_295)))
(let ((.def_300 (fp.add RNE .def_296 .def_299)))
(let ((.def_305 (fp.add RNE .def_300 .def_304)))
(let ((.def_310 (fp.add RNE .def_305 .def_309)))
(let ((.def_315 (fp.add RNE .def_310 .def_314)))
(let ((.def_320 (fp.add RNE .def_315 .def_319)))
(let ((.def_325 (fp.add RNE .def_320 .def_324)))
(let ((.def_326 (fp.leq (fp #b0 #b01111101 #b10100101111000110101010) .def_325)))
.def_326))))))))))))))))
(assert (let ((.def_358 (fp.mul RNE x6 (fp #b1 #b01111100 #b10010101100000010000011))))
(let ((.def_353 (fp.mul RNE x5 (fp #b1 #b01111101 #b00100001110010101100000))))
(let ((.def_348 (fp.mul RNE x4 (fp #b0 #b01111110 #b01101011000000100000110))))
(let ((.def_344 (fp.mul RNE x3 (fp #b1 #b01111011 #b11101011100001010001111))))
(let ((.def_342 (fp.mul RNE x2 (fp #b0 #b01111110 #b01111101011100001010010))))
(let ((.def_338 (fp.mul RNE x1 (fp #b1 #b01111110 #b00000110001001001101111))))
(let ((.def_333 (fp.mul RNE x0 (fp #b1 #b01111110 #b10100110111010010111100))))
(let ((.def_334 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_333)))
(let ((.def_339 (fp.add RNE .def_334 .def_338)))
(let ((.def_343 (fp.add RNE .def_339 .def_342)))
(let ((.def_345 (fp.add RNE .def_343 .def_344)))
(let ((.def_349 (fp.add RNE .def_345 .def_348)))
(let ((.def_354 (fp.add RNE .def_349 .def_353)))
(let ((.def_359 (fp.add RNE .def_354 .def_358)))
(let ((.def_360 (fp.leq .def_359 (fp #b1 #b01111110 #b01101110100101111000111))))
.def_360))))))))))))))))
(assert (let ((.def_391 (fp.mul RNE x6 (fp #b0 #b01111110 #b10011100001010001111011))))
(let ((.def_387 (fp.mul RNE x5 (fp #b0 #b01111110 #b10100101111000110101010))))
(let ((.def_383 (fp.mul RNE x4 (fp #b0 #b01111110 #b10001010110000001000010))))
(let ((.def_379 (fp.mul RNE x3 (fp #b0 #b01111110 #b01110100101111000110101))))
(let ((.def_375 (fp.mul RNE x2 (fp #b1 #b01111110 #b11001100110011001100110))))
(let ((.def_370 (fp.mul RNE x1 (fp #b0 #b01111110 #b10010010111100011010101))))
(let ((.def_366 (fp.mul RNE x0 (fp #b1 #b01111101 #b11111101111100111011011))))
(let ((.def_367 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_366)))
(let ((.def_371 (fp.add RNE .def_367 .def_370)))
(let ((.def_376 (fp.add RNE .def_371 .def_375)))
(let ((.def_380 (fp.add RNE .def_376 .def_379)))
(let ((.def_384 (fp.add RNE .def_380 .def_383)))
(let ((.def_388 (fp.add RNE .def_384 .def_387)))
(let ((.def_392 (fp.add RNE .def_388 .def_391)))
(let ((.def_393 (fp.leq .def_392 (fp #b0 #b01111110 #b11100111011011001000110))))
.def_393))))))))))))))))
(assert (let ((.def_425 (fp.mul RNE x6 (fp #b0 #b01111001 #b00000110001001001101111))))
(let ((.def_421 (fp.mul RNE x5 (fp #b1 #b01111011 #b00101011000000100000110))))
(let ((.def_416 (fp.mul RNE x4 (fp #b0 #b01111110 #b11000011100101011000001))))
(let ((.def_412 (fp.mul RNE x3 (fp #b0 #b01110110 #b10001001001101110100110))))
(let ((.def_408 (fp.mul RNE x2 (fp #b1 #b01111110 #b10100001110010101100000))))
(let ((.def_403 (fp.mul RNE x1 (fp #b0 #b01111101 #b00110011001100110011010))))
(let ((.def_399 (fp.mul RNE x0 (fp #b1 #b01111110 #b11100101111000110101010))))
(let ((.def_400 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_399)))
(let ((.def_404 (fp.add RNE .def_400 .def_403)))
(let ((.def_409 (fp.add RNE .def_404 .def_408)))
(let ((.def_413 (fp.add RNE .def_409 .def_412)))
(let ((.def_417 (fp.add RNE .def_413 .def_416)))
(let ((.def_422 (fp.add RNE .def_417 .def_421)))
(let ((.def_426 (fp.add RNE .def_422 .def_425)))
(let ((.def_427 (fp.leq .def_426 (fp #b0 #b01111100 #b11110101110000101001000))))
.def_427))))))))))))))))
(assert (let ((.def_458 (fp.mul RNE x6 (fp #b0 #b01111110 #b11110000001000001100010))))
(let ((.def_454 (fp.mul RNE x5 (fp #b1 #b01111110 #b00110011101101100100011))))
(let ((.def_449 (fp.mul RNE x4 (fp #b0 #b01111101 #b11101001011110001101010))))
(let ((.def_445 (fp.mul RNE x3 (fp #b1 #b01111011 #b11001010110000001000010))))
(let ((.def_440 (fp.mul RNE x2 (fp #b0 #b01111101 #b10101001111110111110100))))
(let ((.def_436 (fp.mul RNE x1 (fp #b0 #b01111101 #b01110000101000111101100))))
(let ((.def_432 (fp.mul RNE x0 (fp #b0 #b01111101 #b11110011101101100100011))))
(let ((.def_433 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_432)))
(let ((.def_437 (fp.add RNE .def_433 .def_436)))
(let ((.def_441 (fp.add RNE .def_437 .def_440)))
(let ((.def_446 (fp.add RNE .def_441 .def_445)))
(let ((.def_450 (fp.add RNE .def_446 .def_449)))
(let ((.def_455 (fp.add RNE .def_450 .def_454)))
(let ((.def_459 (fp.add RNE .def_455 .def_458)))
(let ((.def_460 (fp.leq (fp #b0 #b01111010 #b01011000000100000110001) .def_459)))
.def_460))))))))))))))))
(assert (let ((.def_490 (fp.mul RNE x6 (fp #b1 #b01111101 #b00000000000000000000000))))
(let ((.def_485 (fp.mul RNE x5 (fp #b0 #b01111110 #b01001101010011111110000))))
(let ((.def_481 (fp.mul RNE x4 (fp #b0 #b01111101 #b10111010010111100011011))))
(let ((.def_479 (fp.mul RNE x3 (fp #b0 #b01111100 #b01101000011100101011000))))
(let ((.def_475 (fp.mul RNE x2 (fp #b1 #b01111101 #b00011101101100100010111))))
(let ((.def_470 (fp.mul RNE x1 (fp #b0 #b01111110 #b00100111111011111001111))))
(let ((.def_466 (fp.mul RNE x0 (fp #b1 #b01111110 #b10110100001110010101100))))
(let ((.def_467 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_466)))
(let ((.def_471 (fp.add RNE .def_467 .def_470)))
(let ((.def_476 (fp.add RNE .def_471 .def_475)))
(let ((.def_480 (fp.add RNE .def_476 .def_479)))
(let ((.def_482 (fp.add RNE .def_480 .def_481)))
(let ((.def_486 (fp.add RNE .def_482 .def_485)))
(let ((.def_491 (fp.add RNE .def_486 .def_490)))
(let ((.def_492 (fp.leq .def_491 (fp #b0 #b01111110 #b10001001101110100101111))))
.def_492))))))))))))))))
(assert (let ((.def_522 (fp.mul RNE x6 (fp #b0 #b01111110 #b11000000100000110001001))))
(let ((.def_518 (fp.mul RNE x5 (fp #b1 #b01111101 #b10101100000010000011001))))
(let ((.def_513 (fp.mul RNE x4 (fp #b0 #b01111110 #b01110001101010011111110))))
(let ((.def_509 (fp.mul RNE x3 (fp #b1 #b01111110 #b11100110011001100110011))))
(let ((.def_507 (fp.mul RNE x2 (fp #b1 #b01111110 #b01001010001111010111000))))
(let ((.def_502 (fp.mul RNE x1 (fp #b0 #b01111110 #b11001001001101110100110))))
(let ((.def_498 (fp.mul RNE x0 (fp #b1 #b01111101 #b10111110011101101100100))))
(let ((.def_499 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_498)))
(let ((.def_503 (fp.add RNE .def_499 .def_502)))
(let ((.def_508 (fp.add RNE .def_503 .def_507)))
(let ((.def_510 (fp.add RNE .def_508 .def_509)))
(let ((.def_514 (fp.add RNE .def_510 .def_513)))
(let ((.def_519 (fp.add RNE .def_514 .def_518)))
(let ((.def_523 (fp.add RNE .def_519 .def_522)))
(let ((.def_524 (fp.leq (fp #b0 #b01111110 #b11101101000011100101011) .def_523)))
.def_524))))))))))))))))
(assert (let ((.def_554 (fp.mul RNE x6 (fp #b0 #b01111100 #b01100110011001100110011))))
(let ((.def_550 (fp.mul RNE x5 (fp #b0 #b01111110 #b11110100001110010101100))))
(let ((.def_546 (fp.mul RNE x4 (fp #b0 #b01111110 #b00110000001000001100010))))
(let ((.def_542 (fp.mul RNE x3 (fp #b0 #b01111110 #b10101000011100101011000))))
(let ((.def_540 (fp.mul RNE x2 (fp #b1 #b01111110 #b11100011110101110000101))))
(let ((.def_535 (fp.mul RNE x1 (fp #b1 #b01111110 #b10111010010111100011011))))
(let ((.def_530 (fp.mul RNE x0 (fp #b1 #b01111101 #b11010110000001000001100))))
(let ((.def_531 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_530)))
(let ((.def_536 (fp.add RNE .def_531 .def_535)))
(let ((.def_541 (fp.add RNE .def_536 .def_540)))
(let ((.def_543 (fp.add RNE .def_541 .def_542)))
(let ((.def_547 (fp.add RNE .def_543 .def_546)))
(let ((.def_551 (fp.add RNE .def_547 .def_550)))
(let ((.def_555 (fp.add RNE .def_551 .def_554)))
(let ((.def_556 (fp.leq .def_555 (fp #b0 #b01111100 #b10011011101001011110010))))
.def_556))))))))))))))))
(assert (let ((.def_589 (fp.mul RNE x6 (fp #b0 #b01111110 #b01101101000011100101011))))
(let ((.def_585 (fp.mul RNE x5 (fp #b1 #b01111100 #b11101101100100010110100))))
(let ((.def_580 (fp.mul RNE x4 (fp #b0 #b01111110 #b10111010111000010100100))))
(let ((.def_576 (fp.mul RNE x3 (fp #b0 #b01111110 #b01001111110111110011110))))
(let ((.def_572 (fp.mul RNE x2 (fp #b1 #b01111110 #b10000110001001001101111))))
(let ((.def_567 (fp.mul RNE x1 (fp #b0 #b01111101 #b11010001111010111000011))))
(let ((.def_563 (fp.mul RNE x0 (fp #b1 #b01111110 #b01100100010110100001110))))
(let ((.def_564 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_563)))
(let ((.def_568 (fp.add RNE .def_564 .def_567)))
(let ((.def_573 (fp.add RNE .def_568 .def_572)))
(let ((.def_577 (fp.add RNE .def_573 .def_576)))
(let ((.def_581 (fp.add RNE .def_577 .def_580)))
(let ((.def_586 (fp.add RNE .def_581 .def_585)))
(let ((.def_590 (fp.add RNE .def_586 .def_589)))
(let ((.def_591 (fp.leq .def_590 (fp #b1 #b01111101 #b00010110100001110010110))))
.def_591))))))))))))))))
(assert (let ((.def_617 (fp.mul RNE x6 (fp #b0 #b01111011 #b00111011011001000101101))))
(let ((.def_615 (fp.mul RNE x5 (fp #b1 #b01111110 #b00100111111011111001111))))
(let ((.def_612 (fp.mul RNE x4 (fp #b1 #b01111101 #b00011111101111100111011))))
(let ((.def_607 (fp.mul RNE x3 (fp #b0 #b01111110 #b01110001101010011111110))))
(let ((.def_605 (fp.mul RNE x2 (fp #b0 #b01111110 #b11101110000101000111101))))
(let ((.def_601 (fp.mul RNE x1 (fp #b1 #b01111011 #b11000110101001111111000))))
(let ((.def_596 (fp.mul RNE x0 (fp #b0 #b01111000 #b01101000011100101011000))))
(let ((.def_597 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_596)))
(let ((.def_602 (fp.add RNE .def_597 .def_601)))
(let ((.def_606 (fp.add RNE .def_602 .def_605)))
(let ((.def_608 (fp.add RNE .def_606 .def_607)))
(let ((.def_613 (fp.add RNE .def_608 .def_612)))
(let ((.def_616 (fp.add RNE .def_613 .def_615)))
(let ((.def_618 (fp.add RNE .def_616 .def_617)))
(let ((.def_619 (fp.leq .def_618 (fp #b0 #b01111100 #b11010100111111011111010))))
.def_619))))))))))))))))
(check-sat)
