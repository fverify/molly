(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_79 (fp.mul RNE x6 (fp #b1 #b01111101 #b11111100111011011001001))))
(let ((.def_74 (fp.mul RNE x5 (fp #b0 #b01111110 #b00010100011110101110001))))
(let ((.def_70 (fp.mul RNE x4 (fp #b1 #b01111100 #b00010000011000100100111))))
(let ((.def_65 (fp.mul RNE x3 (fp #b1 #b01111101 #b11010001111010111000011))))
(let ((.def_60 (fp.mul RNE x2 (fp #b1 #b01111110 #b11000000100000110001001))))
(let ((.def_55 (fp.mul RNE x1 (fp #b1 #b01111110 #b10000010000011000100101))))
(let ((.def_50 (fp.mul RNE x0 (fp #b0 #b01111110 #b10001010001111010111000))))
(let ((.def_51 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_50)))
(let ((.def_56 (fp.add RNE .def_51 .def_55)))
(let ((.def_61 (fp.add RNE .def_56 .def_60)))
(let ((.def_66 (fp.add RNE .def_61 .def_65)))
(let ((.def_71 (fp.add RNE .def_66 .def_70)))
(let ((.def_75 (fp.add RNE .def_71 .def_74)))
(let ((.def_80 (fp.add RNE .def_75 .def_79)))
(let ((.def_81 (fp.leq .def_80 (fp #b0 #b01111011 #b10110110010001011010001))))
.def_81))))))))))))))))
(assert (let ((.def_115 (fp.mul RNE x6 (fp #b0 #b01111100 #b10000001000001100010010))))
(let ((.def_111 (fp.mul RNE x5 (fp #b1 #b01111100 #b11011011001000101101000))))
(let ((.def_106 (fp.mul RNE x4 (fp #b1 #b01111101 #b11001110110110010001011))))
(let ((.def_101 (fp.mul RNE x3 (fp #b0 #b01111100 #b00011000100100110111010))))
(let ((.def_97 (fp.mul RNE x2 (fp #b0 #b01111110 #b11010111100011010101000))))
(let ((.def_93 (fp.mul RNE x1 (fp #b1 #b01111101 #b00001000001100010010011))))
(let ((.def_88 (fp.mul RNE x0 (fp #b1 #b01111110 #b11000001000001100010010))))
(let ((.def_89 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_88)))
(let ((.def_94 (fp.add RNE .def_89 .def_93)))
(let ((.def_98 (fp.add RNE .def_94 .def_97)))
(let ((.def_102 (fp.add RNE .def_98 .def_101)))
(let ((.def_107 (fp.add RNE .def_102 .def_106)))
(let ((.def_112 (fp.add RNE .def_107 .def_111)))
(let ((.def_116 (fp.add RNE .def_112 .def_115)))
(let ((.def_117 (fp.leq .def_116 (fp #b1 #b01111110 #b11110001001001101110101))))
.def_117))))))))))))))))
(assert (let ((.def_149 (fp.mul RNE x6 (fp #b1 #b01111110 #b10001101110100101111001))))
(let ((.def_144 (fp.mul RNE x5 (fp #b0 #b01111110 #b10011001100110011001101))))
(let ((.def_140 (fp.mul RNE x4 (fp #b1 #b01111110 #b01000011100101011000001))))
(let ((.def_135 (fp.mul RNE x3 (fp #b0 #b01111011 #b01111000110101001111111))))
(let ((.def_131 (fp.mul RNE x2 (fp #b0 #b01111101 #b10011100101011000000100))))
(let ((.def_127 (fp.mul RNE x1 (fp #b1 #b01111101 #b00010101100000010000011))))
(let ((.def_122 (fp.mul RNE x0 (fp #b0 #b01111101 #b10101000111101011100001))))
(let ((.def_123 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_122)))
(let ((.def_128 (fp.add RNE .def_123 .def_127)))
(let ((.def_132 (fp.add RNE .def_128 .def_131)))
(let ((.def_136 (fp.add RNE .def_132 .def_135)))
(let ((.def_141 (fp.add RNE .def_136 .def_140)))
(let ((.def_145 (fp.add RNE .def_141 .def_144)))
(let ((.def_150 (fp.add RNE .def_145 .def_149)))
(let ((.def_151 (fp.leq .def_150 (fp #b0 #b01111110 #b10100011110101110000101))))
.def_151))))))))))))))))
(assert (let ((.def_184 (fp.mul RNE x6 (fp #b1 #b01111110 #b10111110111110011101110))))
(let ((.def_179 (fp.mul RNE x5 (fp #b0 #b01111101 #b01011110001101010100000))))
(let ((.def_175 (fp.mul RNE x4 (fp #b1 #b01111101 #b10010110100001110010110))))
(let ((.def_170 (fp.mul RNE x3 (fp #b0 #b01111101 #b01110010101100000010000))))
(let ((.def_166 (fp.mul RNE x2 (fp #b0 #b01111110 #b10011111001110110110010))))
(let ((.def_162 (fp.mul RNE x1 (fp #b0 #b01111110 #b11001111110111110011110))))
(let ((.def_158 (fp.mul RNE x0 (fp #b1 #b01111110 #b00101000011100101011000))))
(let ((.def_159 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_158)))
(let ((.def_163 (fp.add RNE .def_159 .def_162)))
(let ((.def_167 (fp.add RNE .def_163 .def_166)))
(let ((.def_171 (fp.add RNE .def_167 .def_170)))
(let ((.def_176 (fp.add RNE .def_171 .def_175)))
(let ((.def_180 (fp.add RNE .def_176 .def_179)))
(let ((.def_185 (fp.add RNE .def_180 .def_184)))
(let ((.def_186 (fp.leq .def_185 (fp #b1 #b01111011 #b00101111000110101010000))))
.def_186))))))))))))))))
(assert (let ((.def_217 (fp.mul RNE x6 (fp #b0 #b01111101 #b00001011010000111001011))))
(let ((.def_213 (fp.mul RNE x5 (fp #b0 #b01111110 #b00100011110101110000101))))
(let ((.def_209 (fp.mul RNE x4 (fp #b0 #b01111110 #b00111110111110011101110))))
(let ((.def_205 (fp.mul RNE x3 (fp #b0 #b01111100 #b00001000001100010010011))))
(let ((.def_201 (fp.mul RNE x2 (fp #b0 #b01111110 #b00111001110110110010001))))
(let ((.def_197 (fp.mul RNE x1 (fp #b1 #b01111110 #b10011000100100110111010))))
(let ((.def_192 (fp.mul RNE x0 (fp #b1 #b01111101 #b01101101100100010110100))))
(let ((.def_193 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_192)))
(let ((.def_198 (fp.add RNE .def_193 .def_197)))
(let ((.def_202 (fp.add RNE .def_198 .def_201)))
(let ((.def_206 (fp.add RNE .def_202 .def_205)))
(let ((.def_210 (fp.add RNE .def_206 .def_209)))
(let ((.def_214 (fp.add RNE .def_210 .def_213)))
(let ((.def_218 (fp.add RNE .def_214 .def_217)))
(let ((.def_219 (fp.leq .def_218 (fp #b0 #b01111000 #b01000111101011100001010))))
.def_219))))))))))))))))
(assert (let ((.def_252 (fp.mul RNE x6 (fp #b0 #b01111101 #b00100011110101110000101))))
(let ((.def_248 (fp.mul RNE x5 (fp #b0 #b01111110 #b00100011010100111111100))))
(let ((.def_244 (fp.mul RNE x4 (fp #b1 #b01111110 #b10011110001101010100000))))
(let ((.def_239 (fp.mul RNE x3 (fp #b0 #b01111101 #b11100110011001100110011))))
(let ((.def_235 (fp.mul RNE x2 (fp #b1 #b01111011 #b10111010010111100011011))))
(let ((.def_230 (fp.mul RNE x1 (fp #b1 #b01111101 #b01100011010100111111100))))
(let ((.def_225 (fp.mul RNE x0 (fp #b0 #b01111110 #b01000100100110111010011))))
(let ((.def_226 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_225)))
(let ((.def_231 (fp.add RNE .def_226 .def_230)))
(let ((.def_236 (fp.add RNE .def_231 .def_235)))
(let ((.def_240 (fp.add RNE .def_236 .def_239)))
(let ((.def_245 (fp.add RNE .def_240 .def_244)))
(let ((.def_249 (fp.add RNE .def_245 .def_248)))
(let ((.def_253 (fp.add RNE .def_249 .def_252)))
(let ((.def_254 (fp.leq .def_253 (fp #b1 #b01111010 #b00101111000110101010000))))
.def_254))))))))))))))))
(assert (let ((.def_285 (fp.mul RNE x6 (fp #b0 #b01111100 #b00100110111010010111100))))
(let ((.def_281 (fp.mul RNE x5 (fp #b0 #b01111110 #b11110000001000001100010))))
(let ((.def_277 (fp.mul RNE x4 (fp #b1 #b01111101 #b11110100101111000110101))))
(let ((.def_272 (fp.mul RNE x3 (fp #b0 #b01111110 #b00111100111011011001001))))
(let ((.def_268 (fp.mul RNE x2 (fp #b0 #b01111011 #b10000001000001100010010))))
(let ((.def_264 (fp.mul RNE x1 (fp #b0 #b01111000 #b00100110111010010111100))))
(let ((.def_260 (fp.mul RNE x0 (fp #b0 #b01111101 #b11010011111101111100111))))
(let ((.def_261 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_260)))
(let ((.def_265 (fp.add RNE .def_261 .def_264)))
(let ((.def_269 (fp.add RNE .def_265 .def_268)))
(let ((.def_273 (fp.add RNE .def_269 .def_272)))
(let ((.def_278 (fp.add RNE .def_273 .def_277)))
(let ((.def_282 (fp.add RNE .def_278 .def_281)))
(let ((.def_286 (fp.add RNE .def_282 .def_285)))
(let ((.def_287 (fp.leq .def_286 (fp #b1 #b01111101 #b01010000111001010110000))))
.def_287))))))))))))))))
(check-sat)
