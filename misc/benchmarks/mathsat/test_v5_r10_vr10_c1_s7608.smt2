(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_64 (fp.mul RNE x4 (fp #b1 #b01111110 #b00010111100011010101000))))
(let ((.def_59 (fp.mul RNE x3 (fp #b1 #b01111100 #b00111101011100001010010))))
(let ((.def_54 (fp.mul RNE x2 (fp #b1 #b01111000 #b11001010110000001000010))))
(let ((.def_49 (fp.mul RNE x1 (fp #b1 #b01111110 #b01100111011011001000110))))
(let ((.def_44 (fp.mul RNE x0 (fp #b1 #b01111110 #b10100010110100001110011))))
(let ((.def_45 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_44)))
(let ((.def_50 (fp.add RNE .def_45 .def_49)))
(let ((.def_55 (fp.add RNE .def_50 .def_54)))
(let ((.def_60 (fp.add RNE .def_55 .def_59)))
(let ((.def_65 (fp.add RNE .def_60 .def_64)))
(let ((.def_66 (fp.leq .def_65 (fp #b1 #b01111010 #b10100001110010101100000))))
.def_66))))))))))))
(assert (let ((.def_91 (fp.mul RNE x4 (fp #b1 #b01111101 #b10011110101110000101001))))
(let ((.def_86 (fp.mul RNE x3 (fp #b1 #b01111110 #b01110111110011101101101))))
(let ((.def_81 (fp.mul RNE x2 (fp #b0 #b01111110 #b00001010110000001000010))))
(let ((.def_77 (fp.mul RNE x1 (fp #b1 #b01111101 #b10101111000110101010000))))
(let ((.def_72 (fp.mul RNE x0 (fp #b1 #b01111101 #b10110111010010111100011))))
(let ((.def_73 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_72)))
(let ((.def_78 (fp.add RNE .def_73 .def_77)))
(let ((.def_82 (fp.add RNE .def_78 .def_81)))
(let ((.def_87 (fp.add RNE .def_82 .def_86)))
(let ((.def_92 (fp.add RNE .def_87 .def_91)))
(let ((.def_93 (fp.leq (fp #b0 #b01111101 #b10011001100110011001101) .def_92)))
.def_93))))))))))))
(assert (let ((.def_117 (fp.mul RNE x4 (fp #b0 #b01111100 #b11011001000101101000100))))
(let ((.def_113 (fp.mul RNE x3 (fp #b0 #b01111110 #b00011101001011110001101))))
(let ((.def_109 (fp.mul RNE x2 (fp #b1 #b01111110 #b11101010011111101111101))))
(let ((.def_104 (fp.mul RNE x1 (fp #b0 #b01111011 #b10010101100000010000011))))
(let ((.def_100 (fp.mul RNE x0 (fp #b1 #b01111110 #b00011000100100110111010))))
(let ((.def_101 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_100)))
(let ((.def_105 (fp.add RNE .def_101 .def_104)))
(let ((.def_110 (fp.add RNE .def_105 .def_109)))
(let ((.def_114 (fp.add RNE .def_110 .def_113)))
(let ((.def_118 (fp.add RNE .def_114 .def_117)))
(let ((.def_119 (fp.leq .def_118 (fp #b1 #b01111110 #b11100010010011011101001))))
.def_119))))))))))))
(assert (let ((.def_145 (fp.mul RNE x4 (fp #b1 #b01111110 #b01111000010100011110110))))
(let ((.def_140 (fp.mul RNE x3 (fp #b1 #b01111110 #b10000000100000110001001))))
(let ((.def_135 (fp.mul RNE x2 (fp #b1 #b01111110 #b00101001011110001101010))))
(let ((.def_130 (fp.mul RNE x1 (fp #b1 #b01111100 #b11110101110000101001000))))
(let ((.def_125 (fp.mul RNE x0 (fp #b1 #b01111101 #b00010000011000100100111))))
(let ((.def_126 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_125)))
(let ((.def_131 (fp.add RNE .def_126 .def_130)))
(let ((.def_136 (fp.add RNE .def_131 .def_135)))
(let ((.def_141 (fp.add RNE .def_136 .def_140)))
(let ((.def_146 (fp.add RNE .def_141 .def_145)))
(let ((.def_147 (fp.leq (fp #b0 #b01111110 #b10110011101101100100011) .def_146)))
.def_147))))))))))))
(assert (let ((.def_171 (fp.mul RNE x4 (fp #b1 #b01111010 #b00111111011111001110111))))
(let ((.def_166 (fp.mul RNE x3 (fp #b1 #b01111110 #b01000111101011100001010))))
(let ((.def_161 (fp.mul RNE x2 (fp #b0 #b01111101 #b10010001011010000111001))))
(let ((.def_157 (fp.mul RNE x1 (fp #b0 #b01111101 #b10000000000000000000000))))
(let ((.def_153 (fp.mul RNE x0 (fp #b1 #b01111110 #b01111010010111100011011))))
(let ((.def_154 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_153)))
(let ((.def_158 (fp.add RNE .def_154 .def_157)))
(let ((.def_162 (fp.add RNE .def_158 .def_161)))
(let ((.def_167 (fp.add RNE .def_162 .def_166)))
(let ((.def_172 (fp.add RNE .def_167 .def_171)))
(let ((.def_173 (fp.leq .def_172 (fp #b0 #b01111101 #b00101100000010000011001))))
.def_173))))))))))))
(assert (let ((.def_196 (fp.mul RNE x4 (fp #b1 #b01111110 #b11111110111110011101110))))
(let ((.def_191 (fp.mul RNE x3 (fp #b0 #b01111101 #b00111001010110000001000))))
(let ((.def_187 (fp.mul RNE x2 (fp #b0 #b01111110 #b10011101101100100010111))))
(let ((.def_183 (fp.mul RNE x1 (fp #b0 #b01111100 #b01100010010011011101001))))
(let ((.def_179 (fp.mul RNE x0 (fp #b1 #b01111101 #b00011010100111111011111))))
(let ((.def_180 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_179)))
(let ((.def_184 (fp.add RNE .def_180 .def_183)))
(let ((.def_188 (fp.add RNE .def_184 .def_187)))
(let ((.def_192 (fp.add RNE .def_188 .def_191)))
(let ((.def_197 (fp.add RNE .def_192 .def_196)))
(let ((.def_198 (fp.leq (fp #b0 #b01111110 #b00101001111110111110100) .def_197)))
.def_198))))))))))))
(assert (let ((.def_221 (fp.mul RNE x4 (fp #b0 #b01111110 #b10011100101011000000100))))
(let ((.def_217 (fp.mul RNE x3 (fp #b0 #b01111100 #b10110000001000001100010))))
(let ((.def_213 (fp.mul RNE x2 (fp #b1 #b01111110 #b11010001011010000111001))))
(let ((.def_208 (fp.mul RNE x1 (fp #b0 #b01111110 #b01011111101111100111011))))
(let ((.def_204 (fp.mul RNE x0 (fp #b0 #b01111110 #b00100000010000011000101))))
(let ((.def_205 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_204)))
(let ((.def_209 (fp.add RNE .def_205 .def_208)))
(let ((.def_214 (fp.add RNE .def_209 .def_213)))
(let ((.def_218 (fp.add RNE .def_214 .def_217)))
(let ((.def_222 (fp.add RNE .def_218 .def_221)))
(let ((.def_223 (fp.leq .def_222 (fp #b1 #b01111110 #b10001001101110100101111))))
.def_223))))))))))))
(assert (let ((.def_245 (fp.mul RNE x4 (fp #b1 #b01111001 #b01111000110101001111111))))
(let ((.def_240 (fp.mul RNE x3 (fp #b0 #b01111100 #b01001101110100101111001))))
(let ((.def_236 (fp.mul RNE x2 (fp #b1 #b01111110 #b01111000010100011110110))))
(let ((.def_234 (fp.mul RNE x1 (fp #b0 #b01111110 #b10111001110110110010001))))
(let ((.def_230 (fp.mul RNE x0 (fp #b1 #b01111110 #b01010110100001110010110))))
(let ((.def_231 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_230)))
(let ((.def_235 (fp.add RNE .def_231 .def_234)))
(let ((.def_237 (fp.add RNE .def_235 .def_236)))
(let ((.def_241 (fp.add RNE .def_237 .def_240)))
(let ((.def_246 (fp.add RNE .def_241 .def_245)))
(let ((.def_247 (fp.leq (fp #b1 #b01111110 #b10001000101101000011101) .def_246)))
.def_247))))))))))))
(assert (let ((.def_272 (fp.mul RNE x4 (fp #b1 #b01111110 #b01101101000011100101011))))
(let ((.def_267 (fp.mul RNE x3 (fp #b0 #b01111101 #b00001000001100010010011))))
(let ((.def_263 (fp.mul RNE x2 (fp #b1 #b01111101 #b01111011111001110110110))))
(let ((.def_258 (fp.mul RNE x1 (fp #b1 #b01111100 #b01101010011111101111101))))
(let ((.def_253 (fp.mul RNE x0 (fp #b0 #b01111101 #b10011100101011000000100))))
(let ((.def_254 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_253)))
(let ((.def_259 (fp.add RNE .def_254 .def_258)))
(let ((.def_264 (fp.add RNE .def_259 .def_263)))
(let ((.def_268 (fp.add RNE .def_264 .def_267)))
(let ((.def_273 (fp.add RNE .def_268 .def_272)))
(let ((.def_274 (fp.leq .def_273 (fp #b1 #b01111110 #b00011100101011000000100))))
.def_274))))))))))))
(assert (let ((.def_299 (fp.mul RNE x4 (fp #b1 #b01111110 #b00001100010010011011101))))
(let ((.def_294 (fp.mul RNE x3 (fp #b1 #b01111010 #b11011011001000101101000))))
(let ((.def_289 (fp.mul RNE x2 (fp #b1 #b01111110 #b10011010100111111011111))))
(let ((.def_284 (fp.mul RNE x1 (fp #b0 #b01111110 #b10000011000100100110111))))
(let ((.def_280 (fp.mul RNE x0 (fp #b0 #b01111110 #b01011010100111111011111))))
(let ((.def_281 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_280)))
(let ((.def_285 (fp.add RNE .def_281 .def_284)))
(let ((.def_290 (fp.add RNE .def_285 .def_289)))
(let ((.def_295 (fp.add RNE .def_290 .def_294)))
(let ((.def_300 (fp.add RNE .def_295 .def_299)))
(let ((.def_301 (fp.leq (fp #b1 #b01111110 #b11101101000011100101011) .def_300)))
.def_301))))))))))))
(check-sat)
