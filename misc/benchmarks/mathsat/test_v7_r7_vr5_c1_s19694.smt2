(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_78 (fp.mul RNE x6 (fp #b0 #b01111110 #b01101101100100010110100))))
(let ((.def_74 (fp.mul RNE x5 (fp #b1 #b01111110 #b01000100100110111010011))))
(let ((.def_69 (fp.mul RNE x4 (fp #b0 #b01111010 #b11101011100001010001111))))
(let ((.def_65 (fp.mul RNE x3 (fp #b0 #b01111101 #b10111101011100001010010))))
(let ((.def_61 (fp.mul RNE x2 (fp #b1 #b01111110 #b11000100000110001001010))))
(let ((.def_56 (fp.mul RNE x1 (fp #b1 #b01111011 #b01100000010000011000101))))
(let ((.def_51 (fp.mul RNE x0 (fp #b1 #b01111110 #b00101111000110101010000))))
(let ((.def_52 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_51)))
(let ((.def_57 (fp.add RNE .def_52 .def_56)))
(let ((.def_62 (fp.add RNE .def_57 .def_61)))
(let ((.def_66 (fp.add RNE .def_62 .def_65)))
(let ((.def_70 (fp.add RNE .def_66 .def_69)))
(let ((.def_75 (fp.add RNE .def_70 .def_74)))
(let ((.def_79 (fp.add RNE .def_75 .def_78)))
(let ((.def_80 (fp.leq .def_79 (fp #b0 #b01111110 #b10101010011111101111101))))
.def_80))))))))))))))))
(assert (let ((.def_112 (fp.mul RNE x6 (fp #b0 #b01111101 #b00001000001100010010011))))
(let ((.def_108 (fp.mul RNE x5 (fp #b1 #b01111110 #b01101100100010110100010))))
(let ((.def_103 (fp.mul RNE x4 (fp #b0 #b01111110 #b11101010011111101111101))))
(let ((.def_99 (fp.mul RNE x3 (fp #b0 #b01111110 #b00000011000100100110111))))
(let ((.def_95 (fp.mul RNE x2 (fp #b0 #b01111110 #b10110011001100110011010))))
(let ((.def_91 (fp.mul RNE x1 (fp #b0 #b01111100 #b01100100010110100001110))))
(let ((.def_87 (fp.mul RNE x0 (fp #b1 #b01111110 #b01010001111010111000011))))
(let ((.def_88 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_87)))
(let ((.def_92 (fp.add RNE .def_88 .def_91)))
(let ((.def_96 (fp.add RNE .def_92 .def_95)))
(let ((.def_100 (fp.add RNE .def_96 .def_99)))
(let ((.def_104 (fp.add RNE .def_100 .def_103)))
(let ((.def_109 (fp.add RNE .def_104 .def_108)))
(let ((.def_113 (fp.add RNE .def_109 .def_112)))
(let ((.def_114 (fp.leq .def_113 (fp #b1 #b01111101 #b10110010001011010000111))))
.def_114))))))))))))))))
(assert (let ((.def_145 (fp.mul RNE x6 (fp #b0 #b01111110 #b00000100000110001001010))))
(let ((.def_141 (fp.mul RNE x5 (fp #b0 #b01111101 #b01000000100000110001001))))
(let ((.def_137 (fp.mul RNE x4 (fp #b0 #b01111101 #b00001110010101100000010))))
(let ((.def_133 (fp.mul RNE x3 (fp #b0 #b01111110 #b00011100001010001111011))))
(let ((.def_129 (fp.mul RNE x2 (fp #b0 #b01111110 #b01001111110111110011110))))
(let ((.def_125 (fp.mul RNE x1 (fp #b1 #b01111110 #b10010110100001110010110))))
(let ((.def_120 (fp.mul RNE x0 (fp #b0 #b01111110 #b00010100111111011111010))))
(let ((.def_121 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_120)))
(let ((.def_126 (fp.add RNE .def_121 .def_125)))
(let ((.def_130 (fp.add RNE .def_126 .def_129)))
(let ((.def_134 (fp.add RNE .def_130 .def_133)))
(let ((.def_138 (fp.add RNE .def_134 .def_137)))
(let ((.def_142 (fp.add RNE .def_138 .def_141)))
(let ((.def_146 (fp.add RNE .def_142 .def_145)))
(let ((.def_147 (fp.leq .def_146 (fp #b1 #b01111110 #b00111110011101101100100))))
.def_147))))))))))))))))
(assert (let ((.def_181 (fp.mul RNE x6 (fp #b1 #b01111110 #b11111100011010100111111))))
(let ((.def_176 (fp.mul RNE x5 (fp #b1 #b01111101 #b00011010100111111011111))))
(let ((.def_171 (fp.mul RNE x4 (fp #b0 #b01111101 #b01000010100011110101110))))
(let ((.def_167 (fp.mul RNE x3 (fp #b0 #b01111110 #b01110111110011101101101))))
(let ((.def_163 (fp.mul RNE x2 (fp #b1 #b01111101 #b10100010110100001110011))))
(let ((.def_158 (fp.mul RNE x1 (fp #b1 #b01111101 #b01101110100101111000111))))
(let ((.def_153 (fp.mul RNE x0 (fp #b0 #b01111011 #b11101011100001010001111))))
(let ((.def_154 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_153)))
(let ((.def_159 (fp.add RNE .def_154 .def_158)))
(let ((.def_164 (fp.add RNE .def_159 .def_163)))
(let ((.def_168 (fp.add RNE .def_164 .def_167)))
(let ((.def_172 (fp.add RNE .def_168 .def_171)))
(let ((.def_177 (fp.add RNE .def_172 .def_176)))
(let ((.def_182 (fp.add RNE .def_177 .def_181)))
(let ((.def_183 (fp.leq .def_182 (fp #b1 #b01111101 #b00111011011001000101101))))
.def_183))))))))))))))))
(assert (let ((.def_212 (fp.mul RNE x6 (fp #b1 #b01111110 #b00110010101100000010000))))
(let ((.def_207 (fp.mul RNE x5 (fp #b0 #b01111100 #b00011100101011000000100))))
(let ((.def_203 (fp.mul RNE x4 (fp #b1 #b01111100 #b10011111101111100111011))))
(let ((.def_198 (fp.mul RNE x3 (fp #b0 #b01111110 #b00100000010000011000101))))
(let ((.def_194 (fp.mul RNE x2 (fp #b0 #b01111110 #b01111110011101101100100))))
(let ((.def_190 (fp.mul RNE x1 (fp #b0 #b01111101 #b11111001110110110010001))))
(let ((.def_186 (fp.mul RNE x0 (fp #b0 #b01111011 #b01100000010000011000101))))
(let ((.def_187 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_186)))
(let ((.def_191 (fp.add RNE .def_187 .def_190)))
(let ((.def_195 (fp.add RNE .def_191 .def_194)))
(let ((.def_199 (fp.add RNE .def_195 .def_198)))
(let ((.def_204 (fp.add RNE .def_199 .def_203)))
(let ((.def_208 (fp.add RNE .def_204 .def_207)))
(let ((.def_213 (fp.add RNE .def_208 .def_212)))
(let ((.def_214 (fp.leq (fp #b0 #b01111110 #b11000010100011110101110) .def_213)))
.def_214))))))))))))))))
(assert (let ((.def_246 (fp.mul RNE x6 (fp #b0 #b01111110 #b01111110111110011101110))))
(let ((.def_242 (fp.mul RNE x5 (fp #b0 #b01111101 #b11101101100100010110100))))
(let ((.def_238 (fp.mul RNE x4 (fp #b0 #b01111110 #b00011001000101101000100))))
(let ((.def_234 (fp.mul RNE x3 (fp #b0 #b01111110 #b10101011000000100000110))))
(let ((.def_230 (fp.mul RNE x2 (fp #b1 #b01111101 #b01110111110011101101101))))
(let ((.def_225 (fp.mul RNE x1 (fp #b1 #b01111110 #b10011101001011110001101))))
(let ((.def_220 (fp.mul RNE x0 (fp #b1 #b01111010 #b10110010001011010000111))))
(let ((.def_221 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_220)))
(let ((.def_226 (fp.add RNE .def_221 .def_225)))
(let ((.def_231 (fp.add RNE .def_226 .def_230)))
(let ((.def_235 (fp.add RNE .def_231 .def_234)))
(let ((.def_239 (fp.add RNE .def_235 .def_238)))
(let ((.def_243 (fp.add RNE .def_239 .def_242)))
(let ((.def_247 (fp.add RNE .def_243 .def_246)))
(let ((.def_248 (fp.leq (fp #b0 #b01111110 #b10010101100000010000011) .def_247)))
.def_248))))))))))))))))
(assert (let ((.def_283 (fp.mul RNE x6 (fp #b1 #b01111110 #b11100011010100111111100))))
(let ((.def_278 (fp.mul RNE x5 (fp #b1 #b01111110 #b10010000111001010110000))))
(let ((.def_273 (fp.mul RNE x4 (fp #b1 #b01111110 #b00101100000010000011001))))
(let ((.def_268 (fp.mul RNE x3 (fp #b1 #b01111101 #b11110001101010011111110))))
(let ((.def_263 (fp.mul RNE x2 (fp #b0 #b01111110 #b01111001010110000001000))))
(let ((.def_259 (fp.mul RNE x1 (fp #b0 #b01111101 #b11001001101110100101111))))
(let ((.def_255 (fp.mul RNE x0 (fp #b1 #b01111110 #b11100010110100001110011))))
(let ((.def_256 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_255)))
(let ((.def_260 (fp.add RNE .def_256 .def_259)))
(let ((.def_264 (fp.add RNE .def_260 .def_263)))
(let ((.def_269 (fp.add RNE .def_264 .def_268)))
(let ((.def_274 (fp.add RNE .def_269 .def_273)))
(let ((.def_279 (fp.add RNE .def_274 .def_278)))
(let ((.def_284 (fp.add RNE .def_279 .def_283)))
(let ((.def_285 (fp.leq .def_284 (fp #b1 #b01111100 #b11110101110000101001000))))
.def_285))))))))))))))))
(check-sat)
