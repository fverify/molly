(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_79 (fp.mul RNE x6 (fp #b0 #b01111110 #b00111101011100001010010))))
(let ((.def_75 (fp.mul RNE x5 (fp #b1 #b01111110 #b10111101111100111011011))))
(let ((.def_70 (fp.mul RNE x4 (fp #b1 #b01111110 #b11011111101111100111011))))
(let ((.def_65 (fp.mul RNE x3 (fp #b0 #b01111011 #b00000110001001001101111))))
(let ((.def_61 (fp.mul RNE x2 (fp #b1 #b01111110 #b10001010001111010111000))))
(let ((.def_56 (fp.mul RNE x1 (fp #b1 #b01111110 #b10000000000000000000000))))
(let ((.def_51 (fp.mul RNE x0 (fp #b1 #b01111110 #b01000101101000011100101))))
(let ((.def_52 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_51)))
(let ((.def_57 (fp.add RNE .def_52 .def_56)))
(let ((.def_62 (fp.add RNE .def_57 .def_61)))
(let ((.def_66 (fp.add RNE .def_62 .def_65)))
(let ((.def_71 (fp.add RNE .def_66 .def_70)))
(let ((.def_76 (fp.add RNE .def_71 .def_75)))
(let ((.def_80 (fp.add RNE .def_76 .def_79)))
(let ((.def_81 (fp.leq (fp #b0 #b01111110 #b01100001010001111010111) .def_80)))
.def_81))))))))))))))))
(assert (let ((.def_113 (fp.mul RNE x6 (fp #b0 #b01111110 #b10100000110001001001110))))
(let ((.def_111 (fp.mul RNE x5 (fp #b1 #b01111011 #b00001010001111010111000))))
(let ((.def_106 (fp.mul RNE x4 (fp #b1 #b01111110 #b11001101110100101111001))))
(let ((.def_101 (fp.mul RNE x3 (fp #b1 #b01111101 #b01100110011001100110011))))
(let ((.def_96 (fp.mul RNE x2 (fp #b1 #b01111110 #b10110001001001101110101))))
(let ((.def_91 (fp.mul RNE x1 (fp #b0 #b01111110 #b10011111101111100111011))))
(let ((.def_87 (fp.mul RNE x0 (fp #b0 #b01111101 #b00001100010010011011101))))
(let ((.def_88 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_87)))
(let ((.def_92 (fp.add RNE .def_88 .def_91)))
(let ((.def_97 (fp.add RNE .def_92 .def_96)))
(let ((.def_102 (fp.add RNE .def_97 .def_101)))
(let ((.def_107 (fp.add RNE .def_102 .def_106)))
(let ((.def_112 (fp.add RNE .def_107 .def_111)))
(let ((.def_114 (fp.add RNE .def_112 .def_113)))
(let ((.def_115 (fp.leq (fp #b1 #b01111110 #b10100000110001001001110) .def_114)))
.def_115))))))))))))))))
(assert (let ((.def_147 (fp.mul RNE x6 (fp #b1 #b01111100 #b00101000111101011100001))))
(let ((.def_142 (fp.mul RNE x5 (fp #b0 #b01111110 #b01100100110111010011000))))
(let ((.def_138 (fp.mul RNE x4 (fp #b0 #b01111101 #b00100110111010010111100))))
(let ((.def_134 (fp.mul RNE x3 (fp #b1 #b01111011 #b00000110001001001101111))))
(let ((.def_131 (fp.mul RNE x2 (fp #b1 #b01111110 #b01100011010100111111100))))
(let ((.def_126 (fp.mul RNE x1 (fp #b0 #b01111110 #b00101110100101111000111))))
(let ((.def_122 (fp.mul RNE x0 (fp #b1 #b01111110 #b10010011111101111100111))))
(let ((.def_123 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_122)))
(let ((.def_127 (fp.add RNE .def_123 .def_126)))
(let ((.def_132 (fp.add RNE .def_127 .def_131)))
(let ((.def_135 (fp.add RNE .def_132 .def_134)))
(let ((.def_139 (fp.add RNE .def_135 .def_138)))
(let ((.def_143 (fp.add RNE .def_139 .def_142)))
(let ((.def_148 (fp.add RNE .def_143 .def_147)))
(let ((.def_149 (fp.leq (fp #b1 #b01111110 #b10110000001000001100010) .def_148)))
.def_149))))))))))))))))
(assert (let ((.def_181 (fp.mul RNE x6 (fp #b0 #b01111101 #b00100111111011111001111))))
(let ((.def_177 (fp.mul RNE x5 (fp #b1 #b01111100 #b11001010110000001000010))))
(let ((.def_172 (fp.mul RNE x4 (fp #b0 #b01111100 #b10010101100000010000011))))
(let ((.def_168 (fp.mul RNE x3 (fp #b0 #b01111001 #b00010110100001110010110))))
(let ((.def_164 (fp.mul RNE x2 (fp #b0 #b01111011 #b11001110110110010001011))))
(let ((.def_160 (fp.mul RNE x1 (fp #b0 #b01111110 #b00011010000111001010110))))
(let ((.def_156 (fp.mul RNE x0 (fp #b1 #b01111101 #b11100001010001111010111))))
(let ((.def_157 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_156)))
(let ((.def_161 (fp.add RNE .def_157 .def_160)))
(let ((.def_165 (fp.add RNE .def_161 .def_164)))
(let ((.def_169 (fp.add RNE .def_165 .def_168)))
(let ((.def_173 (fp.add RNE .def_169 .def_172)))
(let ((.def_178 (fp.add RNE .def_173 .def_177)))
(let ((.def_182 (fp.add RNE .def_178 .def_181)))
(let ((.def_183 (fp.leq .def_182 (fp #b1 #b01111011 #b11110111110011101101101))))
.def_183))))))))))))))))
(assert (let ((.def_217 (fp.mul RNE x6 (fp #b0 #b01111011 #b10110110010001011010001))))
(let ((.def_213 (fp.mul RNE x5 (fp #b0 #b01111101 #b01001110110110010001011))))
(let ((.def_209 (fp.mul RNE x4 (fp #b1 #b01111110 #b01100011110101110000101))))
(let ((.def_204 (fp.mul RNE x3 (fp #b1 #b01111110 #b00001001001101110100110))))
(let ((.def_199 (fp.mul RNE x2 (fp #b1 #b01111101 #b00010101100000010000011))))
(let ((.def_194 (fp.mul RNE x1 (fp #b1 #b01111100 #b01101010011111101111101))))
(let ((.def_189 (fp.mul RNE x0 (fp #b1 #b01111110 #b01100111111011111001111))))
(let ((.def_190 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_189)))
(let ((.def_195 (fp.add RNE .def_190 .def_194)))
(let ((.def_200 (fp.add RNE .def_195 .def_199)))
(let ((.def_205 (fp.add RNE .def_200 .def_204)))
(let ((.def_210 (fp.add RNE .def_205 .def_209)))
(let ((.def_214 (fp.add RNE .def_210 .def_213)))
(let ((.def_218 (fp.add RNE .def_214 .def_217)))
(let ((.def_219 (fp.leq .def_218 (fp #b0 #b01111110 #b11101111100111011011001))))
.def_219))))))))))))))))
(assert (let ((.def_249 (fp.mul RNE x6 (fp #b0 #b01111100 #b01111110111110011101110))))
(let ((.def_245 (fp.mul RNE x5 (fp #b0 #b01111110 #b00111101011100001010010))))
(let ((.def_243 (fp.mul RNE x4 (fp #b1 #b01111101 #b00011001100110011001101))))
(let ((.def_238 (fp.mul RNE x3 (fp #b1 #b01111101 #b11101011100001010001111))))
(let ((.def_233 (fp.mul RNE x2 (fp #b1 #b01111110 #b10010011111101111100111))))
(let ((.def_231 (fp.mul RNE x1 (fp #b1 #b01111110 #b01111001010110000001000))))
(let ((.def_226 (fp.mul RNE x0 (fp #b1 #b01111110 #b10001010110000001000010))))
(let ((.def_227 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_226)))
(let ((.def_232 (fp.add RNE .def_227 .def_231)))
(let ((.def_234 (fp.add RNE .def_232 .def_233)))
(let ((.def_239 (fp.add RNE .def_234 .def_238)))
(let ((.def_244 (fp.add RNE .def_239 .def_243)))
(let ((.def_246 (fp.add RNE .def_244 .def_245)))
(let ((.def_250 (fp.add RNE .def_246 .def_249)))
(let ((.def_251 (fp.leq (fp #b1 #b01111110 #b01101101000011100101011) .def_250)))
.def_251))))))))))))))))
(assert (let ((.def_281 (fp.mul RNE x6 (fp #b1 #b01111110 #b11001110010101100000010))))
(let ((.def_276 (fp.mul RNE x5 (fp #b0 #b01111101 #b01100010010011011101001))))
(let ((.def_272 (fp.mul RNE x4 (fp #b0 #b01111110 #b01101101000011100101011))))
(let ((.def_270 (fp.mul RNE x3 (fp #b0 #b01111011 #b01000111101011100001010))))
(let ((.def_266 (fp.mul RNE x2 (fp #b0 #b01111110 #b11100111111011111001111))))
(let ((.def_262 (fp.mul RNE x1 (fp #b1 #b01111100 #b01110100101111000110101))))
(let ((.def_257 (fp.mul RNE x0 (fp #b0 #b01111110 #b01100000110001001001110))))
(let ((.def_258 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_257)))
(let ((.def_263 (fp.add RNE .def_258 .def_262)))
(let ((.def_267 (fp.add RNE .def_263 .def_266)))
(let ((.def_271 (fp.add RNE .def_267 .def_270)))
(let ((.def_273 (fp.add RNE .def_271 .def_272)))
(let ((.def_277 (fp.add RNE .def_273 .def_276)))
(let ((.def_282 (fp.add RNE .def_277 .def_281)))
(let ((.def_283 (fp.leq .def_282 (fp #b1 #b01111101 #b00001111010111000010100))))
.def_283))))))))))))))))
(assert (let ((.def_314 (fp.mul RNE x6 (fp #b0 #b01111110 #b11101000011100101011000))))
(let ((.def_310 (fp.mul RNE x5 (fp #b1 #b01111101 #b00111010010111100011011))))
(let ((.def_305 (fp.mul RNE x4 (fp #b1 #b01111110 #b01101011000000100000110))))
(let ((.def_300 (fp.mul RNE x3 (fp #b0 #b01111110 #b10001101110100101111001))))
(let ((.def_296 (fp.mul RNE x2 (fp #b0 #b01111110 #b00001011010000111001011))))
(let ((.def_292 (fp.mul RNE x1 (fp #b0 #b01111101 #b10000011000100100110111))))
(let ((.def_288 (fp.mul RNE x0 (fp #b0 #b01111101 #b11101010011111101111101))))
(let ((.def_289 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_288)))
(let ((.def_293 (fp.add RNE .def_289 .def_292)))
(let ((.def_297 (fp.add RNE .def_293 .def_296)))
(let ((.def_301 (fp.add RNE .def_297 .def_300)))
(let ((.def_306 (fp.add RNE .def_301 .def_305)))
(let ((.def_311 (fp.add RNE .def_306 .def_310)))
(let ((.def_315 (fp.add RNE .def_311 .def_314)))
(let ((.def_316 (fp.leq .def_315 (fp #b0 #b01111101 #b11010000111001010110000))))
.def_316))))))))))))))))
(assert (let ((.def_346 (fp.mul RNE x6 (fp #b1 #b01111110 #b01001001101110100101111))))
(let ((.def_343 (fp.mul RNE x5 (fp #b0 #b01111101 #b11001100110011001100110))))
(let ((.def_339 (fp.mul RNE x4 (fp #b0 #b01111101 #b10011100101011000000100))))
(let ((.def_335 (fp.mul RNE x3 (fp #b0 #b01111110 #b00001001101110100101111))))
(let ((.def_331 (fp.mul RNE x2 (fp #b0 #b01111110 #b01001001101110100101111))))
(let ((.def_327 (fp.mul RNE x1 (fp #b1 #b01111100 #b11110111110011101101101))))
(let ((.def_322 (fp.mul RNE x0 (fp #b0 #b01110111 #b00000110001001001101111))))
(let ((.def_323 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_322)))
(let ((.def_328 (fp.add RNE .def_323 .def_327)))
(let ((.def_332 (fp.add RNE .def_328 .def_331)))
(let ((.def_336 (fp.add RNE .def_332 .def_335)))
(let ((.def_340 (fp.add RNE .def_336 .def_339)))
(let ((.def_344 (fp.add RNE .def_340 .def_343)))
(let ((.def_347 (fp.add RNE .def_344 .def_346)))
(let ((.def_348 (fp.leq (fp #b1 #b01111110 #b11010111000010100011111) .def_347)))
.def_348))))))))))))))))
(assert (let ((.def_376 (fp.mul RNE x6 (fp #b1 #b01111110 #b10011000100100110111010))))
(let ((.def_371 (fp.mul RNE x5 (fp #b0 #b01111110 #b10101000111101011100001))))
(let ((.def_367 (fp.mul RNE x4 (fp #b1 #b01111110 #b10011110001101010100000))))
(let ((.def_362 (fp.mul RNE x3 (fp #b0 #b01111110 #b10101100100010110100010))))
(let ((.def_358 (fp.mul RNE x2 (fp #b0 #b01111110 #b00010010111100011010101))))
(let ((.def_354 (fp.mul RNE x1 (fp #b1 #b01111110 #b01110101001111110111110))))
(let ((.def_288 (fp.mul RNE x0 (fp #b0 #b01111101 #b11101010011111101111101))))
(let ((.def_289 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_288)))
(let ((.def_355 (fp.add RNE .def_289 .def_354)))
(let ((.def_359 (fp.add RNE .def_355 .def_358)))
(let ((.def_363 (fp.add RNE .def_359 .def_362)))
(let ((.def_368 (fp.add RNE .def_363 .def_367)))
(let ((.def_372 (fp.add RNE .def_368 .def_371)))
(let ((.def_377 (fp.add RNE .def_372 .def_376)))
(let ((.def_378 (fp.leq .def_377 (fp #b0 #b01111110 #b00111100011010100111111))))
.def_378))))))))))))))))
(assert (let ((.def_406 (fp.mul RNE x6 (fp #b0 #b01111100 #b01001001101110100101111))))
(let ((.def_402 (fp.mul RNE x5 (fp #b0 #b01111011 #b00111011011001000101101))))
(let ((.def_398 (fp.mul RNE x4 (fp #b0 #b01111110 #b10101001111110111110100))))
(let ((.def_394 (fp.mul RNE x3 (fp #b1 #b01111110 #b01100111111011111001111))))
(let ((.def_392 (fp.mul RNE x2 (fp #b1 #b01111110 #b00001001101110100101111))))
(let ((.def_389 (fp.mul RNE x1 (fp #b1 #b01111100 #b01110110110010001011010))))
(let ((.def_384 (fp.mul RNE x0 (fp #b0 #b01111110 #b10000110101001111111000))))
(let ((.def_385 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_384)))
(let ((.def_390 (fp.add RNE .def_385 .def_389)))
(let ((.def_393 (fp.add RNE .def_390 .def_392)))
(let ((.def_395 (fp.add RNE .def_393 .def_394)))
(let ((.def_399 (fp.add RNE .def_395 .def_398)))
(let ((.def_403 (fp.add RNE .def_399 .def_402)))
(let ((.def_407 (fp.add RNE .def_403 .def_406)))
(let ((.def_408 (fp.leq .def_407 (fp #b1 #b01111110 #b01100010110100001110011))))
.def_408))))))))))))))))
(assert (let ((.def_435 (fp.mul RNE x6 (fp #b0 #b01111110 #b01110000101000111101100))))
(let ((.def_431 (fp.mul RNE x5 (fp #b0 #b01111110 #b01000101000111101011100))))
(let ((.def_427 (fp.mul RNE x4 (fp #b0 #b01111100 #b10111110011101101100100))))
(let ((.def_423 (fp.mul RNE x3 (fp #b1 #b01111110 #b01110101001111110111110))))
(let ((.def_421 (fp.mul RNE x2 (fp #b0 #b01111101 #b11001010110000001000010))))
(let ((.def_417 (fp.mul RNE x1 (fp #b0 #b01111110 #b01101000111101011100001))))
(let ((.def_413 (fp.mul RNE x0 (fp #b0 #b01111101 #b11001011110001101010100))))
(let ((.def_414 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_413)))
(let ((.def_418 (fp.add RNE .def_414 .def_417)))
(let ((.def_422 (fp.add RNE .def_418 .def_421)))
(let ((.def_424 (fp.add RNE .def_422 .def_423)))
(let ((.def_428 (fp.add RNE .def_424 .def_427)))
(let ((.def_432 (fp.add RNE .def_428 .def_431)))
(let ((.def_436 (fp.add RNE .def_432 .def_435)))
(let ((.def_437 (fp.leq .def_436 (fp #b0 #b01111011 #b10101001111110111110100))))
.def_437))))))))))))))))
(check-sat)
