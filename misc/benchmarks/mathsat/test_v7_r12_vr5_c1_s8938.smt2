(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b10000001 #b01000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b10000001 #b01000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_78 (fp.mul RNE x6 (fp #b1 #b01111101 #b00001000001100010010011))))
(let ((.def_73 (fp.mul RNE x5 (fp #b0 #b01111101 #b00001010001111010111000))))
(let ((.def_69 (fp.mul RNE x4 (fp #b0 #b01111110 #b11000001000001100010010))))
(let ((.def_65 (fp.mul RNE x3 (fp #b0 #b01111110 #b01111010010111100011011))))
(let ((.def_61 (fp.mul RNE x2 (fp #b0 #b01111110 #b01011101101100100010111))))
(let ((.def_57 (fp.mul RNE x1 (fp #b1 #b01111110 #b10101010011111101111101))))
(let ((.def_52 (fp.mul RNE x0 (fp #b1 #b01111110 #b01011000100100110111010))))
(let ((.def_53 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_52)))
(let ((.def_58 (fp.add RNE .def_53 .def_57)))
(let ((.def_62 (fp.add RNE .def_58 .def_61)))
(let ((.def_66 (fp.add RNE .def_62 .def_65)))
(let ((.def_70 (fp.add RNE .def_66 .def_69)))
(let ((.def_74 (fp.add RNE .def_70 .def_73)))
(let ((.def_79 (fp.add RNE .def_74 .def_78)))
(let ((.def_80 (fp.leq (fp #b1 #b01111011 #b11100011010100111111100) .def_79)))
.def_80))))))))))))))))
(assert (let ((.def_111 (fp.mul RNE x6 (fp #b0 #b01111010 #b11010010111100011010101))))
(let ((.def_107 (fp.mul RNE x5 (fp #b0 #b01111110 #b01110110110010001011010))))
(let ((.def_103 (fp.mul RNE x4 (fp #b1 #b01111101 #b10000101000111101011100))))
(let ((.def_98 (fp.mul RNE x3 (fp #b1 #b01111110 #b01010111100011010101000))))
(let ((.def_93 (fp.mul RNE x2 (fp #b0 #b01110111 #b01000111101011100001010))))
(let ((.def_89 (fp.mul RNE x1 (fp #b1 #b01111101 #b11100001010001111010111))))
(let ((.def_84 (fp.mul RNE x0 (fp #b1 #b01111110 #b01111010010111100011011))))
(let ((.def_85 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_84)))
(let ((.def_90 (fp.add RNE .def_85 .def_89)))
(let ((.def_94 (fp.add RNE .def_90 .def_93)))
(let ((.def_99 (fp.add RNE .def_94 .def_98)))
(let ((.def_104 (fp.add RNE .def_99 .def_103)))
(let ((.def_108 (fp.add RNE .def_104 .def_107)))
(let ((.def_112 (fp.add RNE .def_108 .def_111)))
(let ((.def_113 (fp.leq (fp #b0 #b01111101 #b11001111110111110011110) .def_112)))
.def_113))))))))))))))))
(assert (let ((.def_144 (fp.mul RNE x6 (fp #b0 #b01111110 #b01011000100100110111010))))
(let ((.def_142 (fp.mul RNE x5 (fp #b1 #b01111011 #b01001111110111110011110))))
(let ((.def_137 (fp.mul RNE x4 (fp #b0 #b01111110 #b10101100000010000011001))))
(let ((.def_133 (fp.mul RNE x3 (fp #b1 #b01111110 #b10100100110111010011000))))
(let ((.def_128 (fp.mul RNE x2 (fp #b1 #b01111100 #b00100010110100001110011))))
(let ((.def_123 (fp.mul RNE x1 (fp #b0 #b01111110 #b11111101111100111011011))))
(let ((.def_119 (fp.mul RNE x0 (fp #b0 #b01111101 #b10110001001001101110101))))
(let ((.def_120 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_119)))
(let ((.def_124 (fp.add RNE .def_120 .def_123)))
(let ((.def_129 (fp.add RNE .def_124 .def_128)))
(let ((.def_134 (fp.add RNE .def_129 .def_133)))
(let ((.def_138 (fp.add RNE .def_134 .def_137)))
(let ((.def_143 (fp.add RNE .def_138 .def_142)))
(let ((.def_145 (fp.add RNE .def_143 .def_144)))
(let ((.def_146 (fp.leq (fp #b1 #b01111110 #b11001101110100101111001) .def_145)))
.def_146))))))))))))))))
(assert (let ((.def_179 (fp.mul RNE x6 (fp #b1 #b01111100 #b10111010010111100011011))))
(let ((.def_174 (fp.mul RNE x5 (fp #b0 #b01111110 #b00010010111100011010101))))
(let ((.def_170 (fp.mul RNE x4 (fp #b1 #b01111110 #b11110110110010001011010))))
(let ((.def_165 (fp.mul RNE x3 (fp #b1 #b01111101 #b11010111000010100011111))))
(let ((.def_160 (fp.mul RNE x2 (fp #b0 #b01111011 #b01000011100101011000001))))
(let ((.def_156 (fp.mul RNE x1 (fp #b1 #b01111101 #b10111110011101101100100))))
(let ((.def_151 (fp.mul RNE x0 (fp #b0 #b01111110 #b11100001110010101100000))))
(let ((.def_152 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_151)))
(let ((.def_157 (fp.add RNE .def_152 .def_156)))
(let ((.def_161 (fp.add RNE .def_157 .def_160)))
(let ((.def_166 (fp.add RNE .def_161 .def_165)))
(let ((.def_171 (fp.add RNE .def_166 .def_170)))
(let ((.def_175 (fp.add RNE .def_171 .def_174)))
(let ((.def_180 (fp.add RNE .def_175 .def_179)))
(let ((.def_181 (fp.leq .def_180 (fp #b0 #b01111110 #b10110101001111110111110))))
.def_181))))))))))))))))
(assert (let ((.def_214 (fp.mul RNE x6 (fp #b1 #b01111110 #b11100000010000011000101))))
(let ((.def_209 (fp.mul RNE x5 (fp #b1 #b01111110 #b00100000010000011000101))))
(let ((.def_204 (fp.mul RNE x4 (fp #b1 #b01111100 #b11010111000010100011111))))
(let ((.def_199 (fp.mul RNE x3 (fp #b1 #b01111100 #b01111010111000010100100))))
(let ((.def_194 (fp.mul RNE x2 (fp #b0 #b01111110 #b00111011111001110110110))))
(let ((.def_190 (fp.mul RNE x1 (fp #b0 #b01111110 #b01010010111100011010101))))
(let ((.def_186 (fp.mul RNE x0 (fp #b0 #b01111110 #b01000111101011100001010))))
(let ((.def_187 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_186)))
(let ((.def_191 (fp.add RNE .def_187 .def_190)))
(let ((.def_195 (fp.add RNE .def_191 .def_194)))
(let ((.def_200 (fp.add RNE .def_195 .def_199)))
(let ((.def_205 (fp.add RNE .def_200 .def_204)))
(let ((.def_210 (fp.add RNE .def_205 .def_209)))
(let ((.def_215 (fp.add RNE .def_210 .def_214)))
(let ((.def_216 (fp.leq .def_215 (fp #b0 #b01111110 #b11110000101000111101100))))
.def_216))))))))))))))))
(assert (let ((.def_244 (fp.mul RNE x6 (fp #b1 #b01111110 #b00011110101110000101001))))
(let ((.def_239 (fp.mul RNE x5 (fp #b0 #b01111110 #b01101110100101111000111))))
(let ((.def_235 (fp.mul RNE x4 (fp #b0 #b01111110 #b01101010011111101111101))))
(let ((.def_231 (fp.mul RNE x3 (fp #b0 #b01111110 #b11000010100011110101110))))
(let ((.def_227 (fp.mul RNE x2 (fp #b0 #b01111011 #b11011111001110110110010))))
(let ((.def_223 (fp.mul RNE x1 (fp #b1 #b01111110 #b11100000010000011000101))))
(let ((.def_221 (fp.mul RNE x0 (fp #b0 #b01111110 #b00111010010111100011011))))
(let ((.def_222 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_221)))
(let ((.def_224 (fp.add RNE .def_222 .def_223)))
(let ((.def_228 (fp.add RNE .def_224 .def_227)))
(let ((.def_232 (fp.add RNE .def_228 .def_231)))
(let ((.def_236 (fp.add RNE .def_232 .def_235)))
(let ((.def_240 (fp.add RNE .def_236 .def_239)))
(let ((.def_245 (fp.add RNE .def_240 .def_244)))
(let ((.def_246 (fp.leq .def_245 (fp #b0 #b01111110 #b00000000100000110001001))))
.def_246))))))))))))))))
(assert (let ((.def_276 (fp.mul RNE x6 (fp #b1 #b01111010 #b11010010111100011010101))))
(let ((.def_273 (fp.mul RNE x5 (fp #b0 #b01111110 #b00010001011010000111001))))
(let ((.def_269 (fp.mul RNE x4 (fp #b1 #b01111001 #b10111010010111100011011))))
(let ((.def_264 (fp.mul RNE x3 (fp #b0 #b01111101 #b11000001100010010011100))))
(let ((.def_260 (fp.mul RNE x2 (fp #b0 #b01111110 #b00111010010111100011011))))
(let ((.def_258 (fp.mul RNE x1 (fp #b1 #b01111011 #b01010011111101111100111))))
(let ((.def_253 (fp.mul RNE x0 (fp #b1 #b01111101 #b01011011001000101101000))))
(let ((.def_254 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_253)))
(let ((.def_259 (fp.add RNE .def_254 .def_258)))
(let ((.def_261 (fp.add RNE .def_259 .def_260)))
(let ((.def_265 (fp.add RNE .def_261 .def_264)))
(let ((.def_270 (fp.add RNE .def_265 .def_269)))
(let ((.def_274 (fp.add RNE .def_270 .def_273)))
(let ((.def_277 (fp.add RNE .def_274 .def_276)))
(let ((.def_278 (fp.leq (fp #b1 #b01111010 #b01000111101011100001010) .def_277)))
.def_278))))))))))))))))
(assert (let ((.def_310 (fp.mul RNE x6 (fp #b0 #b01111110 #b11001000001100010010011))))
(let ((.def_306 (fp.mul RNE x5 (fp #b0 #b01111110 #b10101101100100010110100))))
(let ((.def_302 (fp.mul RNE x4 (fp #b1 #b01111110 #b00001011010000111001011))))
(let ((.def_297 (fp.mul RNE x3 (fp #b1 #b01111110 #b11001100010010011011101))))
(let ((.def_292 (fp.mul RNE x2 (fp #b1 #b01111110 #b10100101011000000100001))))
(let ((.def_287 (fp.mul RNE x1 (fp #b1 #b01111110 #b01101110100101111000111))))
(let ((.def_284 (fp.mul RNE x0 (fp #b0 #b01111110 #b11100101011000000100001))))
(let ((.def_285 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_284)))
(let ((.def_288 (fp.add RNE .def_285 .def_287)))
(let ((.def_293 (fp.add RNE .def_288 .def_292)))
(let ((.def_298 (fp.add RNE .def_293 .def_297)))
(let ((.def_303 (fp.add RNE .def_298 .def_302)))
(let ((.def_307 (fp.add RNE .def_303 .def_306)))
(let ((.def_311 (fp.add RNE .def_307 .def_310)))
(let ((.def_312 (fp.leq (fp #b1 #b01111101 #b11011001000101101000100) .def_311)))
.def_312))))))))))))))))
(assert (let ((.def_345 (fp.mul RNE x6 (fp #b1 #b01111101 #b01000010100011110101110))))
(let ((.def_340 (fp.mul RNE x5 (fp #b0 #b01111110 #b11101111000110101010000))))
(let ((.def_336 (fp.mul RNE x4 (fp #b0 #b01111101 #b01111011111001110110110))))
(let ((.def_332 (fp.mul RNE x3 (fp #b1 #b01111100 #b01100000010000011000101))))
(let ((.def_327 (fp.mul RNE x2 (fp #b0 #b01111101 #b01110111110011101101101))))
(let ((.def_323 (fp.mul RNE x1 (fp #b0 #b01111110 #b01110001101010011111110))))
(let ((.def_319 (fp.mul RNE x0 (fp #b1 #b01111110 #b00110011101101100100011))))
(let ((.def_320 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_319)))
(let ((.def_324 (fp.add RNE .def_320 .def_323)))
(let ((.def_328 (fp.add RNE .def_324 .def_327)))
(let ((.def_333 (fp.add RNE .def_328 .def_332)))
(let ((.def_337 (fp.add RNE .def_333 .def_336)))
(let ((.def_341 (fp.add RNE .def_337 .def_340)))
(let ((.def_346 (fp.add RNE .def_341 .def_345)))
(let ((.def_347 (fp.leq (fp #b1 #b01111100 #b01110110110010001011010) .def_346)))
.def_347))))))))))))))))
(assert (let ((.def_375 (fp.mul RNE x6 (fp #b0 #b01111100 #b00000110001001001101111))))
(let ((.def_371 (fp.mul RNE x5 (fp #b1 #b01111101 #b11010001111010111000011))))
(let ((.def_366 (fp.mul RNE x4 (fp #b0 #b01111110 #b11001100010010011011101))))
(let ((.def_364 (fp.mul RNE x3 (fp #b0 #b01111110 #b00000101101000011100101))))
(let ((.def_360 (fp.mul RNE x2 (fp #b0 #b01111110 #b10111110111110011101110))))
(let ((.def_356 (fp.mul RNE x1 (fp #b0 #b01111101 #b11010111000010100011111))))
(let ((.def_354 (fp.mul RNE x0 (fp #b1 #b01111101 #b10001001001101110100110))))
(let ((.def_355 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_354)))
(let ((.def_357 (fp.add RNE .def_355 .def_356)))
(let ((.def_361 (fp.add RNE .def_357 .def_360)))
(let ((.def_365 (fp.add RNE .def_361 .def_364)))
(let ((.def_367 (fp.add RNE .def_365 .def_366)))
(let ((.def_372 (fp.add RNE .def_367 .def_371)))
(let ((.def_376 (fp.add RNE .def_372 .def_375)))
(let ((.def_377 (fp.leq (fp #b1 #b01111110 #b11011101001011110001101) .def_376)))
.def_377))))))))))))))))
(assert (let ((.def_409 (fp.mul RNE x6 (fp #b0 #b01111110 #b00010110100001110010110))))
(let ((.def_405 (fp.mul RNE x5 (fp #b1 #b01111101 #b11110001101010011111110))))
(let ((.def_400 (fp.mul RNE x4 (fp #b0 #b01111101 #b10000001000001100010010))))
(let ((.def_396 (fp.mul RNE x3 (fp #b1 #b01111110 #b00101111100111011011001))))
(let ((.def_391 (fp.mul RNE x2 (fp #b1 #b01111110 #b01110010001011010000111))))
(let ((.def_386 (fp.mul RNE x1 (fp #b0 #b01111010 #b00111111011111001110111))))
(let ((.def_382 (fp.mul RNE x0 (fp #b0 #b01111110 #b01001110010101100000010))))
(let ((.def_383 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_382)))
(let ((.def_387 (fp.add RNE .def_383 .def_386)))
(let ((.def_392 (fp.add RNE .def_387 .def_391)))
(let ((.def_397 (fp.add RNE .def_392 .def_396)))
(let ((.def_401 (fp.add RNE .def_397 .def_400)))
(let ((.def_406 (fp.add RNE .def_401 .def_405)))
(let ((.def_410 (fp.add RNE .def_406 .def_409)))
(let ((.def_411 (fp.leq .def_410 (fp #b0 #b01111110 #b10101100100010110100010))))
.def_411))))))))))))))))
(assert (let ((.def_446 (fp.mul RNE x6 (fp #b0 #b01111110 #b10010110000001000001100))))
(let ((.def_442 (fp.mul RNE x5 (fp #b0 #b01111010 #b11100011010100111111100))))
(let ((.def_438 (fp.mul RNE x4 (fp #b1 #b01111101 #b11111101111100111011011))))
(let ((.def_433 (fp.mul RNE x3 (fp #b1 #b01111110 #b00101010011111101111101))))
(let ((.def_428 (fp.mul RNE x2 (fp #b1 #b01111101 #b00111001010110000001000))))
(let ((.def_423 (fp.mul RNE x1 (fp #b1 #b01111110 #b10001001101110100101111))))
(let ((.def_418 (fp.mul RNE x0 (fp #b1 #b01111100 #b11111101111100111011011))))
(let ((.def_419 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_418)))
(let ((.def_424 (fp.add RNE .def_419 .def_423)))
(let ((.def_429 (fp.add RNE .def_424 .def_428)))
(let ((.def_434 (fp.add RNE .def_429 .def_433)))
(let ((.def_439 (fp.add RNE .def_434 .def_438)))
(let ((.def_443 (fp.add RNE .def_439 .def_442)))
(let ((.def_447 (fp.add RNE .def_443 .def_446)))
(let ((.def_448 (fp.leq (fp #b1 #b01111101 #b10001111010111000010100) .def_447)))
.def_448))))))))))))))))
(check-sat)
