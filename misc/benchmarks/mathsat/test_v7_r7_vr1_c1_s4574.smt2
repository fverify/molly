(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(declare-fun x5 () (_ FloatingPoint 8 24))
(declare-fun x6 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_36 (fp.leq x5 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_35 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x5)))
(let ((.def_37 (and .def_35 .def_36)))
.def_37))))
(assert (let ((.def_40 (fp.leq x6 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_39 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x6)))
(let ((.def_41 (and .def_39 .def_40)))
.def_41))))
(assert (let ((.def_80 (fp.mul RNE x6 (fp #b0 #b01111101 #b11010001111010111000011))))
(let ((.def_76 (fp.mul RNE x5 (fp #b1 #b01111101 #b01100101011000000100001))))
(let ((.def_71 (fp.mul RNE x4 (fp #b1 #b01111110 #b10101001011110001101010))))
(let ((.def_66 (fp.mul RNE x3 (fp #b0 #b01111101 #b00000000000000000000000))))
(let ((.def_62 (fp.mul RNE x2 (fp #b1 #b01111110 #b10001111110111110011110))))
(let ((.def_57 (fp.mul RNE x1 (fp #b1 #b01111110 #b00100100010110100001110))))
(let ((.def_52 (fp.mul RNE x0 (fp #b1 #b01111110 #b00101101000011100101011))))
(let ((.def_53 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_52)))
(let ((.def_58 (fp.add RNE .def_53 .def_57)))
(let ((.def_63 (fp.add RNE .def_58 .def_62)))
(let ((.def_67 (fp.add RNE .def_63 .def_66)))
(let ((.def_72 (fp.add RNE .def_67 .def_71)))
(let ((.def_77 (fp.add RNE .def_72 .def_76)))
(let ((.def_81 (fp.add RNE .def_77 .def_80)))
(let ((.def_82 (fp.leq (fp #b1 #b01111110 #b00101000011100101011000) .def_81)))
.def_82))))))))))))))))
(assert (let ((.def_115 (fp.mul RNE x6 (fp #b0 #b01111101 #b00111011011001000101101))))
(let ((.def_111 (fp.mul RNE x5 (fp #b1 #b01111101 #b01110001101010011111110))))
(let ((.def_106 (fp.mul RNE x4 (fp #b0 #b01111010 #b01110000101000111101100))))
(let ((.def_102 (fp.mul RNE x3 (fp #b0 #b01111101 #b11011011001000101101000))))
(let ((.def_98 (fp.mul RNE x2 (fp #b1 #b01111011 #b00001010001111010111000))))
(let ((.def_93 (fp.mul RNE x1 (fp #b1 #b01111110 #b10110000101000111101100))))
(let ((.def_88 (fp.mul RNE x0 (fp #b1 #b01111000 #b01000111101011100001010))))
(let ((.def_89 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_88)))
(let ((.def_94 (fp.add RNE .def_89 .def_93)))
(let ((.def_99 (fp.add RNE .def_94 .def_98)))
(let ((.def_103 (fp.add RNE .def_99 .def_102)))
(let ((.def_107 (fp.add RNE .def_103 .def_106)))
(let ((.def_112 (fp.add RNE .def_107 .def_111)))
(let ((.def_116 (fp.add RNE .def_112 .def_115)))
(let ((.def_117 (fp.leq (fp #b0 #b01111101 #b10101110000101000111101) .def_116)))
.def_117))))))))))))))))
(assert (let ((.def_149 (fp.mul RNE x6 (fp #b1 #b01111110 #b01100101011000000100001))))
(let ((.def_144 (fp.mul RNE x5 (fp #b1 #b01111101 #b11001101110100101111001))))
(let ((.def_139 (fp.mul RNE x4 (fp #b0 #b01111101 #b01001101110100101111001))))
(let ((.def_135 (fp.mul RNE x3 (fp #b0 #b01111011 #b00101011000000100000110))))
(let ((.def_131 (fp.mul RNE x2 (fp #b0 #b01111101 #b00011010100111111011111))))
(let ((.def_127 (fp.mul RNE x1 (fp #b0 #b01111101 #b10111110011101101100100))))
(let ((.def_123 (fp.mul RNE x0 (fp #b0 #b01111011 #b10011101101100100010111))))
(let ((.def_124 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_123)))
(let ((.def_128 (fp.add RNE .def_124 .def_127)))
(let ((.def_132 (fp.add RNE .def_128 .def_131)))
(let ((.def_136 (fp.add RNE .def_132 .def_135)))
(let ((.def_140 (fp.add RNE .def_136 .def_139)))
(let ((.def_145 (fp.add RNE .def_140 .def_144)))
(let ((.def_150 (fp.add RNE .def_145 .def_149)))
(let ((.def_151 (fp.leq .def_150 (fp #b1 #b01111110 #b01010001111010111000011))))
.def_151))))))))))))))))
(assert (let ((.def_187 (fp.mul RNE x6 (fp #b1 #b01111101 #b10010001011010000111001))))
(let ((.def_182 (fp.mul RNE x5 (fp #b1 #b01111011 #b11100011010100111111100))))
(let ((.def_177 (fp.mul RNE x4 (fp #b1 #b01111110 #b10011000100100110111010))))
(let ((.def_172 (fp.mul RNE x3 (fp #b0 #b01111001 #b11111011111001110110110))))
(let ((.def_168 (fp.mul RNE x2 (fp #b1 #b01111110 #b01001100010010011011101))))
(let ((.def_163 (fp.mul RNE x1 (fp #b1 #b01111110 #b11101010011111101111101))))
(let ((.def_158 (fp.mul RNE x0 (fp #b1 #b01111110 #b10100111111011111001111))))
(let ((.def_159 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_158)))
(let ((.def_164 (fp.add RNE .def_159 .def_163)))
(let ((.def_169 (fp.add RNE .def_164 .def_168)))
(let ((.def_173 (fp.add RNE .def_169 .def_172)))
(let ((.def_178 (fp.add RNE .def_173 .def_177)))
(let ((.def_183 (fp.add RNE .def_178 .def_182)))
(let ((.def_188 (fp.add RNE .def_183 .def_187)))
(let ((.def_189 (fp.leq .def_188 (fp #b1 #b01111101 #b00010100011110101110001))))
.def_189))))))))))))))))
(assert (let ((.def_220 (fp.mul RNE x6 (fp #b0 #b01111011 #b11101111100111011011001))))
(let ((.def_216 (fp.mul RNE x5 (fp #b1 #b01111110 #b00000000100000110001001))))
(let ((.def_211 (fp.mul RNE x4 (fp #b0 #b01111110 #b00100001010001111010111))))
(let ((.def_207 (fp.mul RNE x3 (fp #b0 #b01111110 #b01011100101011000000100))))
(let ((.def_203 (fp.mul RNE x2 (fp #b1 #b01111101 #b01000010100011110101110))))
(let ((.def_198 (fp.mul RNE x1 (fp #b0 #b01111101 #b00110101001111110111110))))
(let ((.def_194 (fp.mul RNE x0 (fp #b0 #b01111110 #b10111001010110000001000))))
(let ((.def_195 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_194)))
(let ((.def_199 (fp.add RNE .def_195 .def_198)))
(let ((.def_204 (fp.add RNE .def_199 .def_203)))
(let ((.def_208 (fp.add RNE .def_204 .def_207)))
(let ((.def_212 (fp.add RNE .def_208 .def_211)))
(let ((.def_217 (fp.add RNE .def_212 .def_216)))
(let ((.def_221 (fp.add RNE .def_217 .def_220)))
(let ((.def_222 (fp.leq (fp #b0 #b01111110 #b10101101100100010110100) .def_221)))
.def_222))))))))))))))))
(assert (let ((.def_254 (fp.mul RNE x6 (fp #b1 #b01111110 #b11110011101101100100011))))
(let ((.def_249 (fp.mul RNE x5 (fp #b0 #b01111011 #b00100110111010010111100))))
(let ((.def_245 (fp.mul RNE x4 (fp #b0 #b01111101 #b10010001011010000111001))))
(let ((.def_243 (fp.mul RNE x3 (fp #b1 #b01111100 #b10110000001000001100010))))
(let ((.def_238 (fp.mul RNE x2 (fp #b1 #b01111110 #b01000110101001111111000))))
(let ((.def_233 (fp.mul RNE x1 (fp #b1 #b01111101 #b11101110100101111000111))))
(let ((.def_228 (fp.mul RNE x0 (fp #b0 #b01110111 #b11001010110000001000010))))
(let ((.def_229 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_228)))
(let ((.def_234 (fp.add RNE .def_229 .def_233)))
(let ((.def_239 (fp.add RNE .def_234 .def_238)))
(let ((.def_244 (fp.add RNE .def_239 .def_243)))
(let ((.def_246 (fp.add RNE .def_244 .def_245)))
(let ((.def_250 (fp.add RNE .def_246 .def_249)))
(let ((.def_255 (fp.add RNE .def_250 .def_254)))
(let ((.def_256 (fp.leq (fp #b1 #b01111110 #b00101100000010000011001) .def_255)))
.def_256))))))))))))))))
(assert (let ((.def_288 (fp.mul RNE x6 (fp #b0 #b01111110 #b10011011101001011110010))))
(let ((.def_284 (fp.mul RNE x5 (fp #b0 #b01111110 #b01111010010111100011011))))
(let ((.def_280 (fp.mul RNE x4 (fp #b0 #b01111110 #b01110111010010111100011))))
(let ((.def_276 (fp.mul RNE x3 (fp #b1 #b01111110 #b10111100111011011001001))))
(let ((.def_271 (fp.mul RNE x2 (fp #b0 #b01111101 #b01000000100000110001001))))
(let ((.def_267 (fp.mul RNE x1 (fp #b0 #b01111101 #b01010001111010111000011))))
(let ((.def_263 (fp.mul RNE x0 (fp #b1 #b01111101 #b01011001000101101000100))))
(let ((.def_264 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_263)))
(let ((.def_268 (fp.add RNE .def_264 .def_267)))
(let ((.def_272 (fp.add RNE .def_268 .def_271)))
(let ((.def_277 (fp.add RNE .def_272 .def_276)))
(let ((.def_281 (fp.add RNE .def_277 .def_280)))
(let ((.def_285 (fp.add RNE .def_281 .def_284)))
(let ((.def_289 (fp.add RNE .def_285 .def_288)))
(let ((.def_290 (fp.leq (fp #b1 #b01111011 #b00000010000011000100101) .def_289)))
.def_290))))))))))))))))
(check-sat)
