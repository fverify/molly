(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b01111111 #b00000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b01111111 #b00000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_58 (fp.mul RNE (fp #b0 #b00000000 #b00000000000000000000000) x4)))
(let ((.def_56 (fp.mul RNE x3 (fp #b1 #b01111100 #b00011000100100110111010))))
(let ((.def_51 (fp.mul RNE x2 (fp #b0 #b01111110 #b10010011011101001011110))))
(let ((.def_47 (fp.mul RNE x1 (fp #b1 #b01111110 #b00011101001011110001101))))
(let ((.def_42 (fp.mul RNE x0 (fp #b0 #b01111100 #b11001110110110010001011))))
(let ((.def_43 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_42)))
(let ((.def_48 (fp.add RNE .def_43 .def_47)))
(let ((.def_52 (fp.add RNE .def_48 .def_51)))
(let ((.def_57 (fp.add RNE .def_52 .def_56)))
(let ((.def_59 (fp.add RNE .def_57 .def_58)))
(let ((.def_60 (fp.leq (fp #b0 #b01111100 #b00011100101011000000100) .def_59)))
.def_60))))))))))))
(assert (let ((.def_86 (fp.mul RNE x4 (fp #b1 #b01111110 #b11010100111111011111010))))
(let ((.def_81 (fp.mul RNE x3 (fp #b1 #b01111110 #b01011000000100000110001))))
(let ((.def_76 (fp.mul RNE x2 (fp #b1 #b01111011 #b01101000011100101011000))))
(let ((.def_71 (fp.mul RNE x1 (fp #b1 #b01111110 #b10110111010010111100011))))
(let ((.def_66 (fp.mul RNE x0 (fp #b1 #b01111110 #b11101100100010110100010))))
(let ((.def_67 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_66)))
(let ((.def_72 (fp.add RNE .def_67 .def_71)))
(let ((.def_77 (fp.add RNE .def_72 .def_76)))
(let ((.def_82 (fp.add RNE .def_77 .def_81)))
(let ((.def_87 (fp.add RNE .def_82 .def_86)))
(let ((.def_88 (fp.leq (fp #b0 #b01111101 #b11111101111100111011011) .def_87)))
.def_88))))))))))))
(assert (let ((.def_110 (fp.mul RNE x4 (fp #b1 #b01111011 #b01101000011100101011000))))
(let ((.def_108 (fp.mul RNE x3 (fp #b0 #b01111101 #b10000011000100100110111))))
(let ((.def_104 (fp.mul RNE x2 (fp #b0 #b01111101 #b10010011011101001011110))))
(let ((.def_100 (fp.mul RNE x1 (fp #b1 #b01111100 #b10111110011101101100100))))
(let ((.def_95 (fp.mul RNE x0 (fp #b1 #b01111110 #b00011000100100110111010))))
(let ((.def_96 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_95)))
(let ((.def_101 (fp.add RNE .def_96 .def_100)))
(let ((.def_105 (fp.add RNE .def_101 .def_104)))
(let ((.def_109 (fp.add RNE .def_105 .def_108)))
(let ((.def_111 (fp.add RNE .def_109 .def_110)))
(let ((.def_112 (fp.leq .def_111 (fp #b1 #b01111110 #b01010111000010100011111))))
.def_112))))))))))))
(assert (let ((.def_136 (fp.mul RNE x4 (fp #b1 #b01111100 #b01101010011111101111101))))
(let ((.def_131 (fp.mul RNE x3 (fp #b0 #b01111100 #b00101011000000100000110))))
(let ((.def_127 (fp.mul RNE x2 (fp #b0 #b01111101 #b00011101101100100010111))))
(let ((.def_123 (fp.mul RNE x1 (fp #b1 #b01111110 #b00101010011111101111101))))
(let ((.def_118 (fp.mul RNE x0 (fp #b1 #b01111101 #b10110110010001011010001))))
(let ((.def_119 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_118)))
(let ((.def_124 (fp.add RNE .def_119 .def_123)))
(let ((.def_128 (fp.add RNE .def_124 .def_127)))
(let ((.def_132 (fp.add RNE .def_128 .def_131)))
(let ((.def_137 (fp.add RNE .def_132 .def_136)))
(let ((.def_138 (fp.leq (fp #b0 #b01111110 #b00010110100001110010110) .def_137)))
.def_138))))))))))))
(assert (let ((.def_164 (fp.mul RNE x4 (fp #b1 #b01111110 #b10000011000100100110111))))
(let ((.def_159 (fp.mul RNE x3 (fp #b1 #b01111101 #b00100111111011111001111))))
(let ((.def_154 (fp.mul RNE x2 (fp #b0 #b01111110 #b11111001110110110010001))))
(let ((.def_150 (fp.mul RNE x1 (fp #b1 #b01111110 #b11011001100110011001101))))
(let ((.def_145 (fp.mul RNE x0 (fp #b1 #b01111110 #b11110011001100110011010))))
(let ((.def_146 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_145)))
(let ((.def_151 (fp.add RNE .def_146 .def_150)))
(let ((.def_155 (fp.add RNE .def_151 .def_154)))
(let ((.def_160 (fp.add RNE .def_155 .def_159)))
(let ((.def_165 (fp.add RNE .def_160 .def_164)))
(let ((.def_166 (fp.leq (fp #b1 #b01111100 #b01011010000111001010110) .def_165)))
.def_166))))))))))))
(assert (let ((.def_188 (fp.mul RNE x4 (fp #b0 #b01111110 #b00011110101110000101001))))
(let ((.def_184 (fp.mul RNE x3 (fp #b0 #b01111110 #b00111110111110011101110))))
(let ((.def_180 (fp.mul RNE x2 (fp #b0 #b01111110 #b11000110001001001101111))))
(let ((.def_176 (fp.mul RNE x1 (fp #b0 #b01111101 #b01010001111010111000011))))
(let ((.def_172 (fp.mul RNE x0 (fp #b0 #b01111101 #b10000111001010110000001))))
(let ((.def_173 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_172)))
(let ((.def_177 (fp.add RNE .def_173 .def_176)))
(let ((.def_181 (fp.add RNE .def_177 .def_180)))
(let ((.def_185 (fp.add RNE .def_181 .def_184)))
(let ((.def_189 (fp.add RNE .def_185 .def_188)))
(let ((.def_190 (fp.leq .def_189 (fp #b1 #b01111110 #b01001111110111110011110))))
.def_190))))))))))))
(assert (let ((.def_214 (fp.mul RNE x4 (fp #b1 #b01111101 #b01100100010110100001110))))
(let ((.def_209 (fp.mul RNE x3 (fp #b0 #b01111110 #b11010000011000100100111))))
(let ((.def_205 (fp.mul RNE x2 (fp #b1 #b01111110 #b00110110010001011010001))))
(let ((.def_200 (fp.mul RNE x1 (fp #b1 #b01111011 #b01010011111101111100111))))
(let ((.def_195 (fp.mul RNE x0 (fp #b0 #b01111110 #b00000011000100100110111))))
(let ((.def_196 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_195)))
(let ((.def_201 (fp.add RNE .def_196 .def_200)))
(let ((.def_206 (fp.add RNE .def_201 .def_205)))
(let ((.def_210 (fp.add RNE .def_206 .def_209)))
(let ((.def_215 (fp.add RNE .def_210 .def_214)))
(let ((.def_216 (fp.leq .def_215 (fp #b0 #b01111110 #b10011011001000101101000))))
.def_216))))))))))))
(assert (let ((.def_241 (fp.mul RNE x4 (fp #b1 #b01111101 #b11011110001101010100000))))
(let ((.def_236 (fp.mul RNE x3 (fp #b1 #b01111110 #b00110011101101100100011))))
(let ((.def_231 (fp.mul RNE x2 (fp #b0 #b01111101 #b11001011110001101010100))))
(let ((.def_227 (fp.mul RNE x1 (fp #b1 #b01111011 #b10010101100000010000011))))
(let ((.def_222 (fp.mul RNE x0 (fp #b1 #b01111011 #b10100001110010101100000))))
(let ((.def_223 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_222)))
(let ((.def_228 (fp.add RNE .def_223 .def_227)))
(let ((.def_232 (fp.add RNE .def_228 .def_231)))
(let ((.def_237 (fp.add RNE .def_232 .def_236)))
(let ((.def_242 (fp.add RNE .def_237 .def_241)))
(let ((.def_243 (fp.leq .def_242 (fp #b0 #b01111110 #b00100110011001100110011))))
.def_243))))))))))))
(assert (let ((.def_265 (fp.mul RNE x4 (fp #b1 #b01111110 #b00010011111101111100111))))
(let ((.def_260 (fp.mul RNE x3 (fp #b0 #b01111110 #b01110010001011010000111))))
(let ((.def_256 (fp.mul RNE x2 (fp #b0 #b01111100 #b01100100010110100001110))))
(let ((.def_252 (fp.mul RNE x1 (fp #b0 #b01111101 #b01010110000001000001100))))
(let ((.def_248 (fp.mul RNE x0 (fp #b0 #b01111110 #b11100010110100001110011))))
(let ((.def_249 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_248)))
(let ((.def_253 (fp.add RNE .def_249 .def_252)))
(let ((.def_257 (fp.add RNE .def_253 .def_256)))
(let ((.def_261 (fp.add RNE .def_257 .def_260)))
(let ((.def_266 (fp.add RNE .def_261 .def_265)))
(let ((.def_267 (fp.leq .def_266 (fp #b0 #b01111100 #b10010101100000010000011))))
.def_267))))))))))))
(assert (let ((.def_292 (fp.mul RNE x4 (fp #b0 #b01111110 #b11110101001111110111110))))
(let ((.def_288 (fp.mul RNE x3 (fp #b0 #b01111110 #b10000011100101011000001))))
(let ((.def_284 (fp.mul RNE x2 (fp #b1 #b01111110 #b01001001001101110100110))))
(let ((.def_279 (fp.mul RNE x1 (fp #b1 #b01111110 #b00101111100111011011001))))
(let ((.def_274 (fp.mul RNE x0 (fp #b1 #b01111101 #b01110000101000111101100))))
(let ((.def_275 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_274)))
(let ((.def_280 (fp.add RNE .def_275 .def_279)))
(let ((.def_285 (fp.add RNE .def_280 .def_284)))
(let ((.def_289 (fp.add RNE .def_285 .def_288)))
(let ((.def_293 (fp.add RNE .def_289 .def_292)))
(let ((.def_294 (fp.leq .def_293 (fp #b1 #b01111001 #b01011000000100000110001))))
.def_294))))))))))))
(assert (let ((.def_318 (fp.mul RNE x4 (fp #b0 #b01111110 #b11000100100110111010011))))
(let ((.def_314 (fp.mul RNE x3 (fp #b1 #b01111100 #b10011001100110011001101))))
(let ((.def_309 (fp.mul RNE x2 (fp #b0 #b01111110 #b00000101000111101011100))))
(let ((.def_305 (fp.mul RNE x1 (fp #b1 #b01111110 #b00010110000001000001100))))
(let ((.def_300 (fp.mul RNE x0 (fp #b1 #b01111110 #b10111000010100011110110))))
(let ((.def_301 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_300)))
(let ((.def_306 (fp.add RNE .def_301 .def_305)))
(let ((.def_310 (fp.add RNE .def_306 .def_309)))
(let ((.def_315 (fp.add RNE .def_310 .def_314)))
(let ((.def_319 (fp.add RNE .def_315 .def_318)))
(let ((.def_320 (fp.leq .def_319 (fp #b0 #b01111101 #b10110100001110010101100))))
.def_320))))))))))))
(assert (let ((.def_343 (fp.mul RNE x4 (fp #b1 #b01111100 #b01101000011100101011000))))
(let ((.def_338 (fp.mul RNE x3 (fp #b1 #b01111011 #b11100011010100111111100))))
(let ((.def_333 (fp.mul RNE x2 (fp #b0 #b01111110 #b10111110011101101100100))))
(let ((.def_329 (fp.mul RNE x1 (fp #b0 #b01111110 #b00010000011000100100111))))
(let ((.def_325 (fp.mul RNE x0 (fp #b0 #b01111110 #b10100101111000110101010))))
(let ((.def_326 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_325)))
(let ((.def_330 (fp.add RNE .def_326 .def_329)))
(let ((.def_334 (fp.add RNE .def_330 .def_333)))
(let ((.def_339 (fp.add RNE .def_334 .def_338)))
(let ((.def_344 (fp.add RNE .def_339 .def_343)))
(let ((.def_345 (fp.leq .def_344 (fp #b0 #b01111101 #b11100111011011001000110))))
.def_345))))))))))))
(assert (let ((.def_369 (fp.mul RNE x4 (fp #b1 #b01111011 #b00101111000110101010000))))
(let ((.def_364 (fp.mul RNE x3 (fp #b0 #b01111100 #b01011100001010001111011))))
(let ((.def_360 (fp.mul RNE x2 (fp #b1 #b01111110 #b01111100111011011001001))))
(let ((.def_355 (fp.mul RNE x1 (fp #b1 #b01111101 #b00101011000000100000110))))
(let ((.def_350 (fp.mul RNE x0 (fp #b0 #b01111110 #b11110000101000111101100))))
(let ((.def_351 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_350)))
(let ((.def_356 (fp.add RNE .def_351 .def_355)))
(let ((.def_361 (fp.add RNE .def_356 .def_360)))
(let ((.def_365 (fp.add RNE .def_361 .def_364)))
(let ((.def_370 (fp.add RNE .def_365 .def_369)))
(let ((.def_371 (fp.leq .def_370 (fp #b0 #b01111001 #b00100110111010010111100))))
.def_371))))))))))))
(assert (let ((.def_392 (fp.mul RNE x4 (fp #b0 #b01111101 #b11011111001110110110010))))
(let ((.def_388 (fp.mul RNE x3 (fp #b0 #b01111100 #b10001011010000111001011))))
(let ((.def_384 (fp.mul RNE x2 (fp #b0 #b01111110 #b11011001100110011001101))))
(let ((.def_382 (fp.mul RNE x1 (fp #b1 #b01111011 #b01110000101000111101100))))
(let ((.def_377 (fp.mul RNE x0 (fp #b1 #b01111110 #b01111010010111100011011))))
(let ((.def_378 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_377)))
(let ((.def_383 (fp.add RNE .def_378 .def_382)))
(let ((.def_385 (fp.add RNE .def_383 .def_384)))
(let ((.def_389 (fp.add RNE .def_385 .def_388)))
(let ((.def_393 (fp.add RNE .def_389 .def_392)))
(let ((.def_394 (fp.leq (fp #b0 #b01111110 #b10110000101000111101100) .def_393)))
.def_394))))))))))))
(assert (let ((.def_420 (fp.mul RNE x4 (fp #b1 #b01111100 #b11011101001011110001101))))
(let ((.def_415 (fp.mul RNE x3 (fp #b1 #b01111110 #b10111101111100111011011))))
(let ((.def_410 (fp.mul RNE x2 (fp #b1 #b01111110 #b10001101010011111110000))))
(let ((.def_405 (fp.mul RNE x1 (fp #b0 #b01111011 #b11000110101001111111000))))
(let ((.def_401 (fp.mul RNE x0 (fp #b1 #b01111001 #b00110111010010111100011))))
(let ((.def_402 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_401)))
(let ((.def_406 (fp.add RNE .def_402 .def_405)))
(let ((.def_411 (fp.add RNE .def_406 .def_410)))
(let ((.def_416 (fp.add RNE .def_411 .def_415)))
(let ((.def_421 (fp.add RNE .def_416 .def_420)))
(let ((.def_422 (fp.leq .def_421 (fp #b1 #b01111101 #b11100101011000000100001))))
.def_422))))))))))))
(check-sat)
