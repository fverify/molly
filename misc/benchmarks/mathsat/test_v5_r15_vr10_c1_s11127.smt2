(declare-fun x0 () (_ FloatingPoint 8 24))
(declare-fun x1 () (_ FloatingPoint 8 24))
(declare-fun x2 () (_ FloatingPoint 8 24))
(declare-fun x3 () (_ FloatingPoint 8 24))
(declare-fun x4 () (_ FloatingPoint 8 24))
(assert (let ((.def_16 (fp.leq x0 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_15 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x0)))
(let ((.def_17 (and .def_15 .def_16)))
.def_17))))
(assert (let ((.def_20 (fp.leq x1 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_19 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x1)))
(let ((.def_21 (and .def_19 .def_20)))
.def_21))))
(assert (let ((.def_24 (fp.leq x2 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_23 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x2)))
(let ((.def_25 (and .def_23 .def_24)))
.def_25))))
(assert (let ((.def_28 (fp.leq x3 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_27 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x3)))
(let ((.def_29 (and .def_27 .def_28)))
.def_29))))
(assert (let ((.def_32 (fp.leq x4 (fp #b0 #b10000010 #b01000000000000000000000))))
(let ((.def_31 (fp.leq (fp #b1 #b10000010 #b01000000000000000000000) x4)))
(let ((.def_33 (and .def_31 .def_32)))
.def_33))))
(assert (let ((.def_60 (fp.mul RNE x4 (fp #b1 #b01111101 #b10101111000110101010000))))
(let ((.def_55 (fp.mul RNE x3 (fp #b1 #b01111101 #b01001011110001101010100))))
(let ((.def_50 (fp.mul RNE x2 (fp #b0 #b01111110 #b11001100010010011011101))))
(let ((.def_46 (fp.mul RNE x1 (fp #b0 #b01111110 #b11111000010100011110110))))
(let ((.def_42 (fp.mul RNE x0 (fp #b0 #b01111110 #b11111110011101101100100))))
(let ((.def_43 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_42)))
(let ((.def_47 (fp.add RNE .def_43 .def_46)))
(let ((.def_51 (fp.add RNE .def_47 .def_50)))
(let ((.def_56 (fp.add RNE .def_51 .def_55)))
(let ((.def_61 (fp.add RNE .def_56 .def_60)))
(let ((.def_62 (fp.leq .def_61 (fp #b0 #b01111110 #b10100100010110100001110))))
.def_62))))))))))))
(assert (let ((.def_86 (fp.mul RNE x4 (fp #b1 #b01111110 #b10011010000111001010110))))
(let ((.def_81 (fp.mul RNE x3 (fp #b1 #b01111110 #b11100000010000011000101))))
(let ((.def_76 (fp.mul RNE x2 (fp #b1 #b01111110 #b01000100000110001001010))))
(let ((.def_71 (fp.mul RNE x1 (fp #b0 #b01111101 #b01011100001010001111011))))
(let ((.def_67 (fp.mul RNE x0 (fp #b0 #b01111110 #b00100001110010101100000))))
(let ((.def_68 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_67)))
(let ((.def_72 (fp.add RNE .def_68 .def_71)))
(let ((.def_77 (fp.add RNE .def_72 .def_76)))
(let ((.def_82 (fp.add RNE .def_77 .def_81)))
(let ((.def_87 (fp.add RNE .def_82 .def_86)))
(let ((.def_88 (fp.leq .def_87 (fp #b0 #b01111110 #b10010111000010100011111))))
.def_88))))))))))))
(assert (let ((.def_113 (fp.mul RNE x4 (fp #b0 #b01111110 #b11101001111110111110100))))
(let ((.def_109 (fp.mul RNE x3 (fp #b1 #b01111110 #b11110011101101100100011))))
(let ((.def_104 (fp.mul RNE x2 (fp #b1 #b01111110 #b00011011101001011110010))))
(let ((.def_99 (fp.mul RNE x1 (fp #b1 #b01111100 #b01110000101000111101100))))
(let ((.def_94 (fp.mul RNE x0 (fp #b0 #b01111101 #b01000001100010010011100))))
(let ((.def_95 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_94)))
(let ((.def_100 (fp.add RNE .def_95 .def_99)))
(let ((.def_105 (fp.add RNE .def_100 .def_104)))
(let ((.def_110 (fp.add RNE .def_105 .def_109)))
(let ((.def_114 (fp.add RNE .def_110 .def_113)))
(let ((.def_115 (fp.leq .def_114 (fp #b1 #b01111101 #b00111000010100011110110))))
.def_115))))))))))))
(assert (let ((.def_139 (fp.mul RNE x4 (fp #b0 #b01111101 #b00111011011001000101101))))
(let ((.def_135 (fp.mul RNE x3 (fp #b0 #b01111110 #b11100101011000000100001))))
(let ((.def_131 (fp.mul RNE x2 (fp #b1 #b01111110 #b01000011000100100110111))))
(let ((.def_126 (fp.mul RNE x1 (fp #b1 #b01111011 #b01101100100010110100010))))
(let ((.def_121 (fp.mul RNE x0 (fp #b1 #b01111101 #b00001110010101100000010))))
(let ((.def_122 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_121)))
(let ((.def_127 (fp.add RNE .def_122 .def_126)))
(let ((.def_132 (fp.add RNE .def_127 .def_131)))
(let ((.def_136 (fp.add RNE .def_132 .def_135)))
(let ((.def_140 (fp.add RNE .def_136 .def_139)))
(let ((.def_141 (fp.leq (fp #b0 #b01111110 #b01110100101111000110101) .def_140)))
.def_141))))))))))))
(assert (let ((.def_164 (fp.mul RNE x4 (fp #b1 #b01111110 #b01011111101111100111011))))
(let ((.def_159 (fp.mul RNE x3 (fp #b0 #b01111101 #b11100110011001100110011))))
(let ((.def_155 (fp.mul RNE x2 (fp #b0 #b01111110 #b01011001100110011001101))))
(let ((.def_151 (fp.mul RNE x1 (fp #b0 #b01111101 #b10111101011100001010010))))
(let ((.def_147 (fp.mul RNE x0 (fp #b1 #b01111101 #b01100010010011011101001))))
(let ((.def_148 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_147)))
(let ((.def_152 (fp.add RNE .def_148 .def_151)))
(let ((.def_156 (fp.add RNE .def_152 .def_155)))
(let ((.def_160 (fp.add RNE .def_156 .def_159)))
(let ((.def_165 (fp.add RNE .def_160 .def_164)))
(let ((.def_166 (fp.leq (fp #b0 #b01111110 #b01101111100111011011001) .def_165)))
.def_166))))))))))))
(assert (let ((.def_189 (fp.mul RNE x4 (fp #b1 #b01111000 #b00000110001001001101111))))
(let ((.def_184 (fp.mul RNE x3 (fp #b0 #b01111000 #b10001001001101110100110))))
(let ((.def_180 (fp.mul RNE x2 (fp #b0 #b01111110 #b01000101000111101011100))))
(let ((.def_176 (fp.mul RNE x1 (fp #b0 #b01111110 #b10000110001001001101111))))
(let ((.def_172 (fp.mul RNE x0 (fp #b1 #b01111101 #b11101001011110001101010))))
(let ((.def_173 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_172)))
(let ((.def_177 (fp.add RNE .def_173 .def_176)))
(let ((.def_181 (fp.add RNE .def_177 .def_180)))
(let ((.def_185 (fp.add RNE .def_181 .def_184)))
(let ((.def_190 (fp.add RNE .def_185 .def_189)))
(let ((.def_191 (fp.leq (fp #b0 #b01111101 #b00000100000110001001010) .def_190)))
.def_191))))))))))))
(assert (let ((.def_214 (fp.mul RNE x4 (fp #b1 #b01111110 #b10010100011110101110001))))
(let ((.def_209 (fp.mul RNE x3 (fp #b0 #b01111101 #b01011100001010001111011))))
(let ((.def_207 (fp.mul RNE x2 (fp #b0 #b01111101 #b11000110101001111111000))))
(let ((.def_203 (fp.mul RNE x1 (fp #b1 #b01111101 #b00111111011111001110111))))
(let ((.def_198 (fp.mul RNE x0 (fp #b1 #b01111110 #b11111101011100001010010))))
(let ((.def_199 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_198)))
(let ((.def_204 (fp.add RNE .def_199 .def_203)))
(let ((.def_208 (fp.add RNE .def_204 .def_207)))
(let ((.def_210 (fp.add RNE .def_208 .def_209)))
(let ((.def_215 (fp.add RNE .def_210 .def_214)))
(let ((.def_216 (fp.leq .def_215 (fp #b1 #b01111110 #b10010100111111011111010))))
.def_216))))))))))))
(assert (let ((.def_242 (fp.mul RNE x4 (fp #b1 #b01111100 #b11100011010100111111100))))
(let ((.def_237 (fp.mul RNE x3 (fp #b1 #b01111110 #b00110100001110010101100))))
(let ((.def_232 (fp.mul RNE x2 (fp #b1 #b01111110 #b11010110100001110010110))))
(let ((.def_227 (fp.mul RNE x1 (fp #b1 #b01111110 #b00101001011110001101010))))
(let ((.def_222 (fp.mul RNE x0 (fp #b0 #b01111110 #b00000110001001001101111))))
(let ((.def_223 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_222)))
(let ((.def_228 (fp.add RNE .def_223 .def_227)))
(let ((.def_233 (fp.add RNE .def_228 .def_232)))
(let ((.def_238 (fp.add RNE .def_233 .def_237)))
(let ((.def_243 (fp.add RNE .def_238 .def_242)))
(let ((.def_244 (fp.leq .def_243 (fp #b1 #b01111100 #b00011100101011000000100))))
.def_244))))))))))))
(assert (let ((.def_265 (fp.mul RNE x4 (fp #b1 #b01111110 #b01100110011001100110011))))
(let ((.def_260 (fp.mul RNE x3 (fp #b0 #b01111110 #b10100100010110100001110))))
(let ((.def_258 (fp.mul RNE x2 (fp #b0 #b01111110 #b11000100000110001001010))))
(let ((.def_254 (fp.mul RNE x1 (fp #b0 #b01111100 #b10101110000101000111101))))
(let ((.def_250 (fp.mul RNE x0 (fp #b1 #b01111110 #b10100101111000110101010))))
(let ((.def_251 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_250)))
(let ((.def_255 (fp.add RNE .def_251 .def_254)))
(let ((.def_259 (fp.add RNE .def_255 .def_258)))
(let ((.def_261 (fp.add RNE .def_259 .def_260)))
(let ((.def_266 (fp.add RNE .def_261 .def_265)))
(let ((.def_267 (fp.leq (fp #b0 #b01111010 #b00010110100001110010110) .def_266)))
.def_267))))))))))))
(assert (let ((.def_290 (fp.mul RNE x4 (fp #b0 #b01111110 #b11110101001111110111110))))
(let ((.def_286 (fp.mul RNE x3 (fp #b0 #b01111100 #b00011010100111111011111))))
(let ((.def_282 (fp.mul RNE x2 (fp #b1 #b01110111 #b10001001001101110100110))))
(let ((.def_277 (fp.mul RNE x1 (fp #b0 #b01111001 #b01011000000100000110001))))
(let ((.def_273 (fp.mul RNE x0 (fp #b1 #b01111110 #b00011101101100100010111))))
(let ((.def_274 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_273)))
(let ((.def_278 (fp.add RNE .def_274 .def_277)))
(let ((.def_283 (fp.add RNE .def_278 .def_282)))
(let ((.def_287 (fp.add RNE .def_283 .def_286)))
(let ((.def_291 (fp.add RNE .def_287 .def_290)))
(let ((.def_292 (fp.leq (fp #b0 #b01111110 #b11010011111101111100111) .def_291)))
.def_292))))))))))))
(assert (let ((.def_318 (fp.mul RNE x4 (fp #b1 #b01111110 #b01110101001111110111110))))
(let ((.def_313 (fp.mul RNE x3 (fp #b1 #b01111110 #b00001101110100101111001))))
(let ((.def_308 (fp.mul RNE x2 (fp #b1 #b01111011 #b00011010100111111011111))))
(let ((.def_303 (fp.mul RNE x1 (fp #b0 #b01111110 #b10000010000011000100101))))
(let ((.def_299 (fp.mul RNE x0 (fp #b1 #b01111110 #b00010010111100011010101))))
(let ((.def_300 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_299)))
(let ((.def_304 (fp.add RNE .def_300 .def_303)))
(let ((.def_309 (fp.add RNE .def_304 .def_308)))
(let ((.def_314 (fp.add RNE .def_309 .def_313)))
(let ((.def_319 (fp.add RNE .def_314 .def_318)))
(let ((.def_320 (fp.leq .def_319 (fp #b1 #b01111110 #b11010010111100011010101))))
.def_320))))))))))))
(assert (let ((.def_344 (fp.mul RNE x4 (fp #b1 #b01111110 #b10101000011100101011000))))
(let ((.def_339 (fp.mul RNE x3 (fp #b1 #b01111010 #b11110011101101100100011))))
(let ((.def_334 (fp.mul RNE x2 (fp #b0 #b01111110 #b10110111110011101101101))))
(let ((.def_330 (fp.mul RNE x1 (fp #b1 #b01111110 #b10000000100000110001001))))
(let ((.def_325 (fp.mul RNE x0 (fp #b0 #b01111110 #b01111011011001000101101))))
(let ((.def_326 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_325)))
(let ((.def_331 (fp.add RNE .def_326 .def_330)))
(let ((.def_335 (fp.add RNE .def_331 .def_334)))
(let ((.def_340 (fp.add RNE .def_335 .def_339)))
(let ((.def_345 (fp.add RNE .def_340 .def_344)))
(let ((.def_346 (fp.leq .def_345 (fp #b0 #b01111110 #b00100101011000000100001))))
.def_346))))))))))))
(assert (let ((.def_371 (fp.mul RNE x4 (fp #b0 #b01111101 #b11011100001010001111011))))
(let ((.def_367 (fp.mul RNE x3 (fp #b1 #b01111100 #b10111100011010100111111))))
(let ((.def_362 (fp.mul RNE x2 (fp #b1 #b01111110 #b01000010100011110101110))))
(let ((.def_357 (fp.mul RNE x1 (fp #b0 #b01111110 #b00001101010011111110000))))
(let ((.def_353 (fp.mul RNE x0 (fp #b1 #b01111110 #b10010111100011010101000))))
(let ((.def_354 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_353)))
(let ((.def_358 (fp.add RNE .def_354 .def_357)))
(let ((.def_363 (fp.add RNE .def_358 .def_362)))
(let ((.def_368 (fp.add RNE .def_363 .def_367)))
(let ((.def_372 (fp.add RNE .def_368 .def_371)))
(let ((.def_373 (fp.leq .def_372 (fp #b1 #b01111110 #b11110101110000101001000))))
.def_373))))))))))))
(assert (let ((.def_394 (fp.mul RNE x4 (fp #b0 #b01111101 #b11100110011001100110011))))
(let ((.def_392 (fp.mul RNE x3 (fp #b0 #b01111110 #b10001100110011001100110))))
(let ((.def_388 (fp.mul RNE x2 (fp #b0 #b01111110 #b00000011000100100110111))))
(let ((.def_384 (fp.mul RNE x1 (fp #b1 #b01111110 #b10001010110000001000010))))
(let ((.def_379 (fp.mul RNE x0 (fp #b0 #b01111100 #b00110111010010111100011))))
(let ((.def_380 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_379)))
(let ((.def_385 (fp.add RNE .def_380 .def_384)))
(let ((.def_389 (fp.add RNE .def_385 .def_388)))
(let ((.def_393 (fp.add RNE .def_389 .def_392)))
(let ((.def_395 (fp.add RNE .def_393 .def_394)))
(let ((.def_396 (fp.leq (fp #b1 #b01111101 #b10011010100111111011111) .def_395)))
.def_396))))))))))))
(assert (let ((.def_415 (fp.mul RNE x4 (fp #b1 #b01111110 #b00100110011001100110011))))
(let ((.def_410 (fp.mul RNE x3 (fp #b0 #b01111101 #b11110000101000111101100))))
(let ((.def_406 (fp.mul RNE x2 (fp #b0 #b01111110 #b10111000010100011110110))))
(let ((.def_402 (fp.mul RNE x1 (fp #b1 #b01111110 #b01001110010101100000010))))
(let ((.def_397 (fp.mul RNE x0 (fp #b0 #b01111110 #b11111000010100011110110))))
(let ((.def_398 (fp.add RNE (fp #b0 #b00000000 #b00000000000000000000000) .def_397)))
(let ((.def_403 (fp.add RNE .def_398 .def_402)))
(let ((.def_407 (fp.add RNE .def_403 .def_406)))
(let ((.def_411 (fp.add RNE .def_407 .def_410)))
(let ((.def_416 (fp.add RNE .def_411 .def_415)))
(let ((.def_417 (fp.leq (fp #b1 #b01111110 #b11111101011100001010010) .def_416)))
.def_417))))))))))))
(check-sat)
