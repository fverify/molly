(set-logic QF_FPABV)
;(declare-sort U0 0)
(declare-fun x () (_ FP 8 24))
(declare-fun y () (_ FP 8 24))
(define-fun .3 () RoundingMode roundNearestTiesToEven)
(define-fun .21 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 3.0))
(define-fun .29 () (_ FP 8 24) x)
(define-fun .30 () (_ FP 8 24) (* .3 .29 .29))
(define-fun .31 () (_ FP 8 24) (* .3 .29 .30))
(define-fun .32 () (_ FP 8 24) y)
(define-fun .33 () (_ FP 8 24) (* .3 .32 .32))
(define-fun .34 () (_ FP 8 24) (* .3 .32 .33))
(define-fun .35 () (_ FP 8 24) (+ .3 .31 .34))
(define-fun .36 () (_ FP 8 24) (* .3 .29 .32))
(define-fun .37 () (_ FP 8 24) (* .3 .21 .36))
(define-fun .38 () Bool (<= .37 .35))
(assert .38)
(define-fun .25 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.100000001490116119385))
(define-fun .39 () (_ FP 8 24) (+ .3 .30 .33))
(define-fun .40 () Bool (<= .25 .39))
(assert .40)
(define-fun .27 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 4.0))
(define-fun .28 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 1.0))
(define-fun .41 () (_ FP 8 24) (+ .3 .28 .29))
(define-fun .42 () (_ FP 8 24) (* .3 .29 .41))
(define-fun .43 () (_ FP 8 24) (+ .3 .33 .42))
(define-fun .44 () (_ FP 8 24) (* .3 .39 .43))
(define-fun .45 () (_ FP 8 24) (* .3 .27 .36))
(define-fun .46 () Bool (<= .44 .45))
(assert .46)
(define-fun .47 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 3.0)))
(define-fun .48 () Bool (<= .29 .21))
(define-fun .49 () Bool (<= .47 .29))
(define-fun .50 () Bool (and .48 .49))
(assert .50)
(define-fun .51 () Bool (<= .32 .21))
(define-fun .52 () Bool (<= .47 .32))
(define-fun .53 () Bool (and .51 .52))
(assert .53)
(check-sat)
