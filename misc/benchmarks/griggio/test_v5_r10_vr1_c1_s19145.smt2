(set-logic QF_FPABV)
(declare-fun x0 () (_ FP 8 24))
(declare-fun x1 () (_ FP 8 24))
(declare-fun x2 () (_ FP 8 24))
(declare-fun x3 () (_ FP 8 24))
(declare-fun x4 () (_ FP 8 24))
(define-fun .10 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 1.0))
(define-fun .13 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 1.0)))
(define-fun .14 () (_ FP 8 24) x0)
(define-fun .15 () Bool (<= .13 .14))
(define-fun .16 () Bool (<= .14 .10))
(define-fun .17 () Bool (and .15 .16))
(assert .17)
(define-fun .18 () (_ FP 8 24) x1)
(define-fun .19 () Bool (<= .13 .18))
(define-fun .20 () Bool (<= .18 .10))
(define-fun .21 () Bool (and .19 .20))
(assert .21)
(define-fun .22 () (_ FP 8 24) x2)
(define-fun .23 () Bool (<= .13 .22))
(define-fun .24 () Bool (<= .22 .10))
(define-fun .25 () Bool (and .23 .24))
(assert .25)
(define-fun .26 () (_ FP 8 24) x3)
(define-fun .27 () Bool (<= .13 .26))
(define-fun .28 () Bool (<= .26 .10))
(define-fun .29 () Bool (and .27 .28))
(assert .29)
(define-fun .30 () (_ FP 8 24) x4)
(define-fun .31 () Bool (<= .13 .30))
(define-fun .32 () Bool (<= .30 .10))
(define-fun .33 () Bool (and .31 .32))
(assert .33)
(define-fun .3 () RoundingMode roundNearestTiesToEven)
(define-fun .12 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0))
(define-fun .39 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0140000004321336746216))
(define-fun .42 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.365000009536743164063)))
(define-fun .43 () (_ FP 8 24) (* .3 .14 .42))
(define-fun .44 () (_ FP 8 24) (+ .3 .12 .43))
(define-fun .46 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.711000025272369384766))
(define-fun .47 () (_ FP 8 24) (* .3 .18 .46))
(define-fun .48 () (_ FP 8 24) (+ .3 .44 .47))
(define-fun .51 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.136000007390975952148)))
(define-fun .52 () (_ FP 8 24) (* .3 .22 .51))
(define-fun .53 () (_ FP 8 24) (+ .3 .48 .52))
(define-fun .56 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.583000004291534423828)))
(define-fun .57 () (_ FP 8 24) (* .3 .26 .56))
(define-fun .58 () (_ FP 8 24) (+ .3 .53 .57))
(define-fun .61 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.84200000762939453125)))
(define-fun .62 () (_ FP 8 24) (* .3 .30 .61))
(define-fun .63 () (_ FP 8 24) (+ .3 .58 .62))
(define-fun .64 () Bool (<= .39 .63))
(assert .64)
(define-fun .67 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.12800000607967376709)))
(define-fun .69 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.301999986171722412109))
(define-fun .70 () (_ FP 8 24) (* .3 .14 .69))
(define-fun .71 () (_ FP 8 24) (+ .3 .12 .70))
(define-fun .74 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.730000019073486328125)))
(define-fun .75 () (_ FP 8 24) (* .3 .18 .74))
(define-fun .76 () (_ FP 8 24) (+ .3 .71 .75))
(define-fun .78 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.00200000009499490261078))
(define-fun .79 () (_ FP 8 24) (* .3 .22 .78))
(define-fun .80 () (_ FP 8 24) (+ .3 .76 .79))
(define-fun .82 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.806999981403350830078))
(define-fun .83 () (_ FP 8 24) (* .3 .26 .82))
(define-fun .84 () (_ FP 8 24) (+ .3 .80 .83))
(define-fun .86 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.947000026702880859375))
(define-fun .87 () (_ FP 8 24) (* .3 .30 .86))
(define-fun .88 () (_ FP 8 24) (+ .3 .84 .87))
(define-fun .89 () Bool (<= .88 .67))
(assert .89)
(define-fun .92 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.800999999046325683594)))
(define-fun .95 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.00499999988824129104614)))
(define-fun .96 () (_ FP 8 24) (* .3 .14 .95))
(define-fun .97 () (_ FP 8 24) (+ .3 .12 .96))
(define-fun .100 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.779999971389770507813)))
(define-fun .101 () (_ FP 8 24) (* .3 .18 .100))
(define-fun .102 () (_ FP 8 24) (+ .3 .97 .101))
(define-fun .105 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.805000007152557373047)))
(define-fun .106 () (_ FP 8 24) (* .3 .22 .105))
(define-fun .107 () (_ FP 8 24) (+ .3 .102 .106))
(define-fun .109 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.456999987363815307617))
(define-fun .110 () (_ FP 8 24) (* .3 .26 .109))
(define-fun .111 () (_ FP 8 24) (+ .3 .107 .110))
(define-fun .113 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.146999999880790710449))
(define-fun .114 () (_ FP 8 24) (* .3 .30 .113))
(define-fun .115 () (_ FP 8 24) (+ .3 .111 .114))
(define-fun .116 () Bool (<= .115 .92))
(assert .116)
(define-fun .119 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.282000005245208740234)))
(define-fun .121 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.115999996662139892578))
(define-fun .122 () (_ FP 8 24) (* .3 .14 .121))
(define-fun .123 () (_ FP 8 24) (+ .3 .12 .122))
(define-fun .126 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.33599999547004699707)))
(define-fun .127 () (_ FP 8 24) (* .3 .18 .126))
(define-fun .128 () (_ FP 8 24) (+ .3 .123 .127))
(define-fun .130 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.470999985933303833008))
(define-fun .131 () (_ FP 8 24) (* .3 .22 .130))
(define-fun .132 () (_ FP 8 24) (+ .3 .128 .131))
(define-fun .135 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.992999970912933349609)))
(define-fun .136 () (_ FP 8 24) (* .3 .26 .135))
(define-fun .137 () (_ FP 8 24) (+ .3 .132 .136))
(define-fun .140 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.605000019073486328125)))
(define-fun .141 () (_ FP 8 24) (* .3 .30 .140))
(define-fun .142 () (_ FP 8 24) (+ .3 .137 .141))
(define-fun .143 () Bool (<= .119 .142))
(assert .143)
(define-fun .146 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.186000004410743713379)))
(define-fun .148 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.509999990463256835938))
(define-fun .149 () (_ FP 8 24) (* .3 .14 .148))
(define-fun .150 () (_ FP 8 24) (+ .3 .12 .149))
(define-fun .153 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0260000005364418029785)))
(define-fun .154 () (_ FP 8 24) (* .3 .18 .153))
(define-fun .155 () (_ FP 8 24) (+ .3 .150 .154))
(define-fun .158 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.317999988794326782227)))
(define-fun .159 () (_ FP 8 24) (* .3 .22 .158))
(define-fun .160 () (_ FP 8 24) (+ .3 .155 .159))
(define-fun .163 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.611000001430511474609)))
(define-fun .164 () (_ FP 8 24) (* .3 .26 .163))
(define-fun .165 () (_ FP 8 24) (+ .3 .160 .164))
(define-fun .167 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.112000003457069396973))
(define-fun .168 () (_ FP 8 24) (* .3 .30 .167))
(define-fun .169 () (_ FP 8 24) (+ .3 .165 .168))
(define-fun .170 () Bool (<= .146 .169))
(assert .170)
(define-fun .172 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.610000014305114746094))
(define-fun .174 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.744000017642974853516))
(define-fun .175 () (_ FP 8 24) (* .3 .14 .174))
(define-fun .176 () (_ FP 8 24) (+ .3 .12 .175))
(define-fun .179 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.596000015735626220703)))
(define-fun .180 () (_ FP 8 24) (* .3 .18 .179))
(define-fun .181 () (_ FP 8 24) (+ .3 .176 .180))
(define-fun .183 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.871999979019165039063))
(define-fun .184 () (_ FP 8 24) (* .3 .22 .183))
(define-fun .185 () (_ FP 8 24) (+ .3 .181 .184))
(define-fun .187 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.8090000152587890625))
(define-fun .188 () (_ FP 8 24) (* .3 .26 .187))
(define-fun .189 () (_ FP 8 24) (+ .3 .185 .188))
(define-fun .191 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0439999997615814208984))
(define-fun .192 () (_ FP 8 24) (* .3 .30 .191))
(define-fun .193 () (_ FP 8 24) (+ .3 .189 .192))
(define-fun .194 () Bool (<= .193 .172))
(assert .194)
(define-fun .197 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0270000007003545761108)))
(define-fun .199 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.391999989748001098633))
(define-fun .200 () (_ FP 8 24) (* .3 .14 .199))
(define-fun .201 () (_ FP 8 24) (+ .3 .12 .200))
(define-fun .204 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.264999985694885253906)))
(define-fun .205 () (_ FP 8 24) (* .3 .18 .204))
(define-fun .206 () (_ FP 8 24) (+ .3 .201 .205))
(define-fun .209 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.224999994039535522461)))
(define-fun .210 () (_ FP 8 24) (* .3 .22 .209))
(define-fun .211 () (_ FP 8 24) (+ .3 .206 .210))
(define-fun .214 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.490999996662139892578)))
(define-fun .215 () (_ FP 8 24) (* .3 .26 .214))
(define-fun .216 () (_ FP 8 24) (+ .3 .211 .215))
(define-fun .218 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.782000005245208740234))
(define-fun .219 () (_ FP 8 24) (* .3 .30 .218))
(define-fun .220 () (_ FP 8 24) (+ .3 .216 .219))
(define-fun .221 () Bool (<= .197 .220))
(assert .221)
(define-fun .223 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.226999998092651367188))
(define-fun .225 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.786000013351440429688))
(define-fun .226 () (_ FP 8 24) (* .3 .14 .225))
(define-fun .227 () (_ FP 8 24) (+ .3 .12 .226))
(define-fun .230 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.179000005125999450684)))
(define-fun .231 () (_ FP 8 24) (* .3 .18 .230))
(define-fun .232 () (_ FP 8 24) (+ .3 .227 .231))
(define-fun .234 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.577000021934509277344))
(define-fun .235 () (_ FP 8 24) (* .3 .22 .234))
(define-fun .236 () (_ FP 8 24) (+ .3 .232 .235))
(define-fun .238 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.768000006675720214844))
(define-fun .239 () (_ FP 8 24) (* .3 .26 .238))
(define-fun .240 () (_ FP 8 24) (+ .3 .236 .239))
(define-fun .242 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.504000008106231689453))
(define-fun .243 () (_ FP 8 24) (* .3 .30 .242))
(define-fun .244 () (_ FP 8 24) (+ .3 .240 .243))
(define-fun .245 () Bool (<= .223 .244))
(assert .245)
(define-fun .248 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0320000015199184417725)))
(define-fun .250 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.316000014543533325195))
(define-fun .251 () (_ FP 8 24) (* .3 .14 .250))
(define-fun .252 () (_ FP 8 24) (+ .3 .12 .251))
(define-fun .254 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.860000014305114746094))
(define-fun .255 () (_ FP 8 24) (* .3 .18 .254))
(define-fun .256 () (_ FP 8 24) (+ .3 .252 .255))
(define-fun .259 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.620999991893768310547)))
(define-fun .260 () (_ FP 8 24) (* .3 .22 .259))
(define-fun .261 () (_ FP 8 24) (+ .3 .256 .260))
(define-fun .263 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.685000002384185791016))
(define-fun .264 () (_ FP 8 24) (* .3 .26 .263))
(define-fun .265 () (_ FP 8 24) (+ .3 .261 .264))
(define-fun .267 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.277999997138977050781))
(define-fun .268 () (_ FP 8 24) (* .3 .30 .267))
(define-fun .269 () (_ FP 8 24) (+ .3 .265 .268))
(define-fun .270 () Bool (<= .248 .269))
(assert .270)
(define-fun .272 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.667999982833862304688))
(define-fun .274 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.472999989986419677734))
(define-fun .275 () (_ FP 8 24) (* .3 .14 .274))
(define-fun .276 () (_ FP 8 24) (+ .3 .12 .275))
(define-fun .279 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.384999990463256835938)))
(define-fun .280 () (_ FP 8 24) (* .3 .18 .279))
(define-fun .281 () (_ FP 8 24) (+ .3 .276 .280))
(define-fun .283 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.878000020980834960938))
(define-fun .284 () (_ FP 8 24) (* .3 .22 .283))
(define-fun .285 () (_ FP 8 24) (+ .3 .281 .284))
(define-fun .288 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.961000025272369384766)))
(define-fun .289 () (_ FP 8 24) (* .3 .26 .288))
(define-fun .290 () (_ FP 8 24) (+ .3 .285 .289))
(define-fun .293 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.34200000762939453125)))
(define-fun .294 () (_ FP 8 24) (* .3 .30 .293))
(define-fun .295 () (_ FP 8 24) (+ .3 .290 .294))
(define-fun .296 () Bool (<= .295 .272))
(assert .296)
(check-sat)
