(set-logic QF_FPABV)
(declare-fun x0 () (_ FP 8 24))
(declare-fun x1 () (_ FP 8 24))
(declare-fun x2 () (_ FP 8 24))
(declare-fun x3 () (_ FP 8 24))
(declare-fun x4 () (_ FP 8 24))
(define-fun .10 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 1.0))
(define-fun .13 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 1.0)))
(define-fun .14 () (_ FP 8 24) x0)
(define-fun .15 () Bool (<= .13 .14))
(define-fun .16 () Bool (<= .14 .10))
(define-fun .17 () Bool (and .15 .16))
(assert .17)
(define-fun .18 () (_ FP 8 24) x1)
(define-fun .19 () Bool (<= .13 .18))
(define-fun .20 () Bool (<= .18 .10))
(define-fun .21 () Bool (and .19 .20))
(assert .21)
(define-fun .22 () (_ FP 8 24) x2)
(define-fun .23 () Bool (<= .13 .22))
(define-fun .24 () Bool (<= .22 .10))
(define-fun .25 () Bool (and .23 .24))
(assert .25)
(define-fun .26 () (_ FP 8 24) x3)
(define-fun .27 () Bool (<= .13 .26))
(define-fun .28 () Bool (<= .26 .10))
(define-fun .29 () Bool (and .27 .28))
(assert .29)
(define-fun .30 () (_ FP 8 24) x4)
(define-fun .31 () Bool (<= .13 .30))
(define-fun .32 () Bool (<= .30 .10))
(define-fun .33 () Bool (and .31 .32))
(assert .33)
(define-fun .3 () RoundingMode roundNearestTiesToEven)
(define-fun .12 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0))
(define-fun .39 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.101999998092651367188))
(define-fun .42 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.890999972820281982422)))
(define-fun .43 () (_ FP 8 24) (* .3 .14 .42))
(define-fun .44 () (_ FP 8 24) (+ .3 .12 .43))
(define-fun .47 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.765999972820281982422)))
(define-fun .48 () (_ FP 8 24) (* .3 .18 .47))
(define-fun .49 () (_ FP 8 24) (+ .3 .44 .48))
(define-fun .52 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.84200000762939453125)))
(define-fun .53 () (_ FP 8 24) (* .3 .22 .52))
(define-fun .54 () (_ FP 8 24) (+ .3 .49 .53))
(define-fun .57 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.268999993801116943359)))
(define-fun .58 () (_ FP 8 24) (* .3 .26 .57))
(define-fun .59 () (_ FP 8 24) (+ .3 .54 .58))
(define-fun .62 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0270000007003545761108)))
(define-fun .63 () (_ FP 8 24) (* .3 .30 .62))
(define-fun .64 () (_ FP 8 24) (+ .3 .59 .63))
(define-fun .65 () Bool (<= .64 .39))
(assert .65)
(define-fun .67 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.742999970912933349609))
(define-fun .70 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.442999988794326782227)))
(define-fun .71 () (_ FP 8 24) (* .3 .14 .70))
(define-fun .72 () (_ FP 8 24) (+ .3 .12 .71))
(define-fun .75 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0939999967813491821289)))
(define-fun .76 () (_ FP 8 24) (* .3 .18 .75))
(define-fun .77 () (_ FP 8 24) (+ .3 .72 .76))
(define-fun .79 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.708999991416931152344))
(define-fun .80 () (_ FP 8 24) (* .3 .22 .79))
(define-fun .81 () (_ FP 8 24) (+ .3 .77 .80))
(define-fun .84 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.561999976634979248047)))
(define-fun .85 () (_ FP 8 24) (* .3 .26 .84))
(define-fun .86 () (_ FP 8 24) (+ .3 .81 .85))
(define-fun .89 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.795000016689300537109)))
(define-fun .90 () (_ FP 8 24) (* .3 .30 .89))
(define-fun .91 () (_ FP 8 24) (+ .3 .86 .90))
(define-fun .92 () Bool (<= .91 .67))
(assert .92)
(define-fun .95 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.583000004291534423828)))
(define-fun .97 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.970000028610229492188))
(define-fun .98 () (_ FP 8 24) (* .3 .14 .97))
(define-fun .99 () (_ FP 8 24) (+ .3 .12 .98))
(define-fun .101 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.312000006437301635742))
(define-fun .102 () (_ FP 8 24) (* .3 .18 .101))
(define-fun .103 () (_ FP 8 24) (+ .3 .99 .102))
(define-fun .105 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.470999985933303833008))
(define-fun .106 () (_ FP 8 24) (* .3 .22 .105))
(define-fun .107 () (_ FP 8 24) (+ .3 .103 .106))
(define-fun .109 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.926999986171722412109))
(define-fun .110 () (_ FP 8 24) (* .3 .26 .109))
(define-fun .111 () (_ FP 8 24) (+ .3 .107 .110))
(define-fun .113 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.230000004172325134277))
(define-fun .114 () (_ FP 8 24) (* .3 .30 .113))
(define-fun .115 () (_ FP 8 24) (+ .3 .111 .114))
(define-fun .116 () Bool (<= .95 .115))
(assert .116)
(define-fun .119 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.120999999344348907471)))
(define-fun .121 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.46700000762939453125))
(define-fun .122 () (_ FP 8 24) (* .3 .14 .121))
(define-fun .123 () (_ FP 8 24) (+ .3 .12 .122))
(define-fun .126 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.412000000476837158203)))
(define-fun .127 () (_ FP 8 24) (* .3 .18 .126))
(define-fun .128 () (_ FP 8 24) (+ .3 .123 .127))
(define-fun .131 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.27000001072883605957)))
(define-fun .132 () (_ FP 8 24) (* .3 .22 .131))
(define-fun .133 () (_ FP 8 24) (+ .3 .128 .132))
(define-fun .135 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0740000009536743164063))
(define-fun .136 () (_ FP 8 24) (* .3 .26 .135))
(define-fun .137 () (_ FP 8 24) (+ .3 .133 .136))
(define-fun .139 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.375))
(define-fun .140 () (_ FP 8 24) (* .3 .30 .139))
(define-fun .141 () (_ FP 8 24) (+ .3 .137 .140))
(define-fun .142 () Bool (<= .119 .141))
(assert .142)
(define-fun .144 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.193000003695487976074))
(define-fun .147 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.30300000309944152832)))
(define-fun .148 () (_ FP 8 24) (* .3 .14 .147))
(define-fun .149 () (_ FP 8 24) (+ .3 .12 .148))
(define-fun .151 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.852999985218048095703))
(define-fun .152 () (_ FP 8 24) (* .3 .18 .151))
(define-fun .153 () (_ FP 8 24) (+ .3 .149 .152))
(define-fun .156 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.266000002622604370117)))
(define-fun .157 () (_ FP 8 24) (* .3 .22 .156))
(define-fun .158 () (_ FP 8 24) (+ .3 .153 .157))
(define-fun .161 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.351999998092651367188)))
(define-fun .162 () (_ FP 8 24) (* .3 .26 .161))
(define-fun .163 () (_ FP 8 24) (+ .3 .158 .162))
(define-fun .166 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.518000006675720214844)))
(define-fun .167 () (_ FP 8 24) (* .3 .30 .166))
(define-fun .168 () (_ FP 8 24) (+ .3 .163 .167))
(define-fun .169 () Bool (<= .144 .168))
(assert .169)
(define-fun .172 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.331999987363815307617)))
(define-fun .175 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.652999997138977050781)))
(define-fun .176 () (_ FP 8 24) (* .3 .14 .175))
(define-fun .177 () (_ FP 8 24) (+ .3 .12 .176))
(define-fun .179 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.638000011444091796875))
(define-fun .180 () (_ FP 8 24) (* .3 .18 .179))
(define-fun .181 () (_ FP 8 24) (+ .3 .177 .180))
(define-fun .183 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.340000003576278686523))
(define-fun .184 () (_ FP 8 24) (* .3 .22 .183))
(define-fun .185 () (_ FP 8 24) (+ .3 .181 .184))
(define-fun .187 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.957000017166137695313))
(define-fun .188 () (_ FP 8 24) (* .3 .26 .187))
(define-fun .189 () (_ FP 8 24) (+ .3 .185 .188))
(define-fun .192 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.699999988079071044922)))
(define-fun .193 () (_ FP 8 24) (* .3 .30 .192))
(define-fun .194 () (_ FP 8 24) (+ .3 .189 .193))
(define-fun .195 () Bool (<= .172 .194))
(assert .195)
(define-fun .198 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.16400000452995300293)))
(define-fun .201 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.90799999237060546875)))
(define-fun .202 () (_ FP 8 24) (* .3 .14 .201))
(define-fun .203 () (_ FP 8 24) (+ .3 .12 .202))
(define-fun .205 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.128999993205070495605))
(define-fun .206 () (_ FP 8 24) (* .3 .18 .205))
(define-fun .207 () (_ FP 8 24) (+ .3 .203 .206))
(define-fun .210 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.261999994516372680664)))
(define-fun .211 () (_ FP 8 24) (* .3 .22 .210))
(define-fun .212 () (_ FP 8 24) (+ .3 .207 .211))
(define-fun .215 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.495999991893768310547)))
(define-fun .216 () (_ FP 8 24) (* .3 .26 .215))
(define-fun .217 () (_ FP 8 24) (+ .3 .212 .216))
(define-fun .220 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.962000012397766113281)))
(define-fun .221 () (_ FP 8 24) (* .3 .30 .220))
(define-fun .222 () (_ FP 8 24) (+ .3 .217 .221))
(define-fun .223 () Bool (<= .222 .198))
(assert .223)
(define-fun .225 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.21400000154972076416))
(define-fun .227 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.688000023365020751953))
(define-fun .228 () (_ FP 8 24) (* .3 .14 .227))
(define-fun .229 () (_ FP 8 24) (+ .3 .12 .228))
(define-fun .231 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.425999999046325683594))
(define-fun .232 () (_ FP 8 24) (* .3 .18 .231))
(define-fun .233 () (_ FP 8 24) (+ .3 .229 .232))
(define-fun .236 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.280999988317489624023)))
(define-fun .237 () (_ FP 8 24) (* .3 .22 .236))
(define-fun .238 () (_ FP 8 24) (+ .3 .233 .237))
(define-fun .241 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.377000004053115844727)))
(define-fun .242 () (_ FP 8 24) (* .3 .26 .241))
(define-fun .243 () (_ FP 8 24) (+ .3 .238 .242))
(define-fun .246 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.428999990224838256836)))
(define-fun .247 () (_ FP 8 24) (* .3 .30 .246))
(define-fun .248 () (_ FP 8 24) (+ .3 .243 .247))
(define-fun .249 () Bool (<= .248 .225))
(assert .249)
(define-fun .251 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.112999998033046722412))
(define-fun .254 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.291999995708465576172)))
(define-fun .255 () (_ FP 8 24) (* .3 .14 .254))
(define-fun .256 () (_ FP 8 24) (+ .3 .12 .255))
(define-fun .259 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.517000019550323486328)))
(define-fun .260 () (_ FP 8 24) (* .3 .18 .259))
(define-fun .261 () (_ FP 8 24) (+ .3 .256 .260))
(define-fun .263 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.116999998688697814941))
(define-fun .264 () (_ FP 8 24) (* .3 .22 .263))
(define-fun .265 () (_ FP 8 24) (+ .3 .261 .264))
(define-fun .268 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0619999989867210388184)))
(define-fun .269 () (_ FP 8 24) (* .3 .26 .268))
(define-fun .270 () (_ FP 8 24) (+ .3 .265 .269))
(define-fun .272 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.824999988079071044922))
(define-fun .273 () (_ FP 8 24) (* .3 .30 .272))
(define-fun .274 () (_ FP 8 24) (+ .3 .270 .273))
(define-fun .275 () Bool (<= .251 .274))
(assert .275)
(define-fun .277 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.572000026702880859375))
(define-fun .280 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.781000018119812011719)))
(define-fun .281 () (_ FP 8 24) (* .3 .14 .280))
(define-fun .282 () (_ FP 8 24) (+ .3 .12 .281))
(define-fun .284 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.550999999046325683594))
(define-fun .285 () (_ FP 8 24) (* .3 .18 .284))
(define-fun .286 () (_ FP 8 24) (+ .3 .282 .285))
(define-fun .289 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.519999980926513671875)))
(define-fun .290 () (_ FP 8 24) (* .3 .22 .289))
(define-fun .291 () (_ FP 8 24) (+ .3 .286 .290))
(define-fun .294 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.981000006198883056641)))
(define-fun .295 () (_ FP 8 24) (* .3 .26 .294))
(define-fun .296 () (_ FP 8 24) (+ .3 .291 .295))
(define-fun .299 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.293999999761581420898)))
(define-fun .300 () (_ FP 8 24) (* .3 .30 .299))
(define-fun .301 () (_ FP 8 24) (+ .3 .296 .300))
(define-fun .302 () Bool (<= .301 .277))
(assert .302)
(check-sat)
