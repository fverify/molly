(set-logic QF_FPABV)
(declare-fun x0 () (_ FP 8 24))
(declare-fun x1 () (_ FP 8 24))
(declare-fun x2 () (_ FP 8 24))
(define-fun .10 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 5.0))
(define-fun .13 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 5.0)))
(define-fun .14 () (_ FP 8 24) x0)
(define-fun .15 () Bool (<= .13 .14))
(define-fun .16 () Bool (<= .14 .10))
(define-fun .17 () Bool (and .15 .16))
(assert .17)
(define-fun .18 () (_ FP 8 24) x1)
(define-fun .19 () Bool (<= .13 .18))
(define-fun .20 () Bool (<= .18 .10))
(define-fun .21 () Bool (and .19 .20))
(assert .21)
(define-fun .22 () (_ FP 8 24) x2)
(define-fun .23 () Bool (<= .13 .22))
(define-fun .24 () Bool (<= .22 .10))
(define-fun .25 () Bool (and .23 .24))
(assert .25)
(define-fun .3 () RoundingMode roundNearestTiesToEven)
(define-fun .12 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0))
(define-fun .31 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.954999983310699462891))
(define-fun .33 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.00100000004749745130539))
(define-fun .34 () (_ FP 8 24) (* .3 .14 .33))
(define-fun .35 () (_ FP 8 24) (+ .3 .12 .34))
(define-fun .38 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.992999970912933349609)))
(define-fun .39 () (_ FP 8 24) (* .3 .18 .38))
(define-fun .40 () (_ FP 8 24) (+ .3 .35 .39))
(define-fun .43 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.580999970436096191406)))
(define-fun .44 () (_ FP 8 24) (* .3 .22 .43))
(define-fun .45 () (_ FP 8 24) (+ .3 .40 .44))
(define-fun .46 () Bool (<= .31 .45))
(assert .46)
(define-fun .48 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.903999984264373779297))
(define-fun .51 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.628000020980834960938)))
(define-fun .52 () (_ FP 8 24) (* .3 .14 .51))
(define-fun .53 () (_ FP 8 24) (+ .3 .12 .52))
(define-fun .54 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.903999984264373779297)))
(define-fun .55 () (_ FP 8 24) (* .3 .18 .54))
(define-fun .56 () (_ FP 8 24) (+ .3 .53 .55))
(define-fun .59 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0209999997168779373169)))
(define-fun .60 () (_ FP 8 24) (* .3 .22 .59))
(define-fun .61 () (_ FP 8 24) (+ .3 .56 .60))
(define-fun .62 () Bool (<= .61 .48))
(assert .62)
(define-fun .64 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.9409999847412109375))
(define-fun .66 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0649999976158142089844))
(define-fun .67 () (_ FP 8 24) (* .3 .14 .66))
(define-fun .68 () (_ FP 8 24) (+ .3 .12 .67))
(define-fun .70 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.703999996185302734375))
(define-fun .71 () (_ FP 8 24) (* .3 .18 .70))
(define-fun .72 () (_ FP 8 24) (+ .3 .68 .71))
(define-fun .74 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.277999997138977050781))
(define-fun .75 () (_ FP 8 24) (* .3 .22 .74))
(define-fun .76 () (_ FP 8 24) (+ .3 .72 .75))
(define-fun .77 () Bool (<= .76 .64))
(assert .77)
(check-sat)
