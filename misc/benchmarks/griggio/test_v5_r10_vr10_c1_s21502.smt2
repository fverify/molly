(set-logic QF_FPABV)
(declare-fun x0 () (_ FP 8 24))
(declare-fun x1 () (_ FP 8 24))
(declare-fun x2 () (_ FP 8 24))
(declare-fun x3 () (_ FP 8 24))
(declare-fun x4 () (_ FP 8 24))
(define-fun .10 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 10.0))
(define-fun .13 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 10.0)))
(define-fun .14 () (_ FP 8 24) x0)
(define-fun .15 () Bool (<= .13 .14))
(define-fun .16 () Bool (<= .14 .10))
(define-fun .17 () Bool (and .15 .16))
(assert .17)
(define-fun .18 () (_ FP 8 24) x1)
(define-fun .19 () Bool (<= .13 .18))
(define-fun .20 () Bool (<= .18 .10))
(define-fun .21 () Bool (and .19 .20))
(assert .21)
(define-fun .22 () (_ FP 8 24) x2)
(define-fun .23 () Bool (<= .13 .22))
(define-fun .24 () Bool (<= .22 .10))
(define-fun .25 () Bool (and .23 .24))
(assert .25)
(define-fun .26 () (_ FP 8 24) x3)
(define-fun .27 () Bool (<= .13 .26))
(define-fun .28 () Bool (<= .26 .10))
(define-fun .29 () Bool (and .27 .28))
(assert .29)
(define-fun .30 () (_ FP 8 24) x4)
(define-fun .31 () Bool (<= .13 .30))
(define-fun .32 () Bool (<= .30 .10))
(define-fun .33 () Bool (and .31 .32))
(assert .33)
(define-fun .3 () RoundingMode roundNearestTiesToEven)
(define-fun .12 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0))
(define-fun .40 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.871999979019165039063)))
(define-fun .43 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.152999997138977050781)))
(define-fun .44 () (_ FP 8 24) (* .3 .14 .43))
(define-fun .45 () (_ FP 8 24) (+ .3 .12 .44))
(define-fun .48 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.614000022411346435547)))
(define-fun .49 () (_ FP 8 24) (* .3 .18 .48))
(define-fun .50 () (_ FP 8 24) (+ .3 .45 .49))
(define-fun .53 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.405999988317489624023)))
(define-fun .54 () (_ FP 8 24) (* .3 .22 .53))
(define-fun .55 () (_ FP 8 24) (+ .3 .50 .54))
(define-fun .57 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.78299999237060546875))
(define-fun .58 () (_ FP 8 24) (* .3 .26 .57))
(define-fun .59 () (_ FP 8 24) (+ .3 .55 .58))
(define-fun .62 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.894999980926513671875)))
(define-fun .63 () (_ FP 8 24) (* .3 .30 .62))
(define-fun .64 () (_ FP 8 24) (+ .3 .59 .63))
(define-fun .65 () Bool (<= .64 .40))
(assert .65)
(define-fun .68 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0149999996647238731384)))
(define-fun .71 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.722000002861022949219)))
(define-fun .72 () (_ FP 8 24) (* .3 .14 .71))
(define-fun .73 () (_ FP 8 24) (+ .3 .12 .72))
(define-fun .76 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.372999995946884155273)))
(define-fun .77 () (_ FP 8 24) (* .3 .18 .76))
(define-fun .78 () (_ FP 8 24) (+ .3 .73 .77))
(define-fun .80 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0120000001043081283569))
(define-fun .81 () (_ FP 8 24) (* .3 .22 .80))
(define-fun .82 () (_ FP 8 24) (+ .3 .78 .81))
(define-fun .84 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.477999985218048095703))
(define-fun .85 () (_ FP 8 24) (* .3 .26 .84))
(define-fun .86 () (_ FP 8 24) (+ .3 .82 .85))
(define-fun .89 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.8090000152587890625)))
(define-fun .90 () (_ FP 8 24) (* .3 .30 .89))
(define-fun .91 () (_ FP 8 24) (+ .3 .86 .90))
(define-fun .92 () Bool (<= .68 .91))
(assert .92)
(define-fun .94 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.425000011920928955078))
(define-fun .96 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.731000006198883056641))
(define-fun .97 () (_ FP 8 24) (* .3 .14 .96))
(define-fun .98 () (_ FP 8 24) (+ .3 .12 .97))
(define-fun .101 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.906000018119812011719)))
(define-fun .102 () (_ FP 8 24) (* .3 .18 .101))
(define-fun .103 () (_ FP 8 24) (+ .3 .98 .102))
(define-fun .106 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.261999994516372680664)))
(define-fun .107 () (_ FP 8 24) (* .3 .22 .106))
(define-fun .108 () (_ FP 8 24) (+ .3 .103 .107))
(define-fun .110 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0430000014603137969971))
(define-fun .111 () (_ FP 8 24) (* .3 .26 .110))
(define-fun .112 () (_ FP 8 24) (+ .3 .108 .111))
(define-fun .115 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.837000012397766113281)))
(define-fun .116 () (_ FP 8 24) (* .3 .30 .115))
(define-fun .117 () (_ FP 8 24) (+ .3 .112 .116))
(define-fun .118 () Bool (<= .94 .117))
(assert .118)
(define-fun .121 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.561999976634979248047)))
(define-fun .124 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.820999979972839355469)))
(define-fun .125 () (_ FP 8 24) (* .3 .14 .124))
(define-fun .126 () (_ FP 8 24) (+ .3 .12 .125))
(define-fun .129 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.799000024795532226563)))
(define-fun .130 () (_ FP 8 24) (* .3 .18 .129))
(define-fun .131 () (_ FP 8 24) (+ .3 .126 .130))
(define-fun .134 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.864000022411346435547)))
(define-fun .135 () (_ FP 8 24) (* .3 .22 .134))
(define-fun .136 () (_ FP 8 24) (+ .3 .131 .135))
(define-fun .139 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.252999991178512573242)))
(define-fun .140 () (_ FP 8 24) (* .3 .26 .139))
(define-fun .141 () (_ FP 8 24) (+ .3 .136 .140))
(define-fun .144 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.768999993801116943359)))
(define-fun .145 () (_ FP 8 24) (* .3 .30 .144))
(define-fun .146 () (_ FP 8 24) (+ .3 .141 .145))
(define-fun .147 () Bool (<= .121 .146))
(assert .147)
(define-fun .150 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.397000014781951904297)))
(define-fun .153 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.358000010251998901367)))
(define-fun .154 () (_ FP 8 24) (* .3 .14 .153))
(define-fun .155 () (_ FP 8 24) (+ .3 .12 .154))
(define-fun .157 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.860000014305114746094))
(define-fun .158 () (_ FP 8 24) (* .3 .18 .157))
(define-fun .159 () (_ FP 8 24) (+ .3 .155 .158))
(define-fun .161 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.972000002861022949219))
(define-fun .162 () (_ FP 8 24) (* .3 .22 .161))
(define-fun .163 () (_ FP 8 24) (+ .3 .159 .162))
(define-fun .165 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.661000013351440429688))
(define-fun .166 () (_ FP 8 24) (* .3 .26 .165))
(define-fun .167 () (_ FP 8 24) (+ .3 .163 .166))
(define-fun .170 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.301999986171722412109)))
(define-fun .171 () (_ FP 8 24) (* .3 .30 .170))
(define-fun .172 () (_ FP 8 24) (+ .3 .167 .171))
(define-fun .173 () Bool (<= .150 .172))
(assert .173)
(define-fun .176 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.100000001490116119385)))
(define-fun .178 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.514999985694885253906))
(define-fun .179 () (_ FP 8 24) (* .3 .14 .178))
(define-fun .180 () (_ FP 8 24) (+ .3 .12 .179))
(define-fun .182 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.805000007152557373047))
(define-fun .183 () (_ FP 8 24) (* .3 .18 .182))
(define-fun .184 () (_ FP 8 24) (+ .3 .180 .183))
(define-fun .187 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.363999992609024047852)))
(define-fun .188 () (_ FP 8 24) (* .3 .22 .187))
(define-fun .189 () (_ FP 8 24) (+ .3 .184 .188))
(define-fun .192 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.763000011444091796875)))
(define-fun .193 () (_ FP 8 24) (* .3 .26 .192))
(define-fun .194 () (_ FP 8 24) (+ .3 .189 .193))
(define-fun .196 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.0949999988079071044922))
(define-fun .197 () (_ FP 8 24) (* .3 .30 .196))
(define-fun .198 () (_ FP 8 24) (+ .3 .194 .197))
(define-fun .199 () Bool (<= .176 .198))
(assert .199)
(define-fun .201 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.978999972343444824219))
(define-fun .203 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.952000021934509277344))
(define-fun .204 () (_ FP 8 24) (* .3 .14 .203))
(define-fun .205 () (_ FP 8 24) (+ .3 .12 .204))
(define-fun .207 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.259000003337860107422))
(define-fun .208 () (_ FP 8 24) (* .3 .18 .207))
(define-fun .209 () (_ FP 8 24) (+ .3 .205 .208))
(define-fun .212 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.163000002503395080566)))
(define-fun .213 () (_ FP 8 24) (* .3 .22 .212))
(define-fun .214 () (_ FP 8 24) (+ .3 .209 .213))
(define-fun .217 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.144999995827674865723)))
(define-fun .218 () (_ FP 8 24) (* .3 .26 .217))
(define-fun .219 () (_ FP 8 24) (+ .3 .214 .218))
(define-fun .222 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.0630000010132789611816)))
(define-fun .223 () (_ FP 8 24) (* .3 .30 .222))
(define-fun .224 () (_ FP 8 24) (+ .3 .219 .223))
(define-fun .225 () Bool (<= .201 .224))
(assert .225)
(define-fun .133 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.864000022411346435547))
(define-fun .227 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.221000000834465026855))
(define-fun .230 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.847999989986419677734)))
(define-fun .231 () (_ FP 8 24) (* .3 .14 .230))
(define-fun .232 () (_ FP 8 24) (+ .3 .12 .231))
(define-fun .233 () (_ FP 8 24) (* .3 .18 .133))
(define-fun .234 () (_ FP 8 24) (+ .3 .232 .233))
(define-fun .237 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.870000004768371582031)))
(define-fun .238 () (_ FP 8 24) (* .3 .22 .237))
(define-fun .239 () (_ FP 8 24) (+ .3 .234 .238))
(define-fun .241 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.492000013589859008789))
(define-fun .242 () (_ FP 8 24) (* .3 .26 .241))
(define-fun .243 () (_ FP 8 24) (+ .3 .239 .242))
(define-fun .245 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.5))
(define-fun .246 () (_ FP 8 24) (* .3 .30 .245))
(define-fun .247 () (_ FP 8 24) (+ .3 .243 .246))
(define-fun .248 () Bool (<= .247 .227))
(assert .248)
(define-fun .250 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.505999982357025146484))
(define-fun .252 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.912000000476837158203))
(define-fun .253 () (_ FP 8 24) (* .3 .14 .252))
(define-fun .254 () (_ FP 8 24) (+ .3 .12 .253))
(define-fun .257 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.629999995231628417969)))
(define-fun .258 () (_ FP 8 24) (* .3 .18 .257))
(define-fun .259 () (_ FP 8 24) (+ .3 .254 .258))
(define-fun .261 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.485000014305114746094))
(define-fun .262 () (_ FP 8 24) (* .3 .22 .261))
(define-fun .263 () (_ FP 8 24) (+ .3 .259 .262))
(define-fun .265 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.12800000607967376709))
(define-fun .266 () (_ FP 8 24) (* .3 .26 .265))
(define-fun .267 () (_ FP 8 24) (+ .3 .263 .266))
(define-fun .269 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.532000005245208740234))
(define-fun .270 () (_ FP 8 24) (* .3 .30 .269))
(define-fun .271 () (_ FP 8 24) (+ .3 .267 .270))
(define-fun .272 () Bool (<= .250 .271))
(assert .272)
(define-fun .275 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.503000020980834960938)))
(define-fun .277 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.919000029563903808594))
(define-fun .278 () (_ FP 8 24) (* .3 .14 .277))
(define-fun .279 () (_ FP 8 24) (+ .3 .12 .278))
(define-fun .281 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero 0.8159999847412109375))
(define-fun .282 () (_ FP 8 24) (* .3 .18 .281))
(define-fun .283 () (_ FP 8 24) (+ .3 .279 .282))
(define-fun .286 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.358999997377395629883)))
(define-fun .287 () (_ FP 8 24) (* .3 .22 .286))
(define-fun .288 () (_ FP 8 24) (+ .3 .283 .287))
(define-fun .291 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.9340000152587890625)))
(define-fun .292 () (_ FP 8 24) (* .3 .26 .291))
(define-fun .293 () (_ FP 8 24) (+ .3 .288 .292))
(define-fun .296 () (_ FP 8 24) ((_ asFloat 8 24) roundTowardZero (- 0.187000006437301635742)))
(define-fun .297 () (_ FP 8 24) (* .3 .30 .296))
(define-fun .298 () (_ FP 8 24) (+ .3 .293 .297))
(define-fun .299 () Bool (<= .298 .275))
(assert .299)
(check-sat)
