(declare-fun lit_x0 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x0))
(declare-fun lit_x1 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x1))
(declare-fun lit_x2 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x2))
(declare-fun lit_x3 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x3))
(declare-fun lit_x4 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x4))
(declare-fun lit_x5 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x5))
(declare-fun lit_x6 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x6))
(define-fun lit_10 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 10.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_13 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 10.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.add RNE lit_x0 const_0))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () Bool (fp.leq lit_13 lit_14))
(define-fun lit_16 () Bool (fp.leq lit_14 lit_10))
(define-fun lit_17 () Bool (and lit_15 lit_16))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.add RNE lit_x1 const_0))
(assert (fp.isNormal lit_18))
(define-fun lit_19 () Bool (fp.leq lit_13 lit_18))
(define-fun lit_20 () Bool (fp.leq lit_18 lit_10))
(define-fun lit_21 () Bool (and lit_19 lit_20))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.add RNE lit_x2 const_0))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () Bool (fp.leq lit_13 lit_22))
(define-fun lit_24 () Bool (fp.leq lit_22 lit_10))
(define-fun lit_25 () Bool (and lit_23 lit_24))
(define-fun lit_26 () (_ FloatingPoint 8 24) (fp.add RNE lit_x3 const_0))
(assert (fp.isNormal lit_26))
(define-fun lit_27 () Bool (fp.leq lit_13 lit_26))
(define-fun lit_28 () Bool (fp.leq lit_26 lit_10))
(define-fun lit_29 () Bool (and lit_27 lit_28))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.add RNE lit_x4 const_0))
(assert (fp.isNormal lit_30))
(define-fun lit_31 () Bool (fp.leq lit_13 lit_30))
(define-fun lit_32 () Bool (fp.leq lit_30 lit_10))
(define-fun lit_33 () Bool (and lit_31 lit_32))
(define-fun lit_34 () (_ FloatingPoint 8 24) (fp.add RNE lit_x5 const_0))
(assert (fp.isNormal lit_34))
(define-fun lit_35 () Bool (fp.leq lit_13 lit_34))
(define-fun lit_36 () Bool (fp.leq lit_34 lit_10))
(define-fun lit_37 () Bool (and lit_35 lit_36))
(define-fun lit_38 () (_ FloatingPoint 8 24) (fp.add RNE lit_x6 const_0))
(assert (fp.isNormal lit_38))
(define-fun lit_39 () Bool (fp.leq lit_13 lit_38))
(define-fun lit_40 () Bool (fp.leq lit_38 lit_10))
(define-fun lit_41 () Bool (and lit_39 lit_40))
(define-fun lit_12 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_47 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.201000005006790161132812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_49 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.850000023841857910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_50 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_49))
(assert (fp.isNormal lit_50))
(define-fun lit_51 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_50))
(assert (fp.isNormal lit_51))
(define-fun lit_54 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.439999997615814208984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_55 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_54))
(assert (fp.isNormal lit_55))
(define-fun lit_56 () (_ FloatingPoint 8 24) (fp.add RNE lit_51 lit_55))
(assert (fp.isNormal lit_56))
(define-fun lit_59 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.503000020980834960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_60 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_59))
(assert (fp.isNormal lit_60))
(define-fun lit_61 () (_ FloatingPoint 8 24) (fp.add RNE lit_56 lit_60))
(assert (fp.isNormal lit_61))
(define-fun lit_64 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.101000003516674041748046875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_65 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_64))
(assert (fp.isNormal lit_65))
(define-fun lit_66 () (_ FloatingPoint 8 24) (fp.add RNE lit_61 lit_65))
(assert (fp.isNormal lit_66))
(define-fun lit_69 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.620999991893768310546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_70 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_69))
(assert (fp.isNormal lit_70))
(define-fun lit_71 () (_ FloatingPoint 8 24) (fp.add RNE lit_66 lit_70))
(assert (fp.isNormal lit_71))
(define-fun lit_74 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.052999999374151229858398437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_75 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_74))
(assert (fp.isNormal lit_75))
(define-fun lit_76 () (_ FloatingPoint 8 24) (fp.add RNE lit_71 lit_75))
(assert (fp.isNormal lit_76))
(define-fun lit_78 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.293000012636184692382812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_79 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_78))
(assert (fp.isNormal lit_79))
(define-fun lit_80 () (_ FloatingPoint 8 24) (fp.add RNE lit_76 lit_79))
(assert (fp.isNormal lit_80))
(define-fun lit_81 () Bool (fp.leq lit_80 lit_47))
(define-fun lit_83 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.035999998450279235839843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_85 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.878000020980834960937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_86 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_85))
(assert (fp.isNormal lit_86))
(define-fun lit_87 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_86))
(assert (fp.isNormal lit_87))
(define-fun lit_90 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.184000000357627868652343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_91 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_90))
(assert (fp.isNormal lit_91))
(define-fun lit_92 () (_ FloatingPoint 8 24) (fp.add RNE lit_87 lit_91))
(assert (fp.isNormal lit_92))
(define-fun lit_94 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.686999976634979248046875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_95 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_94))
(assert (fp.isNormal lit_95))
(define-fun lit_96 () (_ FloatingPoint 8 24) (fp.add RNE lit_92 lit_95))
(assert (fp.isNormal lit_96))
(define-fun lit_99 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.870000004768371582031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_100 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_99))
(assert (fp.isNormal lit_100))
(define-fun lit_101 () (_ FloatingPoint 8 24) (fp.add RNE lit_96 lit_100))
(assert (fp.isNormal lit_101))
(define-fun lit_104 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.734000027179718017578125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_105 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_104))
(assert (fp.isNormal lit_105))
(define-fun lit_106 () (_ FloatingPoint 8 24) (fp.add RNE lit_101 lit_105))
(assert (fp.isNormal lit_106))
(define-fun lit_109 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.469999998807907104492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_110 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_109))
(assert (fp.isNormal lit_110))
(define-fun lit_111 () (_ FloatingPoint 8 24) (fp.add RNE lit_106 lit_110))
(assert (fp.isNormal lit_111))
(define-fun lit_113 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.252000004053115844726562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_114 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_113))
(assert (fp.isNormal lit_114))
(define-fun lit_115 () (_ FloatingPoint 8 24) (fp.add RNE lit_111 lit_114))
(assert (fp.isNormal lit_115))
(define-fun lit_116 () Bool (fp.leq lit_83 lit_115))
(define-fun lit_118 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.986000001430511474609375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_120 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.640999972820281982421875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_121 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_120))
(assert (fp.isNormal lit_121))
(define-fun lit_122 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_121))
(assert (fp.isNormal lit_122))
(define-fun lit_125 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.672999978065490722656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_126 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_125))
(assert (fp.isNormal lit_126))
(define-fun lit_127 () (_ FloatingPoint 8 24) (fp.add RNE lit_122 lit_126))
(assert (fp.isNormal lit_127))
(define-fun lit_130 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.197999998927116394042968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_131 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_130))
(assert (fp.isNormal lit_131))
(define-fun lit_132 () (_ FloatingPoint 8 24) (fp.add RNE lit_127 lit_131))
(assert (fp.isNormal lit_132))
(define-fun lit_134 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.261000007390975952148437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_135 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_134))
(assert (fp.isNormal lit_135))
(define-fun lit_136 () (_ FloatingPoint 8 24) (fp.add RNE lit_132 lit_135))
(assert (fp.isNormal lit_136))
(define-fun lit_138 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.796000003814697265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_139 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_138))
(assert (fp.isNormal lit_139))
(define-fun lit_140 () (_ FloatingPoint 8 24) (fp.add RNE lit_136 lit_139))
(assert (fp.isNormal lit_140))
(define-fun lit_142 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.862999975681304931640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_143 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_142))
(assert (fp.isNormal lit_143))
(define-fun lit_144 () (_ FloatingPoint 8 24) (fp.add RNE lit_140 lit_143))
(assert (fp.isNormal lit_144))
(define-fun lit_147 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.167999997735023498535156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_148 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_147))
(assert (fp.isNormal lit_148))
(define-fun lit_149 () (_ FloatingPoint 8 24) (fp.add RNE lit_144 lit_148))
(assert (fp.isNormal lit_149))
(define-fun lit_150 () Bool (fp.leq lit_149 lit_118))
(define-fun lit_152 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.537999987602233886718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_154 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.963999986648559570312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_155 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_154))
(assert (fp.isNormal lit_155))
(define-fun lit_156 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_155))
(assert (fp.isNormal lit_156))
(define-fun lit_159 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.718999981880187988281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_160 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_159))
(assert (fp.isNormal lit_160))
(define-fun lit_161 () (_ FloatingPoint 8 24) (fp.add RNE lit_156 lit_160))
(assert (fp.isNormal lit_161))
(define-fun lit_164 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.820999979972839355468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_165 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_164))
(assert (fp.isNormal lit_165))
(define-fun lit_166 () (_ FloatingPoint 8 24) (fp.add RNE lit_161 lit_165))
(assert (fp.isNormal lit_166))
(define-fun lit_168 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.492000013589859008789062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_169 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_168))
(assert (fp.isNormal lit_169))
(define-fun lit_170 () (_ FloatingPoint 8 24) (fp.add RNE lit_166 lit_169))
(assert (fp.isNormal lit_170))
(define-fun lit_171 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.862999975681304931640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_172 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_171))
(assert (fp.isNormal lit_172))
(define-fun lit_173 () (_ FloatingPoint 8 24) (fp.add RNE lit_170 lit_172))
(assert (fp.isNormal lit_173))
(define-fun lit_175 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.947000026702880859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_176 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_175))
(assert (fp.isNormal lit_176))
(define-fun lit_177 () (_ FloatingPoint 8 24) (fp.add RNE lit_173 lit_176))
(assert (fp.isNormal lit_177))
(define-fun lit_180 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.737999975681304931640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_181 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_180))
(assert (fp.isNormal lit_181))
(define-fun lit_182 () (_ FloatingPoint 8 24) (fp.add RNE lit_177 lit_181))
(assert (fp.isNormal lit_182))
(define-fun lit_183 () Bool (fp.leq lit_152 lit_182))
(define-fun lit_186 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.966000020503997802734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_189 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.377999991178512573242187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_190 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_189))
(assert (fp.isNormal lit_190))
(define-fun lit_191 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_190))
(assert (fp.isNormal lit_191))
(define-fun lit_193 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.788999974727630615234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_194 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_193))
(assert (fp.isNormal lit_194))
(define-fun lit_195 () (_ FloatingPoint 8 24) (fp.add RNE lit_191 lit_194))
(assert (fp.isNormal lit_195))
(define-fun lit_197 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.179000005125999450683593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_198 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_197))
(assert (fp.isNormal lit_198))
(define-fun lit_199 () (_ FloatingPoint 8 24) (fp.add RNE lit_195 lit_198))
(assert (fp.isNormal lit_199))
(define-fun lit_201 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.155000001192092895507812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_202 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_201))
(assert (fp.isNormal lit_202))
(define-fun lit_203 () (_ FloatingPoint 8 24) (fp.add RNE lit_199 lit_202))
(assert (fp.isNormal lit_203))
(define-fun lit_205 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.287999987602233886718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_206 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_205))
(assert (fp.isNormal lit_206))
(define-fun lit_207 () (_ FloatingPoint 8 24) (fp.add RNE lit_203 lit_206))
(assert (fp.isNormal lit_207))
(define-fun lit_209 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.961000025272369384765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_210 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_209))
(assert (fp.isNormal lit_210))
(define-fun lit_211 () (_ FloatingPoint 8 24) (fp.add RNE lit_207 lit_210))
(assert (fp.isNormal lit_211))
(define-fun lit_214 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.579999983310699462890625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_215 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_214))
(assert (fp.isNormal lit_215))
(define-fun lit_216 () (_ FloatingPoint 8 24) (fp.add RNE lit_211 lit_215))
(assert (fp.isNormal lit_216))
(define-fun lit_217 () Bool (fp.leq lit_216 lit_186))
(define-fun lit_220 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.344000011682510375976562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_222 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.922999978065490722656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_223 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_222))
(assert (fp.isNormal lit_223))
(define-fun lit_224 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_223))
(assert (fp.isNormal lit_224))
(define-fun lit_226 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.248999997973442077636718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_227 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_226))
(assert (fp.isNormal lit_227))
(define-fun lit_228 () (_ FloatingPoint 8 24) (fp.add RNE lit_224 lit_227))
(assert (fp.isNormal lit_228))
(define-fun lit_230 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.527999997138977050781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_231 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_230))
(assert (fp.isNormal lit_231))
(define-fun lit_232 () (_ FloatingPoint 8 24) (fp.add RNE lit_228 lit_231))
(assert (fp.isNormal lit_232))
(define-fun lit_235 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.924000024795532226562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_236 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_235))
(assert (fp.isNormal lit_236))
(define-fun lit_237 () (_ FloatingPoint 8 24) (fp.add RNE lit_232 lit_236))
(assert (fp.isNormal lit_237))
(define-fun lit_239 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.152999997138977050781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_240 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_239))
(assert (fp.isNormal lit_240))
(define-fun lit_241 () (_ FloatingPoint 8 24) (fp.add RNE lit_237 lit_240))
(assert (fp.isNormal lit_241))
(define-fun lit_244 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.407999992370605468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_245 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_244))
(assert (fp.isNormal lit_245))
(define-fun lit_246 () (_ FloatingPoint 8 24) (fp.add RNE lit_241 lit_245))
(assert (fp.isNormal lit_246))
(define-fun lit_248 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.717000007629394531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_249 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_248))
(assert (fp.isNormal lit_249))
(define-fun lit_250 () (_ FloatingPoint 8 24) (fp.add RNE lit_246 lit_249))
(assert (fp.isNormal lit_250))
(define-fun lit_251 () Bool (fp.leq lit_220 lit_250))
(define-fun lit_253 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.465999990701675415039062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_255 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.512000024318695068359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_256 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_255))
(assert (fp.isNormal lit_256))
(define-fun lit_257 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_256))
(assert (fp.isNormal lit_257))
(define-fun lit_259 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.094999998807907104492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_260 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_259))
(assert (fp.isNormal lit_260))
(define-fun lit_261 () (_ FloatingPoint 8 24) (fp.add RNE lit_257 lit_260))
(assert (fp.isNormal lit_261))
(define-fun lit_263 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.375999987125396728515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_264 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_263))
(assert (fp.isNormal lit_264))
(define-fun lit_265 () (_ FloatingPoint 8 24) (fp.add RNE lit_261 lit_264))
(assert (fp.isNormal lit_265))
(define-fun lit_267 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.690999984741210937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_268 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_267))
(assert (fp.isNormal lit_268))
(define-fun lit_269 () (_ FloatingPoint 8 24) (fp.add RNE lit_265 lit_268))
(assert (fp.isNormal lit_269))
(define-fun lit_271 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.632000029087066650390625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_272 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_271))
(assert (fp.isNormal lit_272))
(define-fun lit_273 () (_ FloatingPoint 8 24) (fp.add RNE lit_269 lit_272))
(assert (fp.isNormal lit_273))
(define-fun lit_276 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.521000027656555175781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_277 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_276))
(assert (fp.isNormal lit_277))
(define-fun lit_278 () (_ FloatingPoint 8 24) (fp.add RNE lit_273 lit_277))
(assert (fp.isNormal lit_278))
(define-fun lit_280 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.685999989509582519531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_281 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_280))
(assert (fp.isNormal lit_281))
(define-fun lit_282 () (_ FloatingPoint 8 24) (fp.add RNE lit_278 lit_281))
(assert (fp.isNormal lit_282))
(define-fun lit_283 () Bool (fp.leq lit_253 lit_282))
(define-fun top_level_new0 () Bool (and lit_150 lit_251))
(define-fun top_level_new1 () Bool (and top_level_new0 lit_41))
(define-fun top_level_new2 () Bool (and top_level_new1 lit_183))
(define-fun top_level_new3 () Bool (and top_level_new2 lit_217))
(define-fun top_level_new4 () Bool (and top_level_new3 lit_81))
(define-fun top_level_new5 () Bool (and top_level_new4 lit_37))
(define-fun top_level_new6 () Bool (and top_level_new5 lit_25))
(define-fun top_level_new7 () Bool (and top_level_new6 lit_33))
(define-fun top_level_new8 () Bool (and top_level_new7 lit_21))
(define-fun top_level_new9 () Bool (and top_level_new8 lit_17))
(define-fun top_level_new10 () Bool (and top_level_new9 lit_116))
(define-fun top_level_new11 () Bool (and top_level_new10 lit_283))
(define-fun propexp () Bool (and top_level_new11 lit_29))
(assert propexp)
(check-sat)
;(get-model)
(exit)