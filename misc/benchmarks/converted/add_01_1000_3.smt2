(declare-fun lit_9 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_9))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_10 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 const_0))
(assert (fp.isNormal lit_10))
(define-fun lit_12 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1000.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_13 () Bool (fp.lt lit_10 lit_12))
(declare-fun lit_14 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_14))
(declare-fun lit_15 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_15))
(define-fun lit_16 () (_ FloatingPoint 8 24) (fp.add RNE lit_14 lit_15))
(assert (fp.isNormal lit_16))
(define-fun lit_17 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_16))
(assert (fp.isNormal lit_17))
(define-fun lit_const_minus_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_17))
(assert (fp.isNormal lit_18))
(define-fun lit_19 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_14))
(assert (fp.isNormal lit_19))
(define-fun lit_20 () (_ FloatingPoint 8 24) (fp.add RNE lit_15 lit_19))
(assert (fp.isNormal lit_20))
(define-fun lit_21 () (_ FloatingPoint 8 24) (fp.add RNE lit_18 lit_20))
(assert (fp.isNormal lit_21))
(define-fun lit_23 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1000.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_24 () Bool (fp.leq lit_21 lit_23))
(define-fun lit_26 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 1000.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_27 () Bool (fp.lt lit_26 lit_10))
(define-fun lit_28 () Bool (and lit_13 lit_27))
(define-fun lit_29 () (_ FloatingPoint 8 24) (fp.add RNE lit_14 const_0))
(assert (fp.isNormal lit_29))
(define-fun lit_30 () Bool (fp.lt lit_29 lit_12))
(define-fun lit_31 () Bool (and lit_28 lit_30))
(define-fun lit_32 () Bool (fp.lt lit_26 lit_29))
(define-fun lit_33 () Bool (and lit_31 lit_32))
(define-fun lit_34 () (_ FloatingPoint 8 24) (fp.add RNE lit_15 const_0))
(assert (fp.isNormal lit_34))
(define-fun lit_35 () Bool (fp.lt lit_34 lit_12))
(define-fun lit_36 () Bool (and lit_33 lit_35))
(define-fun lit_37 () Bool (fp.lt lit_26 lit_34))
(define-fun lit_38 () Bool (and lit_36 lit_37))
(define-fun lit_39 () Bool (fp.leq lit_14 lit_9))
(define-fun lit_40 () Bool (and lit_38 lit_39))
(define-fun lit_41 () Bool (fp.leq lit_15 lit_14))
(define-fun lit_42 () Bool (and lit_40 lit_41))
(define-fun lit_43 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_14))
(assert (fp.isNormal lit_43))
(define-fun lit_44 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_43))
(assert (fp.isNormal lit_44))
(define-fun lit_46 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.100000001490116119384765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_47 () Bool (fp.leq lit_44 lit_46))
(define-fun lit_48 () Bool (and lit_42 lit_47))
(define-fun lit_49 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_15))
(assert (fp.isNormal lit_49))
(define-fun lit_50 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_49))
(assert (fp.isNormal lit_50))
(define-fun lit_51 () Bool (fp.leq lit_50 lit_46))
(define-fun lit_52 () Bool (and lit_48 lit_51))
(define-fun lit_53 () (_ FloatingPoint 8 24) (fp.add RNE lit_14 lit_49))
(assert (fp.isNormal lit_53))
(define-fun lit_54 () Bool (fp.leq lit_53 lit_46))
(define-fun lit_55 () Bool (and lit_52 lit_54))
(define-fun lit_56 () (_ FloatingPoint 8 24) (fp.add RNE lit_20 const_0))
(assert (fp.isNormal lit_56))
(define-fun lit_57 () (_ FloatingPoint 8 24) (fp.add RNE lit_53 const_0))
(assert (fp.isNormal lit_57))
(define-fun lit_58 () Bool (fp.lt lit_56 lit_57))
(define-fun lit_59 () (_ FloatingPoint 8 24) (fp.add RNE lit_53 const_0))
(assert (fp.isNormal lit_59))
(define-fun lit_60 () Bool (fp.lt lit_59 lit_56))
(define-fun lit_61 () Bool (and lit_58 lit_60))
(define-fun lit_62 () Bool (and lit_55 lit_61))
(define-fun lit_63 () (_ FloatingPoint 8 24) (fp.add RNE lit_17 const_0))
(assert (fp.isNormal lit_63))
(define-fun lit_64 () Bool (fp.lt lit_63 lit_57))
(define-fun lit_65 () Bool (fp.lt lit_59 lit_63))
(define-fun lit_66 () Bool (and lit_64 lit_65))
(define-fun lit_67 () Bool (and lit_62 lit_66))
(define-fun lit_68 () Bool (not lit_24))
(define-fun lit_69 () Bool (and lit_67 lit_68))
(define-fun const_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun const_2 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 2.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun prop_1 () Bool (fp.lt const_1 const_2))
(define-fun propexp () Bool (and lit_69 prop_1))
(assert propexp)
(check-sat)
;(get-model)
(exit)