(declare-fun lit_x0 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x0))
(declare-fun lit_x1 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x1))
(declare-fun lit_x2 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x2))
(declare-fun lit_x3 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x3))
(declare-fun lit_x4 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x4))
(define-fun lit_10 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_13 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.add RNE lit_x0 const_0))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () Bool (fp.leq lit_13 lit_14))
(define-fun lit_16 () Bool (fp.leq lit_14 lit_10))
(define-fun lit_17 () Bool (and lit_15 lit_16))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.add RNE lit_x1 const_0))
(assert (fp.isNormal lit_18))
(define-fun lit_19 () Bool (fp.leq lit_13 lit_18))
(define-fun lit_20 () Bool (fp.leq lit_18 lit_10))
(define-fun lit_21 () Bool (and lit_19 lit_20))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.add RNE lit_x2 const_0))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () Bool (fp.leq lit_13 lit_22))
(define-fun lit_24 () Bool (fp.leq lit_22 lit_10))
(define-fun lit_25 () Bool (and lit_23 lit_24))
(define-fun lit_26 () (_ FloatingPoint 8 24) (fp.add RNE lit_x3 const_0))
(assert (fp.isNormal lit_26))
(define-fun lit_27 () Bool (fp.leq lit_13 lit_26))
(define-fun lit_28 () Bool (fp.leq lit_26 lit_10))
(define-fun lit_29 () Bool (and lit_27 lit_28))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.add RNE lit_x4 const_0))
(assert (fp.isNormal lit_30))
(define-fun lit_31 () Bool (fp.leq lit_13 lit_30))
(define-fun lit_32 () Bool (fp.leq lit_30 lit_10))
(define-fun lit_33 () Bool (and lit_31 lit_32))
(define-fun lit_12 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_39 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.138999998569488525390625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_41 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.225999996066093444824218750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_42 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_41))
(assert (fp.isNormal lit_42))
(define-fun lit_43 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_42))
(assert (fp.isNormal lit_43))
(define-fun lit_46 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.556999981403350830078125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_47 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_46))
(assert (fp.isNormal lit_47))
(define-fun lit_48 () (_ FloatingPoint 8 24) (fp.add RNE lit_43 lit_47))
(assert (fp.isNormal lit_48))
(define-fun lit_50 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.787999987602233886718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_51 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_50))
(assert (fp.isNormal lit_51))
(define-fun lit_52 () (_ FloatingPoint 8 24) (fp.add RNE lit_48 lit_51))
(assert (fp.isNormal lit_52))
(define-fun lit_55 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.136999994516372680664062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_56 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_55))
(assert (fp.isNormal lit_56))
(define-fun lit_57 () (_ FloatingPoint 8 24) (fp.add RNE lit_52 lit_56))
(assert (fp.isNormal lit_57))
(define-fun lit_58 () (_ FloatingPoint 8 24) (fp.mul RNE lit_12 lit_30))
(assert (fp.isNormal lit_58))
(define-fun lit_59 () (_ FloatingPoint 8 24) (fp.add RNE lit_57 lit_58))
(assert (fp.isNormal lit_59))
(define-fun lit_60 () Bool (fp.leq lit_39 lit_59))
(define-fun lit_62 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.497999995946884155273437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_65 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.962000012397766113281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_66 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_65))
(assert (fp.isNormal lit_66))
(define-fun lit_67 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_66))
(assert (fp.isNormal lit_67))
(define-fun lit_70 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.857999980449676513671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_71 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_70))
(assert (fp.isNormal lit_71))
(define-fun lit_72 () (_ FloatingPoint 8 24) (fp.add RNE lit_67 lit_71))
(assert (fp.isNormal lit_72))
(define-fun lit_75 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.087999999523162841796875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_76 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_75))
(assert (fp.isNormal lit_76))
(define-fun lit_77 () (_ FloatingPoint 8 24) (fp.add RNE lit_72 lit_76))
(assert (fp.isNormal lit_77))
(define-fun lit_80 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.671999990940093994140625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_81 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_80))
(assert (fp.isNormal lit_81))
(define-fun lit_82 () (_ FloatingPoint 8 24) (fp.add RNE lit_77 lit_81))
(assert (fp.isNormal lit_82))
(define-fun lit_85 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.916000008583068847656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_86 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_85))
(assert (fp.isNormal lit_86))
(define-fun lit_87 () (_ FloatingPoint 8 24) (fp.add RNE lit_82 lit_86))
(assert (fp.isNormal lit_87))
(define-fun lit_88 () Bool (fp.leq lit_62 lit_87))
(define-fun lit_91 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.670000016689300537109375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_94 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.547999978065490722656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_95 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_94))
(assert (fp.isNormal lit_95))
(define-fun lit_96 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_95))
(assert (fp.isNormal lit_96))
(define-fun lit_99 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.217999994754791259765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_100 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_99))
(assert (fp.isNormal lit_100))
(define-fun lit_101 () (_ FloatingPoint 8 24) (fp.add RNE lit_96 lit_100))
(assert (fp.isNormal lit_101))
(define-fun lit_103 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.393999993801116943359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_104 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_103))
(assert (fp.isNormal lit_104))
(define-fun lit_105 () (_ FloatingPoint 8 24) (fp.add RNE lit_101 lit_104))
(assert (fp.isNormal lit_105))
(define-fun lit_107 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.377999991178512573242187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_108 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_107))
(assert (fp.isNormal lit_108))
(define-fun lit_109 () (_ FloatingPoint 8 24) (fp.add RNE lit_105 lit_108))
(assert (fp.isNormal lit_109))
(define-fun lit_110 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_75))
(assert (fp.isNormal lit_110))
(define-fun lit_111 () (_ FloatingPoint 8 24) (fp.add RNE lit_109 lit_110))
(assert (fp.isNormal lit_111))
(define-fun lit_112 () Bool (fp.leq lit_111 lit_91))
(define-fun lit_114 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.544000029563903808593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_117 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.428000003099441528320312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_118 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_117))
(assert (fp.isNormal lit_118))
(define-fun lit_119 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_118))
(assert (fp.isNormal lit_119))
(define-fun lit_122 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.583000004291534423828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_123 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_122))
(assert (fp.isNormal lit_123))
(define-fun lit_124 () (_ FloatingPoint 8 24) (fp.add RNE lit_119 lit_123))
(assert (fp.isNormal lit_124))
(define-fun lit_126 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.279000014066696166992187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_127 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_126))
(assert (fp.isNormal lit_127))
(define-fun lit_128 () (_ FloatingPoint 8 24) (fp.add RNE lit_124 lit_127))
(assert (fp.isNormal lit_128))
(define-fun lit_130 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.145999997854232788085937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_131 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_130))
(assert (fp.isNormal lit_131))
(define-fun lit_132 () (_ FloatingPoint 8 24) (fp.add RNE lit_128 lit_131))
(assert (fp.isNormal lit_132))
(define-fun lit_135 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.177000001072883605957031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_136 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_135))
(assert (fp.isNormal lit_136))
(define-fun lit_137 () (_ FloatingPoint 8 24) (fp.add RNE lit_132 lit_136))
(assert (fp.isNormal lit_137))
(define-fun lit_138 () Bool (fp.leq lit_114 lit_137))
(define-fun lit_141 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.168999999761581420898437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_144 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.975000023841857910156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_145 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_144))
(assert (fp.isNormal lit_145))
(define-fun lit_146 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_145))
(assert (fp.isNormal lit_146))
(define-fun lit_149 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.925000011920928955078125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_150 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_149))
(assert (fp.isNormal lit_150))
(define-fun lit_151 () (_ FloatingPoint 8 24) (fp.add RNE lit_146 lit_150))
(assert (fp.isNormal lit_151))
(define-fun lit_153 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.987999975681304931640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_154 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_153))
(assert (fp.isNormal lit_154))
(define-fun lit_155 () (_ FloatingPoint 8 24) (fp.add RNE lit_151 lit_154))
(assert (fp.isNormal lit_155))
(define-fun lit_158 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.289000004529953002929687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_159 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_158))
(assert (fp.isNormal lit_159))
(define-fun lit_160 () (_ FloatingPoint 8 24) (fp.add RNE lit_155 lit_159))
(assert (fp.isNormal lit_160))
(define-fun lit_163 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.755999982357025146484375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_164 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_163))
(assert (fp.isNormal lit_164))
(define-fun lit_165 () (_ FloatingPoint 8 24) (fp.add RNE lit_160 lit_164))
(assert (fp.isNormal lit_165))
(define-fun lit_166 () Bool (fp.leq lit_141 lit_165))
(define-fun lit_169 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.656000018119812011718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_171 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.381999999284744262695312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_172 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_171))
(assert (fp.isNormal lit_172))
(define-fun lit_173 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_172))
(assert (fp.isNormal lit_173))
(define-fun lit_175 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.330000013113021850585937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_176 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_175))
(assert (fp.isNormal lit_176))
(define-fun lit_177 () (_ FloatingPoint 8 24) (fp.add RNE lit_173 lit_176))
(assert (fp.isNormal lit_177))
(define-fun lit_179 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.887000024318695068359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_180 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_179))
(assert (fp.isNormal lit_180))
(define-fun lit_181 () (_ FloatingPoint 8 24) (fp.add RNE lit_177 lit_180))
(assert (fp.isNormal lit_181))
(define-fun lit_183 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.623000025749206542968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_184 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_183))
(assert (fp.isNormal lit_184))
(define-fun lit_185 () (_ FloatingPoint 8 24) (fp.add RNE lit_181 lit_184))
(assert (fp.isNormal lit_185))
(define-fun lit_187 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.560000002384185791015625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_188 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_187))
(assert (fp.isNormal lit_188))
(define-fun lit_189 () (_ FloatingPoint 8 24) (fp.add RNE lit_185 lit_188))
(assert (fp.isNormal lit_189))
(define-fun lit_190 () Bool (fp.leq lit_189 lit_169))
(define-fun lit_192 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.802999973297119140625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_194 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.505999982357025146484375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_195 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_194))
(assert (fp.isNormal lit_195))
(define-fun lit_196 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_195))
(assert (fp.isNormal lit_196))
(define-fun lit_199 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.082999996840953826904296875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_200 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_199))
(assert (fp.isNormal lit_200))
(define-fun lit_201 () (_ FloatingPoint 8 24) (fp.add RNE lit_196 lit_200))
(assert (fp.isNormal lit_201))
(define-fun lit_204 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.606000006198883056640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_205 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_204))
(assert (fp.isNormal lit_205))
(define-fun lit_206 () (_ FloatingPoint 8 24) (fp.add RNE lit_201 lit_205))
(assert (fp.isNormal lit_206))
(define-fun lit_208 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.907000005245208740234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_209 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_208))
(assert (fp.isNormal lit_209))
(define-fun lit_210 () (_ FloatingPoint 8 24) (fp.add RNE lit_206 lit_209))
(assert (fp.isNormal lit_210))
(define-fun lit_213 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.347999989986419677734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_214 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_213))
(assert (fp.isNormal lit_214))
(define-fun lit_215 () (_ FloatingPoint 8 24) (fp.add RNE lit_210 lit_214))
(assert (fp.isNormal lit_215))
(define-fun lit_216 () Bool (fp.leq lit_215 lit_192))
(define-fun lit_218 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.574999988079071044921875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_221 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.101999998092651367187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_222 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_221))
(assert (fp.isNormal lit_222))
(define-fun lit_223 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_222))
(assert (fp.isNormal lit_223))
(define-fun lit_226 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.098999999463558197021484375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_227 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_226))
(assert (fp.isNormal lit_227))
(define-fun lit_228 () (_ FloatingPoint 8 24) (fp.add RNE lit_223 lit_227))
(assert (fp.isNormal lit_228))
(define-fun lit_230 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.449000000953674316406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_231 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_230))
(assert (fp.isNormal lit_231))
(define-fun lit_232 () (_ FloatingPoint 8 24) (fp.add RNE lit_228 lit_231))
(assert (fp.isNormal lit_232))
(define-fun lit_235 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.601000010967254638671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_236 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_235))
(assert (fp.isNormal lit_236))
(define-fun lit_237 () (_ FloatingPoint 8 24) (fp.add RNE lit_232 lit_236))
(assert (fp.isNormal lit_237))
(define-fun lit_240 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.467000007629394531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_241 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_240))
(assert (fp.isNormal lit_241))
(define-fun lit_242 () (_ FloatingPoint 8 24) (fp.add RNE lit_237 lit_241))
(assert (fp.isNormal lit_242))
(define-fun lit_243 () Bool (fp.leq lit_242 lit_218))
(define-fun lit_245 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.197999998927116394042968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_247 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.943000018596649169921875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_248 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_247))
(assert (fp.isNormal lit_248))
(define-fun lit_249 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_248))
(assert (fp.isNormal lit_249))
(define-fun lit_251 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.333999991416931152343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_252 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_251))
(assert (fp.isNormal lit_252))
(define-fun lit_253 () (_ FloatingPoint 8 24) (fp.add RNE lit_249 lit_252))
(assert (fp.isNormal lit_253))
(define-fun lit_255 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.173999994993209838867187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_256 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_255))
(assert (fp.isNormal lit_256))
(define-fun lit_257 () (_ FloatingPoint 8 24) (fp.add RNE lit_253 lit_256))
(assert (fp.isNormal lit_257))
(define-fun lit_259 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.722999989986419677734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_260 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_259))
(assert (fp.isNormal lit_260))
(define-fun lit_261 () (_ FloatingPoint 8 24) (fp.add RNE lit_257 lit_260))
(assert (fp.isNormal lit_261))
(define-fun lit_264 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.538999974727630615234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_265 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_264))
(assert (fp.isNormal lit_265))
(define-fun lit_266 () (_ FloatingPoint 8 24) (fp.add RNE lit_261 lit_265))
(assert (fp.isNormal lit_266))
(define-fun lit_267 () Bool (fp.leq lit_266 lit_245))
(define-fun lit_270 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.020999999716877937316894531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_273 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.360000014305114746093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_274 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_273))
(assert (fp.isNormal lit_274))
(define-fun lit_275 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_274))
(assert (fp.isNormal lit_275))
(define-fun lit_278 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.592999994754791259765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_279 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_278))
(assert (fp.isNormal lit_279))
(define-fun lit_280 () (_ FloatingPoint 8 24) (fp.add RNE lit_275 lit_279))
(assert (fp.isNormal lit_280))
(define-fun lit_283 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.643000006675720214843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_284 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_283))
(assert (fp.isNormal lit_284))
(define-fun lit_285 () (_ FloatingPoint 8 24) (fp.add RNE lit_280 lit_284))
(assert (fp.isNormal lit_285))
(define-fun lit_287 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.757000029087066650390625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_288 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_287))
(assert (fp.isNormal lit_288))
(define-fun lit_289 () (_ FloatingPoint 8 24) (fp.add RNE lit_285 lit_288))
(assert (fp.isNormal lit_289))
(define-fun lit_291 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.978999972343444824218750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_292 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_291))
(assert (fp.isNormal lit_292))
(define-fun lit_293 () (_ FloatingPoint 8 24) (fp.add RNE lit_289 lit_292))
(assert (fp.isNormal lit_293))
(define-fun lit_294 () Bool (fp.leq lit_293 lit_270))
(define-fun lit_296 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.425999999046325683593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_299 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.860000014305114746093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_300 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_299))
(assert (fp.isNormal lit_300))
(define-fun lit_301 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_300))
(assert (fp.isNormal lit_301))
(define-fun lit_304 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.542999982833862304687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_305 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_304))
(assert (fp.isNormal lit_305))
(define-fun lit_306 () (_ FloatingPoint 8 24) (fp.add RNE lit_301 lit_305))
(assert (fp.isNormal lit_306))
(define-fun lit_308 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.509999990463256835937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_309 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_308))
(assert (fp.isNormal lit_309))
(define-fun lit_310 () (_ FloatingPoint 8 24) (fp.add RNE lit_306 lit_309))
(assert (fp.isNormal lit_310))
(define-fun lit_313 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.200000002980232238769531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_314 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_313))
(assert (fp.isNormal lit_314))
(define-fun lit_315 () (_ FloatingPoint 8 24) (fp.add RNE lit_310 lit_314))
(assert (fp.isNormal lit_315))
(define-fun lit_317 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.884000003337860107421875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_318 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_317))
(assert (fp.isNormal lit_318))
(define-fun lit_319 () (_ FloatingPoint 8 24) (fp.add RNE lit_315 lit_318))
(assert (fp.isNormal lit_319))
(define-fun lit_320 () Bool (fp.leq lit_319 lit_296))
(define-fun lit_322 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.476000010967254638671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_324 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.824000000953674316406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_325 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_324))
(assert (fp.isNormal lit_325))
(define-fun lit_326 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_325))
(assert (fp.isNormal lit_326))
(define-fun lit_328 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.532000005245208740234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_329 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_328))
(assert (fp.isNormal lit_329))
(define-fun lit_330 () (_ FloatingPoint 8 24) (fp.add RNE lit_326 lit_329))
(assert (fp.isNormal lit_330))
(define-fun lit_332 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.871999979019165039062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_333 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_332))
(assert (fp.isNormal lit_333))
(define-fun lit_334 () (_ FloatingPoint 8 24) (fp.add RNE lit_330 lit_333))
(assert (fp.isNormal lit_334))
(define-fun lit_337 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.118000000715255737304687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_338 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_337))
(assert (fp.isNormal lit_338))
(define-fun lit_339 () (_ FloatingPoint 8 24) (fp.add RNE lit_334 lit_338))
(assert (fp.isNormal lit_339))
(define-fun lit_342 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.175999999046325683593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_343 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_342))
(assert (fp.isNormal lit_343))
(define-fun lit_344 () (_ FloatingPoint 8 24) (fp.add RNE lit_339 lit_343))
(assert (fp.isNormal lit_344))
(define-fun lit_345 () Bool (fp.leq lit_344 lit_322))
(define-fun lit_347 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.017999999225139617919921875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_349 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.970000028610229492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_350 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_349))
(assert (fp.isNormal lit_350))
(define-fun lit_351 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_350))
(assert (fp.isNormal lit_351))
(define-fun lit_354 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.291999995708465576171875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_355 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_354))
(assert (fp.isNormal lit_355))
(define-fun lit_356 () (_ FloatingPoint 8 24) (fp.add RNE lit_351 lit_355))
(assert (fp.isNormal lit_356))
(define-fun lit_359 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.744000017642974853515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_360 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_359))
(assert (fp.isNormal lit_360))
(define-fun lit_361 () (_ FloatingPoint 8 24) (fp.add RNE lit_356 lit_360))
(assert (fp.isNormal lit_361))
(define-fun lit_363 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.170000001788139343261718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_364 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_363))
(assert (fp.isNormal lit_364))
(define-fun lit_365 () (_ FloatingPoint 8 24) (fp.add RNE lit_361 lit_364))
(assert (fp.isNormal lit_365))
(define-fun lit_368 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.074000000953674316406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_369 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_368))
(assert (fp.isNormal lit_369))
(define-fun lit_370 () (_ FloatingPoint 8 24) (fp.add RNE lit_365 lit_369))
(assert (fp.isNormal lit_370))
(define-fun lit_371 () Bool (fp.leq lit_370 lit_347))
(define-fun lit_148 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.925000011920928955078125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_373 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.845000028610229492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_376 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.739000022411346435546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_377 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_376))
(assert (fp.isNormal lit_377))
(define-fun lit_378 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_377))
(assert (fp.isNormal lit_378))
(define-fun lit_381 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.090000003576278686523437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_382 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_381))
(assert (fp.isNormal lit_382))
(define-fun lit_383 () (_ FloatingPoint 8 24) (fp.add RNE lit_378 lit_382))
(assert (fp.isNormal lit_383))
(define-fun lit_384 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_148))
(assert (fp.isNormal lit_384))
(define-fun lit_385 () (_ FloatingPoint 8 24) (fp.add RNE lit_383 lit_384))
(assert (fp.isNormal lit_385))
(define-fun lit_387 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.193000003695487976074218750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_388 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_387))
(assert (fp.isNormal lit_388))
(define-fun lit_389 () (_ FloatingPoint 8 24) (fp.add RNE lit_385 lit_388))
(assert (fp.isNormal lit_389))
(define-fun lit_391 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.467999994754791259765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_392 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_391))
(assert (fp.isNormal lit_392))
(define-fun lit_393 () (_ FloatingPoint 8 24) (fp.add RNE lit_389 lit_392))
(assert (fp.isNormal lit_393))
(define-fun lit_394 () Bool (fp.leq lit_373 lit_393))
(define-fun lit_397 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.474000006914138793945312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_400 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.018999999389052391052246093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_401 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_400))
(assert (fp.isNormal lit_401))
(define-fun lit_402 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_401))
(assert (fp.isNormal lit_402))
(define-fun lit_404 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.111000001430511474609375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_405 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_404))
(assert (fp.isNormal lit_405))
(define-fun lit_406 () (_ FloatingPoint 8 24) (fp.add RNE lit_402 lit_405))
(assert (fp.isNormal lit_406))
(define-fun lit_409 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.776000022888183593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_410 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_409))
(assert (fp.isNormal lit_410))
(define-fun lit_411 () (_ FloatingPoint 8 24) (fp.add RNE lit_406 lit_410))
(assert (fp.isNormal lit_411))
(define-fun lit_414 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.870999991893768310546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_415 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_414))
(assert (fp.isNormal lit_415))
(define-fun lit_416 () (_ FloatingPoint 8 24) (fp.add RNE lit_411 lit_415))
(assert (fp.isNormal lit_416))
(define-fun lit_419 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.232999995350837707519531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_420 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_419))
(assert (fp.isNormal lit_420))
(define-fun lit_421 () (_ FloatingPoint 8 24) (fp.add RNE lit_416 lit_420))
(assert (fp.isNormal lit_421))
(define-fun lit_422 () Bool (fp.leq lit_421 lit_397))
(define-fun top_level_new0 () Bool (and lit_88 lit_216))
(define-fun top_level_new1 () Bool (and top_level_new0 lit_320))
(define-fun top_level_new2 () Bool (and top_level_new1 lit_190))
(define-fun top_level_new3 () Bool (and top_level_new2 lit_243))
(define-fun top_level_new4 () Bool (and top_level_new3 lit_371))
(define-fun top_level_new5 () Bool (and top_level_new4 lit_345))
(define-fun top_level_new6 () Bool (and top_level_new5 lit_166))
(define-fun top_level_new7 () Bool (and top_level_new6 lit_394))
(define-fun top_level_new8 () Bool (and top_level_new7 lit_138))
(define-fun top_level_new9 () Bool (and top_level_new8 lit_267))
(define-fun top_level_new10 () Bool (and top_level_new9 lit_25))
(define-fun top_level_new11 () Bool (and top_level_new10 lit_294))
(define-fun top_level_new12 () Bool (and top_level_new11 lit_33))
(define-fun top_level_new13 () Bool (and top_level_new12 lit_21))
(define-fun top_level_new14 () Bool (and top_level_new13 lit_17))
(define-fun top_level_new15 () Bool (and top_level_new14 lit_422))
(define-fun top_level_new16 () Bool (and top_level_new15 lit_60))
(define-fun top_level_new17 () Bool (and top_level_new16 lit_112))
(define-fun propexp () Bool (and top_level_new17 lit_29))
(assert propexp)
(check-sat)
;(get-model)
(exit)