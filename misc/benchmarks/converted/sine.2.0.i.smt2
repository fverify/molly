(declare-fun lit_x0 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x0))
(declare-fun lit_x1 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x1))
(declare-fun lit_x2 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x2))
(declare-fun lit_x3 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x3))
(declare-fun lit_x4 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x4))
(declare-fun lit_x5 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x5))
(declare-fun lit_x6 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x6))
(define-fun lit_10 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_13 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.add RNE lit_x0 const_0))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () Bool (fp.leq lit_13 lit_14))
(define-fun lit_16 () Bool (fp.leq lit_14 lit_10))
(define-fun lit_17 () Bool (and lit_15 lit_16))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.add RNE lit_x1 const_0))
(assert (fp.isNormal lit_18))
(define-fun lit_19 () Bool (fp.leq lit_13 lit_18))
(define-fun lit_20 () Bool (fp.leq lit_18 lit_10))
(define-fun lit_21 () Bool (and lit_19 lit_20))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.add RNE lit_x2 const_0))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () Bool (fp.leq lit_13 lit_22))
(define-fun lit_24 () Bool (fp.leq lit_22 lit_10))
(define-fun lit_25 () Bool (and lit_23 lit_24))
(define-fun lit_26 () (_ FloatingPoint 8 24) (fp.add RNE lit_x3 const_0))
(assert (fp.isNormal lit_26))
(define-fun lit_27 () Bool (fp.leq lit_13 lit_26))
(define-fun lit_28 () Bool (fp.leq lit_26 lit_10))
(define-fun lit_29 () Bool (and lit_27 lit_28))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.add RNE lit_x4 const_0))
(assert (fp.isNormal lit_30))
(define-fun lit_31 () Bool (fp.leq lit_13 lit_30))
(define-fun lit_32 () Bool (fp.leq lit_30 lit_10))
(define-fun lit_33 () Bool (and lit_31 lit_32))
(define-fun lit_34 () (_ FloatingPoint 8 24) (fp.add RNE lit_x5 const_0))
(assert (fp.isNormal lit_34))
(define-fun lit_35 () Bool (fp.leq lit_13 lit_34))
(define-fun lit_36 () Bool (fp.leq lit_34 lit_10))
(define-fun lit_37 () Bool (and lit_35 lit_36))
(define-fun lit_38 () (_ FloatingPoint 8 24) (fp.add RNE lit_x6 const_0))
(assert (fp.isNormal lit_38))
(define-fun lit_39 () Bool (fp.leq lit_13 lit_38))
(define-fun lit_40 () Bool (fp.leq lit_38 lit_10))
(define-fun lit_41 () Bool (and lit_39 lit_40))
(define-fun lit_12 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_48 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.578999996185302734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_51 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.587999999523162841796875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_52 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_51))
(assert (fp.isNormal lit_52))
(define-fun lit_53 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_52))
(assert (fp.isNormal lit_53))
(define-fun lit_56 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.570999979972839355468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_57 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_56))
(assert (fp.isNormal lit_57))
(define-fun lit_58 () (_ FloatingPoint 8 24) (fp.add RNE lit_53 lit_57))
(assert (fp.isNormal lit_58))
(define-fun lit_61 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.781000018119812011718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_62 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_61))
(assert (fp.isNormal lit_62))
(define-fun lit_63 () (_ FloatingPoint 8 24) (fp.add RNE lit_58 lit_62))
(assert (fp.isNormal lit_63))
(define-fun lit_65 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_66 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_65))
(assert (fp.isNormal lit_66))
(define-fun lit_67 () (_ FloatingPoint 8 24) (fp.add RNE lit_63 lit_66))
(assert (fp.isNormal lit_67))
(define-fun lit_70 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.830999970436096191406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_71 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_70))
(assert (fp.isNormal lit_71))
(define-fun lit_72 () (_ FloatingPoint 8 24) (fp.add RNE lit_67 lit_71))
(assert (fp.isNormal lit_72))
(define-fun lit_75 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.349000006914138793945312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_76 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_75))
(assert (fp.isNormal lit_76))
(define-fun lit_77 () (_ FloatingPoint 8 24) (fp.add RNE lit_72 lit_76))
(assert (fp.isNormal lit_77))
(define-fun lit_79 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.455000013113021850585937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_80 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_79))
(assert (fp.isNormal lit_80))
(define-fun lit_81 () (_ FloatingPoint 8 24) (fp.add RNE lit_77 lit_80))
(assert (fp.isNormal lit_81))
(define-fun lit_82 () Bool (fp.leq lit_48 lit_81))
(define-fun lit_84 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.419999986886978149414062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_87 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.009999999776482582092285156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_88 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_87))
(assert (fp.isNormal lit_88))
(define-fun lit_89 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_88))
(assert (fp.isNormal lit_89))
(define-fun lit_92 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.845000028610229492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_93 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_92))
(assert (fp.isNormal lit_93))
(define-fun lit_94 () (_ FloatingPoint 8 24) (fp.add RNE lit_89 lit_93))
(assert (fp.isNormal lit_94))
(define-fun lit_97 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.064999997615814208984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_98 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_97))
(assert (fp.isNormal lit_98))
(define-fun lit_99 () (_ FloatingPoint 8 24) (fp.add RNE lit_94 lit_98))
(assert (fp.isNormal lit_99))
(define-fun lit_101 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.463999986648559570312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_102 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_101))
(assert (fp.isNormal lit_102))
(define-fun lit_103 () (_ FloatingPoint 8 24) (fp.add RNE lit_99 lit_102))
(assert (fp.isNormal lit_103))
(define-fun lit_105 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.045000001788139343261718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_106 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_105))
(assert (fp.isNormal lit_106))
(define-fun lit_107 () (_ FloatingPoint 8 24) (fp.add RNE lit_103 lit_106))
(assert (fp.isNormal lit_107))
(define-fun lit_110 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.361000001430511474609375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_111 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_110))
(assert (fp.isNormal lit_111))
(define-fun lit_112 () (_ FloatingPoint 8 24) (fp.add RNE lit_107 lit_111))
(assert (fp.isNormal lit_112))
(define-fun lit_114 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.307999998331069946289062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_115 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_114))
(assert (fp.isNormal lit_115))
(define-fun lit_116 () (_ FloatingPoint 8 24) (fp.add RNE lit_112 lit_115))
(assert (fp.isNormal lit_116))
(define-fun lit_117 () Bool (fp.leq lit_84 lit_116))
(define-fun lit_120 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.660000026226043701171875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_122 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.101000003516674041748046875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_123 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_122))
(assert (fp.isNormal lit_123))
(define-fun lit_124 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_123))
(assert (fp.isNormal lit_124))
(define-fun lit_126 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.435999989509582519531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_127 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_126))
(assert (fp.isNormal lit_127))
(define-fun lit_128 () (_ FloatingPoint 8 24) (fp.add RNE lit_124 lit_127))
(assert (fp.isNormal lit_128))
(define-fun lit_130 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.275999993085861206054687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_131 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_130))
(assert (fp.isNormal lit_131))
(define-fun lit_132 () (_ FloatingPoint 8 24) (fp.add RNE lit_128 lit_131))
(assert (fp.isNormal lit_132))
(define-fun lit_134 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.072999998927116394042968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_135 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_134))
(assert (fp.isNormal lit_135))
(define-fun lit_136 () (_ FloatingPoint 8 24) (fp.add RNE lit_132 lit_135))
(assert (fp.isNormal lit_136))
(define-fun lit_138 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.326000005006790161132812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_139 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_138))
(assert (fp.isNormal lit_139))
(define-fun lit_140 () (_ FloatingPoint 8 24) (fp.add RNE lit_136 lit_139))
(assert (fp.isNormal lit_140))
(define-fun lit_143 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.451000005006790161132812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_144 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_143))
(assert (fp.isNormal lit_144))
(define-fun lit_145 () (_ FloatingPoint 8 24) (fp.add RNE lit_140 lit_144))
(assert (fp.isNormal lit_145))
(define-fun lit_148 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.698000013828277587890625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_149 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_148))
(assert (fp.isNormal lit_149))
(define-fun lit_150 () (_ FloatingPoint 8 24) (fp.add RNE lit_145 lit_149))
(assert (fp.isNormal lit_150))
(define-fun lit_151 () Bool (fp.leq lit_150 lit_120))
(define-fun lit_154 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.270000010728836059570312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_157 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.828000009059906005859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_158 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_157))
(assert (fp.isNormal lit_158))
(define-fun lit_159 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_158))
(assert (fp.isNormal lit_159))
(define-fun lit_162 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.958000004291534423828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_163 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_162))
(assert (fp.isNormal lit_163))
(define-fun lit_164 () (_ FloatingPoint 8 24) (fp.add RNE lit_159 lit_163))
(assert (fp.isNormal lit_164))
(define-fun lit_167 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.648999989032745361328125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_168 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_167))
(assert (fp.isNormal lit_168))
(define-fun lit_169 () (_ FloatingPoint 8 24) (fp.add RNE lit_164 lit_168))
(assert (fp.isNormal lit_169))
(define-fun lit_171 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.030999999493360519409179687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_172 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_171))
(assert (fp.isNormal lit_172))
(define-fun lit_173 () (_ FloatingPoint 8 24) (fp.add RNE lit_169 lit_172))
(assert (fp.isNormal lit_173))
(define-fun lit_176 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.797999978065490722656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_177 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_176))
(assert (fp.isNormal lit_177))
(define-fun lit_178 () (_ FloatingPoint 8 24) (fp.add RNE lit_173 lit_177))
(assert (fp.isNormal lit_178))
(define-fun lit_181 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.118000000715255737304687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_182 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_181))
(assert (fp.isNormal lit_182))
(define-fun lit_183 () (_ FloatingPoint 8 24) (fp.add RNE lit_178 lit_182))
(assert (fp.isNormal lit_183))
(define-fun lit_186 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.391999989748001098632812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_187 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_186))
(assert (fp.isNormal lit_187))
(define-fun lit_188 () (_ FloatingPoint 8 24) (fp.add RNE lit_183 lit_187))
(assert (fp.isNormal lit_188))
(define-fun lit_189 () Bool (fp.leq lit_188 lit_154))
(define-fun lit_191 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.838999986648559570312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_193 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.861999988555908203125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_194 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_193))
(assert (fp.isNormal lit_194))
(define-fun lit_195 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_194))
(assert (fp.isNormal lit_195))
(define-fun lit_197 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.301999986171722412109375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_198 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_197))
(assert (fp.isNormal lit_198))
(define-fun lit_199 () (_ FloatingPoint 8 24) (fp.add RNE lit_195 lit_198))
(assert (fp.isNormal lit_199))
(define-fun lit_202 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.314999997615814208984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_203 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_202))
(assert (fp.isNormal lit_203))
(define-fun lit_204 () (_ FloatingPoint 8 24) (fp.add RNE lit_199 lit_203))
(assert (fp.isNormal lit_204))
(define-fun lit_206 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.680999994277954101562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_207 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_206))
(assert (fp.isNormal lit_207))
(define-fun lit_208 () (_ FloatingPoint 8 24) (fp.add RNE lit_204 lit_207))
(assert (fp.isNormal lit_208))
(define-fun lit_210 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.564999997615814208984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_211 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_210))
(assert (fp.isNormal lit_211))
(define-fun lit_212 () (_ FloatingPoint 8 24) (fp.add RNE lit_208 lit_211))
(assert (fp.isNormal lit_212))
(define-fun lit_215 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.500999987125396728515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_216 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_215))
(assert (fp.isNormal lit_216))
(define-fun lit_217 () (_ FloatingPoint 8 24) (fp.add RNE lit_212 lit_216))
(assert (fp.isNormal lit_217))
(define-fun lit_219 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.120999999344348907470703125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_220 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_219))
(assert (fp.isNormal lit_220))
(define-fun lit_221 () (_ FloatingPoint 8 24) (fp.add RNE lit_217 lit_220))
(assert (fp.isNormal lit_221))
(define-fun lit_222 () Bool (fp.leq lit_191 lit_221))
(define-fun lit_185 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.391999989748001098632812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_225 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.586000025272369384765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_227 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.007000000216066837310791015625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_228 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_227))
(assert (fp.isNormal lit_228))
(define-fun lit_229 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_228))
(assert (fp.isNormal lit_229))
(define-fun lit_232 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.483000010251998901367187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_233 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_232))
(assert (fp.isNormal lit_233))
(define-fun lit_234 () (_ FloatingPoint 8 24) (fp.add RNE lit_229 lit_233))
(assert (fp.isNormal lit_234))
(define-fun lit_237 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.638000011444091796875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_238 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_237))
(assert (fp.isNormal lit_238))
(define-fun lit_239 () (_ FloatingPoint 8 24) (fp.add RNE lit_234 lit_238))
(assert (fp.isNormal lit_239))
(define-fun lit_242 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.210999995470046997070312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_243 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_242))
(assert (fp.isNormal lit_243))
(define-fun lit_244 () (_ FloatingPoint 8 24) (fp.add RNE lit_239 lit_243))
(assert (fp.isNormal lit_244))
(define-fun lit_245 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_185))
(assert (fp.isNormal lit_245))
(define-fun lit_246 () (_ FloatingPoint 8 24) (fp.add RNE lit_244 lit_245))
(assert (fp.isNormal lit_246))
(define-fun lit_248 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.071999996900558471679687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_249 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_248))
(assert (fp.isNormal lit_249))
(define-fun lit_250 () (_ FloatingPoint 8 24) (fp.add RNE lit_246 lit_249))
(assert (fp.isNormal lit_250))
(define-fun lit_253 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.976000010967254638671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_254 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_253))
(assert (fp.isNormal lit_254))
(define-fun lit_255 () (_ FloatingPoint 8 24) (fp.add RNE lit_250 lit_254))
(assert (fp.isNormal lit_255))
(define-fun lit_256 () Bool (fp.leq lit_225 lit_255))
(define-fun lit_259 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.063000001013278961181640625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_262 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.337000012397766113281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_263 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_262))
(assert (fp.isNormal lit_263))
(define-fun lit_264 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_263))
(assert (fp.isNormal lit_264))
(define-fun lit_266 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.330000013113021850585937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_267 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_266))
(assert (fp.isNormal lit_267))
(define-fun lit_268 () (_ FloatingPoint 8 24) (fp.add RNE lit_264 lit_267))
(assert (fp.isNormal lit_268))
(define-fun lit_270 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.312999993562698364257812500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_271 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_270))
(assert (fp.isNormal lit_271))
(define-fun lit_272 () (_ FloatingPoint 8 24) (fp.add RNE lit_268 lit_271))
(assert (fp.isNormal lit_272))
(define-fun lit_275 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.869000017642974853515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_276 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_275))
(assert (fp.isNormal lit_276))
(define-fun lit_277 () (_ FloatingPoint 8 24) (fp.add RNE lit_272 lit_276))
(assert (fp.isNormal lit_277))
(define-fun lit_279 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.732999980449676513671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_280 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_279))
(assert (fp.isNormal lit_280))
(define-fun lit_281 () (_ FloatingPoint 8 24) (fp.add RNE lit_277 lit_280))
(assert (fp.isNormal lit_281))
(define-fun lit_283 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.739000022411346435546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_284 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_283))
(assert (fp.isNormal lit_284))
(define-fun lit_285 () (_ FloatingPoint 8 24) (fp.add RNE lit_281 lit_284))
(assert (fp.isNormal lit_285))
(define-fun lit_287 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.804000020027160644531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_288 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_287))
(assert (fp.isNormal lit_288))
(define-fun lit_289 () (_ FloatingPoint 8 24) (fp.add RNE lit_285 lit_288))
(assert (fp.isNormal lit_289))
(define-fun lit_290 () Bool (fp.leq lit_259 lit_289))
(define-fun top_level_new0 () Bool (and lit_151 lit_222))
(define-fun top_level_new1 () Bool (and top_level_new0 lit_41))
(define-fun top_level_new2 () Bool (and top_level_new1 lit_82))
(define-fun top_level_new3 () Bool (and top_level_new2 lit_189))
(define-fun top_level_new4 () Bool (and top_level_new3 lit_256))
(define-fun top_level_new5 () Bool (and top_level_new4 lit_117))
(define-fun top_level_new6 () Bool (and top_level_new5 lit_37))
(define-fun top_level_new7 () Bool (and top_level_new6 lit_25))
(define-fun top_level_new8 () Bool (and top_level_new7 lit_33))
(define-fun top_level_new9 () Bool (and top_level_new8 lit_21))
(define-fun top_level_new10 () Bool (and top_level_new9 lit_17))
(define-fun top_level_new11 () Bool (and top_level_new10 lit_290))
(define-fun propexp () Bool (and top_level_new11 lit_29))
(assert propexp)
(check-sat)
;(get-model)
(exit)