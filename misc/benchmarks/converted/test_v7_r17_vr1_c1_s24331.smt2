(declare-fun lit_x0 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x0))
(declare-fun lit_x1 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x1))
(declare-fun lit_x2 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x2))
(declare-fun lit_x3 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x3))
(declare-fun lit_x4 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x4))
(declare-fun lit_x5 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x5))
(declare-fun lit_x6 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_x6))
(define-fun lit_10 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 5.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_13 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 5.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.add RNE lit_x0 const_0))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () Bool (fp.leq lit_13 lit_14))
(define-fun lit_16 () Bool (fp.leq lit_14 lit_10))
(define-fun lit_17 () Bool (and lit_15 lit_16))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.add RNE lit_x1 const_0))
(assert (fp.isNormal lit_18))
(define-fun lit_19 () Bool (fp.leq lit_13 lit_18))
(define-fun lit_20 () Bool (fp.leq lit_18 lit_10))
(define-fun lit_21 () Bool (and lit_19 lit_20))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.add RNE lit_x2 const_0))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () Bool (fp.leq lit_13 lit_22))
(define-fun lit_24 () Bool (fp.leq lit_22 lit_10))
(define-fun lit_25 () Bool (and lit_23 lit_24))
(define-fun lit_26 () (_ FloatingPoint 8 24) (fp.add RNE lit_x3 const_0))
(assert (fp.isNormal lit_26))
(define-fun lit_27 () Bool (fp.leq lit_13 lit_26))
(define-fun lit_28 () Bool (fp.leq lit_26 lit_10))
(define-fun lit_29 () Bool (and lit_27 lit_28))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.add RNE lit_x4 const_0))
(assert (fp.isNormal lit_30))
(define-fun lit_31 () Bool (fp.leq lit_13 lit_30))
(define-fun lit_32 () Bool (fp.leq lit_30 lit_10))
(define-fun lit_33 () Bool (and lit_31 lit_32))
(define-fun lit_34 () (_ FloatingPoint 8 24) (fp.add RNE lit_x5 const_0))
(assert (fp.isNormal lit_34))
(define-fun lit_35 () Bool (fp.leq lit_13 lit_34))
(define-fun lit_36 () Bool (fp.leq lit_34 lit_10))
(define-fun lit_37 () Bool (and lit_35 lit_36))
(define-fun lit_38 () (_ FloatingPoint 8 24) (fp.add RNE lit_x6 const_0))
(assert (fp.isNormal lit_38))
(define-fun lit_39 () Bool (fp.leq lit_13 lit_38))
(define-fun lit_40 () Bool (fp.leq lit_38 lit_10))
(define-fun lit_41 () Bool (and lit_39 lit_40))
(define-fun lit_12 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_48 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.118000000715255737304687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_51 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.672999978065490722656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_52 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_51))
(assert (fp.isNormal lit_52))
(define-fun lit_53 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_52))
(assert (fp.isNormal lit_53))
(define-fun lit_56 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.833000004291534423828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_57 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_56))
(assert (fp.isNormal lit_57))
(define-fun lit_58 () (_ FloatingPoint 8 24) (fp.add RNE lit_53 lit_57))
(assert (fp.isNormal lit_58))
(define-fun lit_60 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.683000028133392333984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_61 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_60))
(assert (fp.isNormal lit_61))
(define-fun lit_62 () (_ FloatingPoint 8 24) (fp.add RNE lit_58 lit_61))
(assert (fp.isNormal lit_62))
(define-fun lit_64 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.739000022411346435546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_65 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_64))
(assert (fp.isNormal lit_65))
(define-fun lit_66 () (_ FloatingPoint 8 24) (fp.add RNE lit_62 lit_65))
(assert (fp.isNormal lit_66))
(define-fun lit_68 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.876999974250793457031250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_69 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_68))
(assert (fp.isNormal lit_69))
(define-fun lit_70 () (_ FloatingPoint 8 24) (fp.add RNE lit_66 lit_69))
(assert (fp.isNormal lit_70))
(define-fun lit_72 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.259999990463256835937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_73 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_72))
(assert (fp.isNormal lit_73))
(define-fun lit_74 () (_ FloatingPoint 8 24) (fp.add RNE lit_70 lit_73))
(assert (fp.isNormal lit_74))
(define-fun lit_77 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.257999986410140991210937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_78 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_77))
(assert (fp.isNormal lit_78))
(define-fun lit_79 () (_ FloatingPoint 8 24) (fp.add RNE lit_74 lit_78))
(assert (fp.isNormal lit_79))
(define-fun lit_80 () Bool (fp.leq lit_48 lit_79))
(define-fun lit_82 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.453000009059906005859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_83 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.739000022411346435546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_84 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_83))
(assert (fp.isNormal lit_84))
(define-fun lit_85 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_84))
(assert (fp.isNormal lit_85))
(define-fun lit_88 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.469999998807907104492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_89 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_88))
(assert (fp.isNormal lit_89))
(define-fun lit_90 () (_ FloatingPoint 8 24) (fp.add RNE lit_85 lit_89))
(assert (fp.isNormal lit_90))
(define-fun lit_92 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.004999999888241291046142578125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_93 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_92))
(assert (fp.isNormal lit_93))
(define-fun lit_94 () (_ FloatingPoint 8 24) (fp.add RNE lit_90 lit_93))
(assert (fp.isNormal lit_94))
(define-fun lit_97 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.671000003814697265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_98 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_97))
(assert (fp.isNormal lit_98))
(define-fun lit_99 () (_ FloatingPoint 8 24) (fp.add RNE lit_94 lit_98))
(assert (fp.isNormal lit_99))
(define-fun lit_102 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.379999995231628417968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_103 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_102))
(assert (fp.isNormal lit_103))
(define-fun lit_104 () (_ FloatingPoint 8 24) (fp.add RNE lit_99 lit_103))
(assert (fp.isNormal lit_104))
(define-fun lit_106 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.731999993324279785156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_107 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_106))
(assert (fp.isNormal lit_107))
(define-fun lit_108 () (_ FloatingPoint 8 24) (fp.add RNE lit_104 lit_107))
(assert (fp.isNormal lit_108))
(define-fun lit_110 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.057000000029802322387695312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_111 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_110))
(assert (fp.isNormal lit_111))
(define-fun lit_112 () (_ FloatingPoint 8 24) (fp.add RNE lit_108 lit_111))
(assert (fp.isNormal lit_112))
(define-fun lit_113 () Bool (fp.leq lit_82 lit_112))
(define-fun lit_50 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.672999978065490722656250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_116 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.902000010013580322265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_118 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.423000007867813110351562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_119 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_118))
(assert (fp.isNormal lit_119))
(define-fun lit_120 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_119))
(assert (fp.isNormal lit_120))
(define-fun lit_122 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.995999991893768310546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_123 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_122))
(assert (fp.isNormal lit_123))
(define-fun lit_124 () (_ FloatingPoint 8 24) (fp.add RNE lit_120 lit_123))
(assert (fp.isNormal lit_124))
(define-fun lit_127 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.142000004649162292480468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_128 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_127))
(assert (fp.isNormal lit_128))
(define-fun lit_129 () (_ FloatingPoint 8 24) (fp.add RNE lit_124 lit_128))
(assert (fp.isNormal lit_129))
(define-fun lit_132 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.822000026702880859375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_133 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_132))
(assert (fp.isNormal lit_133))
(define-fun lit_134 () (_ FloatingPoint 8 24) (fp.add RNE lit_129 lit_133))
(assert (fp.isNormal lit_134))
(define-fun lit_136 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.836000025272369384765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_137 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_136))
(assert (fp.isNormal lit_137))
(define-fun lit_138 () (_ FloatingPoint 8 24) (fp.add RNE lit_134 lit_137))
(assert (fp.isNormal lit_138))
(define-fun lit_141 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.082000002264976501464843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_142 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_141))
(assert (fp.isNormal lit_142))
(define-fun lit_143 () (_ FloatingPoint 8 24) (fp.add RNE lit_138 lit_142))
(assert (fp.isNormal lit_143))
(define-fun lit_144 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_50))
(assert (fp.isNormal lit_144))
(define-fun lit_145 () (_ FloatingPoint 8 24) (fp.add RNE lit_143 lit_144))
(assert (fp.isNormal lit_145))
(define-fun lit_146 () Bool (fp.leq lit_116 lit_145))
(define-fun lit_148 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.853999972343444824218750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_150 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.940999984741210937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_151 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_150))
(assert (fp.isNormal lit_151))
(define-fun lit_152 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_151))
(assert (fp.isNormal lit_152))
(define-fun lit_155 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.435999989509582519531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_156 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_155))
(assert (fp.isNormal lit_156))
(define-fun lit_157 () (_ FloatingPoint 8 24) (fp.add RNE lit_152 lit_156))
(assert (fp.isNormal lit_157))
(define-fun lit_159 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.079000003635883331298828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_160 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_159))
(assert (fp.isNormal lit_160))
(define-fun lit_161 () (_ FloatingPoint 8 24) (fp.add RNE lit_157 lit_160))
(assert (fp.isNormal lit_161))
(define-fun lit_164 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.460000008344650268554687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_165 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_164))
(assert (fp.isNormal lit_165))
(define-fun lit_166 () (_ FloatingPoint 8 24) (fp.add RNE lit_161 lit_165))
(assert (fp.isNormal lit_166))
(define-fun lit_169 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.981999993324279785156250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_170 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_169))
(assert (fp.isNormal lit_170))
(define-fun lit_171 () (_ FloatingPoint 8 24) (fp.add RNE lit_166 lit_170))
(assert (fp.isNormal lit_171))
(define-fun lit_173 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.537000000476837158203125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_174 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_173))
(assert (fp.isNormal lit_174))
(define-fun lit_175 () (_ FloatingPoint 8 24) (fp.add RNE lit_171 lit_174))
(assert (fp.isNormal lit_175))
(define-fun lit_178 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.216000005602836608886718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_179 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_178))
(assert (fp.isNormal lit_179))
(define-fun lit_180 () (_ FloatingPoint 8 24) (fp.add RNE lit_175 lit_179))
(assert (fp.isNormal lit_180))
(define-fun lit_181 () Bool (fp.leq lit_180 lit_148))
(define-fun lit_183 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.970000028610229492187500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_185 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.639999985694885253906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_186 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_185))
(assert (fp.isNormal lit_186))
(define-fun lit_187 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_186))
(assert (fp.isNormal lit_187))
(define-fun lit_189 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.662000000476837158203125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_190 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_189))
(assert (fp.isNormal lit_190))
(define-fun lit_191 () (_ FloatingPoint 8 24) (fp.add RNE lit_187 lit_190))
(assert (fp.isNormal lit_191))
(define-fun lit_193 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.616999983787536621093750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_194 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_193))
(assert (fp.isNormal lit_194))
(define-fun lit_195 () (_ FloatingPoint 8 24) (fp.add RNE lit_191 lit_194))
(assert (fp.isNormal lit_195))
(define-fun lit_198 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.185000002384185791015625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_199 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_198))
(assert (fp.isNormal lit_199))
(define-fun lit_200 () (_ FloatingPoint 8 24) (fp.add RNE lit_195 lit_199))
(assert (fp.isNormal lit_200))
(define-fun lit_203 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.230000004172325134277343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_204 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_203))
(assert (fp.isNormal lit_204))
(define-fun lit_205 () (_ FloatingPoint 8 24) (fp.add RNE lit_200 lit_204))
(assert (fp.isNormal lit_205))
(define-fun lit_208 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.563000023365020751953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_209 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_208))
(assert (fp.isNormal lit_209))
(define-fun lit_210 () (_ FloatingPoint 8 24) (fp.add RNE lit_205 lit_209))
(assert (fp.isNormal lit_210))
(define-fun lit_213 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.938000023365020751953125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_214 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_213))
(assert (fp.isNormal lit_214))
(define-fun lit_215 () (_ FloatingPoint 8 24) (fp.add RNE lit_210 lit_214))
(assert (fp.isNormal lit_215))
(define-fun lit_216 () Bool (fp.leq lit_215 lit_183))
(define-fun lit_218 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.500999987125396728515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_220 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.614000022411346435546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_221 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_220))
(assert (fp.isNormal lit_221))
(define-fun lit_222 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_221))
(assert (fp.isNormal lit_222))
(define-fun lit_223 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_213))
(assert (fp.isNormal lit_223))
(define-fun lit_224 () (_ FloatingPoint 8 24) (fp.add RNE lit_222 lit_223))
(assert (fp.isNormal lit_224))
(define-fun lit_226 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.116999998688697814941406250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_227 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_226))
(assert (fp.isNormal lit_227))
(define-fun lit_228 () (_ FloatingPoint 8 24) (fp.add RNE lit_224 lit_227))
(assert (fp.isNormal lit_228))
(define-fun lit_230 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.879999995231628417968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_231 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_230))
(assert (fp.isNormal lit_231))
(define-fun lit_232 () (_ FloatingPoint 8 24) (fp.add RNE lit_228 lit_231))
(assert (fp.isNormal lit_232))
(define-fun lit_234 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.708000004291534423828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_235 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_234))
(assert (fp.isNormal lit_235))
(define-fun lit_236 () (_ FloatingPoint 8 24) (fp.add RNE lit_232 lit_235))
(assert (fp.isNormal lit_236))
(define-fun lit_238 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.716000020503997802734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_239 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_238))
(assert (fp.isNormal lit_239))
(define-fun lit_240 () (_ FloatingPoint 8 24) (fp.add RNE lit_236 lit_239))
(assert (fp.isNormal lit_240))
(define-fun lit_243 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.560000002384185791015625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_244 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_243))
(assert (fp.isNormal lit_244))
(define-fun lit_245 () (_ FloatingPoint 8 24) (fp.add RNE lit_240 lit_244))
(assert (fp.isNormal lit_245))
(define-fun lit_246 () Bool (fp.leq lit_245 lit_218))
(define-fun lit_249 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.039999999105930328369140625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_252 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.338999986648559570312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_253 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_252))
(assert (fp.isNormal lit_253))
(define-fun lit_254 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_253))
(assert (fp.isNormal lit_254))
(define-fun lit_257 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.082999996840953826904296875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_258 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_257))
(assert (fp.isNormal lit_258))
(define-fun lit_259 () (_ FloatingPoint 8 24) (fp.add RNE lit_254 lit_258))
(assert (fp.isNormal lit_259))
(define-fun lit_260 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_220))
(assert (fp.isNormal lit_260))
(define-fun lit_261 () (_ FloatingPoint 8 24) (fp.add RNE lit_259 lit_260))
(assert (fp.isNormal lit_261))
(define-fun lit_263 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.439000010490417480468750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_264 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_263))
(assert (fp.isNormal lit_264))
(define-fun lit_265 () (_ FloatingPoint 8 24) (fp.add RNE lit_261 lit_264))
(assert (fp.isNormal lit_265))
(define-fun lit_268 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.027000000700354576110839843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_269 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_268))
(assert (fp.isNormal lit_269))
(define-fun lit_270 () (_ FloatingPoint 8 24) (fp.add RNE lit_265 lit_269))
(assert (fp.isNormal lit_270))
(define-fun lit_272 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.533999979496002197265625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_273 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_272))
(assert (fp.isNormal lit_273))
(define-fun lit_274 () (_ FloatingPoint 8 24) (fp.add RNE lit_270 lit_273))
(assert (fp.isNormal lit_274))
(define-fun lit_275 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.057000000029802322387695312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_276 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_275))
(assert (fp.isNormal lit_276))
(define-fun lit_277 () (_ FloatingPoint 8 24) (fp.add RNE lit_274 lit_276))
(assert (fp.isNormal lit_277))
(define-fun lit_278 () Bool (fp.leq lit_249 lit_277))
(define-fun lit_281 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.462000012397766113281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_283 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.948000013828277587890625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_284 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_283))
(assert (fp.isNormal lit_284))
(define-fun lit_285 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_284))
(assert (fp.isNormal lit_285))
(define-fun lit_286 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.716000020503997802734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_287 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_286))
(assert (fp.isNormal lit_287))
(define-fun lit_288 () (_ FloatingPoint 8 24) (fp.add RNE lit_285 lit_287))
(assert (fp.isNormal lit_288))
(define-fun lit_291 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.823000013828277587890625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_292 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_291))
(assert (fp.isNormal lit_292))
(define-fun lit_293 () (_ FloatingPoint 8 24) (fp.add RNE lit_288 lit_292))
(assert (fp.isNormal lit_293))
(define-fun lit_296 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.898999989032745361328125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_297 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_296))
(assert (fp.isNormal lit_297))
(define-fun lit_298 () (_ FloatingPoint 8 24) (fp.add RNE lit_293 lit_297))
(assert (fp.isNormal lit_298))
(define-fun lit_301 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.522000014781951904296875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_302 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_301))
(assert (fp.isNormal lit_302))
(define-fun lit_303 () (_ FloatingPoint 8 24) (fp.add RNE lit_298 lit_302))
(assert (fp.isNormal lit_303))
(define-fun lit_305 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.838999986648559570312500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_306 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_305))
(assert (fp.isNormal lit_306))
(define-fun lit_307 () (_ FloatingPoint 8 24) (fp.add RNE lit_303 lit_306))
(assert (fp.isNormal lit_307))
(define-fun lit_309 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.890999972820281982421875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_310 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_309))
(assert (fp.isNormal lit_310))
(define-fun lit_311 () (_ FloatingPoint 8 24) (fp.add RNE lit_307 lit_310))
(assert (fp.isNormal lit_311))
(define-fun lit_312 () Bool (fp.leq lit_281 lit_311))
(define-fun lit_315 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.182999998331069946289062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_318 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.601000010967254638671875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_319 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_318))
(assert (fp.isNormal lit_319))
(define-fun lit_320 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_319))
(assert (fp.isNormal lit_320))
(define-fun lit_322 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.722000002861022949218750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_323 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_322))
(assert (fp.isNormal lit_323))
(define-fun lit_324 () (_ FloatingPoint 8 24) (fp.add RNE lit_320 lit_323))
(assert (fp.isNormal lit_324))
(define-fun lit_326 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.367000013589859008789062500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_327 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_326))
(assert (fp.isNormal lit_327))
(define-fun lit_328 () (_ FloatingPoint 8 24) (fp.add RNE lit_324 lit_327))
(assert (fp.isNormal lit_328))
(define-fun lit_331 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.172000005841255187988281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_332 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_331))
(assert (fp.isNormal lit_332))
(define-fun lit_333 () (_ FloatingPoint 8 24) (fp.add RNE lit_328 lit_332))
(assert (fp.isNormal lit_333))
(define-fun lit_335 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.370999991893768310546875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_336 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_335))
(assert (fp.isNormal lit_336))
(define-fun lit_337 () (_ FloatingPoint 8 24) (fp.add RNE lit_333 lit_336))
(assert (fp.isNormal lit_337))
(define-fun lit_339 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.967000007629394531250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_340 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_339))
(assert (fp.isNormal lit_340))
(define-fun lit_341 () (_ FloatingPoint 8 24) (fp.add RNE lit_337 lit_340))
(assert (fp.isNormal lit_341))
(define-fun lit_344 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.314999997615814208984375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_345 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_344))
(assert (fp.isNormal lit_345))
(define-fun lit_346 () (_ FloatingPoint 8 24) (fp.add RNE lit_341 lit_345))
(assert (fp.isNormal lit_346))
(define-fun lit_347 () Bool (fp.leq lit_315 lit_346))
(define-fun lit_163 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.460000008344650268554687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_295 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.898999989032745361328125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_350 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.931999981403350830078125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_353 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.384000003337860107421875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_354 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_353))
(assert (fp.isNormal lit_354))
(define-fun lit_355 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_354))
(assert (fp.isNormal lit_355))
(define-fun lit_356 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_163))
(assert (fp.isNormal lit_356))
(define-fun lit_357 () (_ FloatingPoint 8 24) (fp.add RNE lit_355 lit_356))
(assert (fp.isNormal lit_357))
(define-fun lit_359 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.873000025749206542968750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_360 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_359))
(assert (fp.isNormal lit_360))
(define-fun lit_361 () (_ FloatingPoint 8 24) (fp.add RNE lit_357 lit_360))
(assert (fp.isNormal lit_361))
(define-fun lit_363 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.510999977588653564453125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_364 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_363))
(assert (fp.isNormal lit_364))
(define-fun lit_365 () (_ FloatingPoint 8 24) (fp.add RNE lit_361 lit_364))
(assert (fp.isNormal lit_365))
(define-fun lit_366 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_295))
(assert (fp.isNormal lit_366))
(define-fun lit_367 () (_ FloatingPoint 8 24) (fp.add RNE lit_365 lit_366))
(assert (fp.isNormal lit_367))
(define-fun lit_370 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.455000013113021850585937500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_371 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_370))
(assert (fp.isNormal lit_371))
(define-fun lit_372 () (_ FloatingPoint 8 24) (fp.add RNE lit_367 lit_371))
(assert (fp.isNormal lit_372))
(define-fun lit_374 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.128000006079673767089843750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_375 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_374))
(assert (fp.isNormal lit_375))
(define-fun lit_376 () (_ FloatingPoint 8 24) (fp.add RNE lit_372 lit_375))
(assert (fp.isNormal lit_376))
(define-fun lit_377 () Bool (fp.leq lit_350 lit_376))
(define-fun lit_379 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.837000012397766113281250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_381 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.652999997138977050781250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_382 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_381))
(assert (fp.isNormal lit_382))
(define-fun lit_383 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_382))
(assert (fp.isNormal lit_383))
(define-fun lit_385 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.039000000804662704467773437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_386 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_385))
(assert (fp.isNormal lit_386))
(define-fun lit_387 () (_ FloatingPoint 8 24) (fp.add RNE lit_383 lit_386))
(assert (fp.isNormal lit_387))
(define-fun lit_390 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.722999989986419677734375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_391 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_390))
(assert (fp.isNormal lit_391))
(define-fun lit_392 () (_ FloatingPoint 8 24) (fp.add RNE lit_387 lit_391))
(assert (fp.isNormal lit_392))
(define-fun lit_395 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.592999994754791259765625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_396 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_395))
(assert (fp.isNormal lit_396))
(define-fun lit_397 () (_ FloatingPoint 8 24) (fp.add RNE lit_392 lit_396))
(assert (fp.isNormal lit_397))
(define-fun lit_399 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.375999987125396728515625000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_400 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_399))
(assert (fp.isNormal lit_400))
(define-fun lit_401 () (_ FloatingPoint 8 24) (fp.add RNE lit_397 lit_400))
(assert (fp.isNormal lit_401))
(define-fun lit_404 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.486000001430511474609375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_405 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_404))
(assert (fp.isNormal lit_405))
(define-fun lit_406 () (_ FloatingPoint 8 24) (fp.add RNE lit_401 lit_405))
(assert (fp.isNormal lit_406))
(define-fun lit_408 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.544000029563903808593750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_409 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_408))
(assert (fp.isNormal lit_409))
(define-fun lit_410 () (_ FloatingPoint 8 24) (fp.add RNE lit_406 lit_409))
(assert (fp.isNormal lit_410))
(define-fun lit_411 () Bool (fp.leq lit_410 lit_379))
(define-fun lit_414 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.389999985694885253906250000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_417 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.248999997973442077636718750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_418 () (_ FloatingPoint 8 24) (fp.mul RNE lit_14 lit_417))
(assert (fp.isNormal lit_418))
(define-fun lit_419 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 lit_418))
(assert (fp.isNormal lit_419))
(define-fun lit_422 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.768999993801116943359375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_423 () (_ FloatingPoint 8 24) (fp.mul RNE lit_18 lit_422))
(assert (fp.isNormal lit_423))
(define-fun lit_424 () (_ FloatingPoint 8 24) (fp.add RNE lit_419 lit_423))
(assert (fp.isNormal lit_424))
(define-fun lit_427 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.305999994277954101562500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_428 () (_ FloatingPoint 8 24) (fp.mul RNE lit_22 lit_427))
(assert (fp.isNormal lit_428))
(define-fun lit_429 () (_ FloatingPoint 8 24) (fp.add RNE lit_424 lit_428))
(assert (fp.isNormal lit_429))
(define-fun lit_432 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.583000004291534423828125000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_433 () (_ FloatingPoint 8 24) (fp.mul RNE lit_26 lit_432))
(assert (fp.isNormal lit_433))
(define-fun lit_434 () (_ FloatingPoint 8 24) (fp.add RNE lit_429 lit_433))
(assert (fp.isNormal lit_434))
(define-fun lit_437 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 0.497999995946884155273437500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_438 () (_ FloatingPoint 8 24) (fp.mul RNE lit_30 lit_437))
(assert (fp.isNormal lit_438))
(define-fun lit_439 () (_ FloatingPoint 8 24) (fp.add RNE lit_434 lit_438))
(assert (fp.isNormal lit_439))
(define-fun lit_441 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.059000000357627868652343750000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_442 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_441))
(assert (fp.isNormal lit_442))
(define-fun lit_443 () (_ FloatingPoint 8 24) (fp.add RNE lit_439 lit_442))
(assert (fp.isNormal lit_443))
(define-fun lit_445 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.792999982833862304687500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_446 () (_ FloatingPoint 8 24) (fp.mul RNE lit_38 lit_445))
(assert (fp.isNormal lit_446))
(define-fun lit_447 () (_ FloatingPoint 8 24) (fp.add RNE lit_443 lit_446))
(assert (fp.isNormal lit_447))
(define-fun lit_448 () Bool (fp.leq lit_414 lit_447))
(define-fun top_level_new0 () Bool (and lit_216 lit_312))
(define-fun top_level_new1 () Bool (and top_level_new0 lit_41))
(define-fun top_level_new2 () Bool (and top_level_new1 lit_146))
(define-fun top_level_new3 () Bool (and top_level_new2 lit_80))
(define-fun top_level_new4 () Bool (and top_level_new3 lit_377))
(define-fun top_level_new5 () Bool (and top_level_new4 lit_246))
(define-fun top_level_new6 () Bool (and top_level_new5 lit_448))
(define-fun top_level_new7 () Bool (and top_level_new6 lit_37))
(define-fun top_level_new8 () Bool (and top_level_new7 lit_25))
(define-fun top_level_new9 () Bool (and top_level_new8 lit_347))
(define-fun top_level_new10 () Bool (and top_level_new9 lit_33))
(define-fun top_level_new11 () Bool (and top_level_new10 lit_21))
(define-fun top_level_new12 () Bool (and top_level_new11 lit_17))
(define-fun top_level_new13 () Bool (and top_level_new12 lit_278))
(define-fun top_level_new14 () Bool (and top_level_new13 lit_411))
(define-fun top_level_new15 () Bool (and top_level_new14 lit_113))
(define-fun top_level_new16 () Bool (and top_level_new15 lit_181))
(define-fun propexp () Bool (and top_level_new16 lit_29))
(assert propexp)
(check-sat)
;(get-model)
(exit)