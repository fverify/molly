(declare-fun lit_b181 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b181))
(declare-fun lit_b45 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b45))
(declare-fun lit_b36 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b36))
(declare-fun lit_b188 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b188))
(declare-fun lit_b129 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b129))
(declare-fun lit_b55 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b55))
(declare-fun lit_b77 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b77))
(declare-fun lit_b202 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b202))
(declare-fun lit_b68 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b68))
(declare-fun lit_b186 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b186))
(declare-fun lit_b126 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b126))
(declare-fun lit_b38 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b38))
(declare-fun lit_b197 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b197))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_9 () (_ FloatingPoint 8 24) (fp.add RNE lit_b36 const_0))
(assert (fp.isNormal lit_9))
(define-fun lit_10 () (_ FloatingPoint 8 24) (fp.mul RNE lit_9 lit_9))
(assert (fp.isNormal lit_10))
(define-fun lit_const_minus_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_11 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_10))
(assert (fp.isNormal lit_11))
(define-fun lit_12 () (_ FloatingPoint 8 24) (fp.mul RNE lit_9 lit_11))
(assert (fp.isNormal lit_12))
(define-fun lit_13 () (_ FloatingPoint 8 24) (fp.add RNE lit_12 const_0))
(assert (fp.isNormal lit_13))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.add RNE lit_b55 const_0))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () (_ FloatingPoint 8 24) (fp.div RNE lit_13 lit_14))
(assert (fp.isNormal lit_15))
(define-fun lit_16 () (_ FloatingPoint 8 24) (fp.add RNE lit_15 const_0))
(assert (fp.isNormal lit_16))
(define-fun lit_17 () (_ FloatingPoint 8 24) (fp.add RNE lit_b202 const_0))
(assert (fp.isNormal lit_17))
(define-fun lit_18 () Bool (fp.eq lit_16 lit_17))
(define-fun lit_19 () Bool (not lit_18))
(define-fun lit_20 () (_ FloatingPoint 8 24) (fp.mul RNE lit_11 lit_16))
(assert (fp.isNormal lit_20))
(define-fun lit_21 () (_ FloatingPoint 8 24) (fp.add RNE lit_20 const_0))
(assert (fp.isNormal lit_21))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.add RNE lit_b77 const_0))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () (_ FloatingPoint 8 24) (fp.div RNE lit_21 lit_22))
(assert (fp.isNormal lit_23))
(define-fun lit_24 () (_ FloatingPoint 8 24) (fp.add RNE lit_23 const_0))
(assert (fp.isNormal lit_24))
(define-fun lit_25 () (_ FloatingPoint 8 24) (fp.add RNE lit_b197 const_0))
(assert (fp.isNormal lit_25))
(define-fun lit_26 () Bool (fp.eq lit_24 lit_25))
(define-fun lit_27 () Bool (not lit_26))
(define-fun lit_28 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_16))
(assert (fp.isNormal lit_28))
(define-fun lit_29 () (_ FloatingPoint 8 24) (fp.add RNE lit_24 lit_28))
(assert (fp.isNormal lit_29))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.add RNE lit_b186 const_0))
(assert (fp.isNormal lit_30))
(define-fun lit_31 () Bool (fp.eq lit_29 lit_30))
(define-fun lit_32 () Bool (not lit_31))
(define-fun lit_33 () (_ FloatingPoint 8 24) (fp.add RNE lit_b188 const_0))
(assert (fp.isNormal lit_33))
(define-fun lit_34 () Bool (fp.eq lit_30 lit_33))
(define-fun lit_35 () Bool (not lit_34))
(define-fun lit_36 () (_ FloatingPoint 8 24) (fp.add RNE lit_b181 const_0))
(assert (fp.isNormal lit_36))
(define-fun lit_37 () Bool (fp.eq lit_9 lit_36))
(define-fun lit_38 () Bool (not lit_37))
(define-fun lit_39 () (_ FloatingPoint 8 24) (fp.add RNE lit_b38 const_0))
(assert (fp.isNormal lit_39))
(define-fun lit_40 () Bool (fp.leq lit_39 lit_9))
(define-fun lit_41 () Bool (not lit_40))
(define-fun lit_42 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_9))
(assert (fp.isNormal lit_42))
(define-fun lit_43 () Bool (fp.eq lit_36 lit_42))
(define-fun lit_44 () Bool (and lit_41 lit_43))
(define-fun lit_45 () Bool (and lit_38 lit_44))
(define-fun lit_46 () Bool (fp.leq lit_39 lit_30))
(define-fun lit_47 () Bool (not lit_46))
(define-fun lit_48 () Bool (and lit_45 lit_47))
(define-fun lit_49 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_30))
(assert (fp.isNormal lit_49))
(define-fun lit_50 () Bool (fp.eq lit_33 lit_49))
(define-fun lit_51 () Bool (and lit_48 lit_50))
(define-fun lit_52 () Bool (and lit_35 lit_51))
(define-fun lit_53 () (_ FloatingPoint 8 24) (fp.add RNE lit_17 const_0))
(assert (fp.isNormal lit_53))
(define-fun lit_54 () (_ FloatingPoint 8 24) (fp.add RNE lit_b68 const_0))
(assert (fp.isNormal lit_54))
(define-fun lit_55 () Bool (fp.leq lit_54 lit_53))
(define-fun lit_56 () Bool (not lit_55))
(define-fun lit_57 () Bool (and lit_52 lit_56))
(define-fun lit_58 () Bool (fp.eq lit_28 lit_30))
(define-fun lit_59 () Bool (and lit_57 lit_58))
(define-fun lit_60 () (_ FloatingPoint 8 24) (fp.add RNE lit_b45 const_0))
(assert (fp.isNormal lit_60))
(define-fun lit_61 () Bool (fp.leq lit_33 lit_60))
(define-fun lit_62 () Bool (not lit_61))
(define-fun lit_63 () Bool (and lit_59 lit_62))
(define-fun lit_64 () (_ FloatingPoint 8 24) (fp.add RNE lit_b129 const_0))
(assert (fp.isNormal lit_64))
(define-fun lit_65 () Bool (fp.leq lit_36 lit_64))
(define-fun lit_66 () Bool (and lit_63 lit_65))
(define-fun lit_67 () (_ FloatingPoint 8 24) (fp.add RNE lit_b126 const_0))
(assert (fp.isNormal lit_67))
(define-fun lit_68 () Bool (fp.leq lit_67 lit_9))
(define-fun lit_69 () Bool (and lit_66 lit_68))
(define-fun lit_70 () Bool (fp.leq lit_9 lit_64))
(define-fun lit_71 () Bool (and lit_69 lit_70))
(define-fun lit_72 () Bool (and lit_32 lit_71))
(define-fun lit_73 () Bool (fp.leq lit_39 lit_24))
(define-fun lit_74 () Bool (not lit_73))
(define-fun lit_75 () Bool (and lit_72 lit_74))
(define-fun lit_76 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_24))
(assert (fp.isNormal lit_76))
(define-fun lit_77 () Bool (fp.eq lit_25 lit_76))
(define-fun lit_78 () Bool (and lit_75 lit_77))
(define-fun lit_79 () Bool (and lit_27 lit_78))
(define-fun lit_80 () Bool (fp.leq lit_39 lit_16))
(define-fun lit_81 () Bool (not lit_80))
(define-fun lit_82 () Bool (and lit_79 lit_81))
(define-fun lit_83 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_16))
(assert (fp.isNormal lit_83))
(define-fun lit_84 () Bool (fp.eq lit_17 lit_83))
(define-fun lit_85 () Bool (and lit_82 lit_84))
(define-fun lit_86 () (_ FloatingPoint 8 24) (fp.add RNE lit_25 const_0))
(assert (fp.isNormal lit_86))
(define-fun lit_87 () Bool (fp.leq lit_54 lit_86))
(define-fun lit_88 () Bool (not lit_87))
(define-fun lit_89 () Bool (and lit_85 lit_88))
(define-fun lit_90 () Bool (and lit_19 lit_89))
(define-fun const_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun const_2 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 2.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun prop_1 () Bool (fp.lt const_1 const_2))
(define-fun propexp () Bool (and lit_90 prop_1))
(assert propexp)
(check-sat)
;(get-model)
(exit)