(declare-fun lit_b39 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b39))
(declare-fun lit_b46 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b46))
(declare-fun lit_b44 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b44))
(declare-fun lit_b55 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b55))
(declare-fun lit_b106 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b106))
(declare-fun lit_b189 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b189))
(declare-fun lit_b116 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b116))
(declare-fun lit_b174 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b174))
(declare-fun lit_b179 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b179))
(declare-fun lit_b41 () (_ FloatingPoint 8 24))
(assert (fp.isNormal lit_b41))
(define-fun const_0 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 0.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun lit_9 () (_ FloatingPoint 8 24) (fp.add RNE lit_b39 const_0))
(assert (fp.isNormal lit_9))
(define-fun lit_10 () (_ FloatingPoint 8 24) (fp.add RNE lit_b41 const_0))
(assert (fp.isNormal lit_10))
(define-fun lit_11 () (_ FloatingPoint 8 24) (fp.div RNE lit_9 lit_10))
(assert (fp.isNormal lit_11))
(define-fun lit_12 () (_ FloatingPoint 8 24) (fp.add RNE lit_11 const_0))
(assert (fp.isNormal lit_12))
(define-fun lit_13 () (_ FloatingPoint 8 24) (fp.add RNE lit_b55 const_0))
(assert (fp.isNormal lit_13))
(define-fun lit_14 () (_ FloatingPoint 8 24) (fp.mul RNE lit_12 lit_13))
(assert (fp.isNormal lit_14))
(define-fun lit_15 () (_ FloatingPoint 8 24) (fp.mul RNE lit_11 lit_11))
(assert (fp.isNormal lit_15))
(define-fun lit_const_minus_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN (- 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000)))
(define-fun lit_16 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_15))
(assert (fp.isNormal lit_16))
(define-fun lit_17 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_16))
(assert (fp.isNormal lit_17))
(define-fun lit_18 () (_ FloatingPoint 8 24) (fp.add RNE lit_17 const_0))
(assert (fp.isNormal lit_18))
(define-fun lit_19 () (_ FloatingPoint 8 24) (fp.div RNE lit_18 lit_14))
(assert (fp.isNormal lit_19))
(define-fun lit_20 () (_ FloatingPoint 8 24) (fp.add RNE lit_19 const_0))
(assert (fp.isNormal lit_20))
(define-fun lit_21 () (_ FloatingPoint 8 24) (fp.add RNE lit_11 lit_20))
(assert (fp.isNormal lit_21))
(define-fun lit_22 () (_ FloatingPoint 8 24) (fp.mul RNE lit_21 lit_21))
(assert (fp.isNormal lit_22))
(define-fun lit_23 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_22))
(assert (fp.isNormal lit_23))
(define-fun lit_24 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_23))
(assert (fp.isNormal lit_24))
(define-fun lit_25 () (_ FloatingPoint 8 24) (fp.add RNE lit_24 const_0))
(assert (fp.isNormal lit_25))
(define-fun lit_26 () (_ FloatingPoint 8 24) (fp.add RNE lit_25 const_0))
(assert (fp.isNormal lit_26))
(define-fun lit_27 () (_ FloatingPoint 8 24) (fp.add RNE lit_b189 const_0))
(assert (fp.isNormal lit_27))
(define-fun lit_28 () Bool (fp.eq lit_26 lit_27))
(define-fun lit_29 () Bool (not lit_28))
(define-fun lit_30 () (_ FloatingPoint 8 24) (fp.add RNE lit_21 const_0))
(assert (fp.isNormal lit_30))
(define-fun lit_31 () (_ FloatingPoint 8 24) (fp.mul RNE lit_13 lit_30))
(assert (fp.isNormal lit_31))
(define-fun lit_32 () (_ FloatingPoint 8 24) (fp.div RNE lit_25 lit_31))
(assert (fp.isNormal lit_32))
(define-fun lit_33 () (_ FloatingPoint 8 24) (fp.add RNE lit_32 const_0))
(assert (fp.isNormal lit_33))
(define-fun lit_34 () (_ FloatingPoint 8 24) (fp.add RNE lit_21 lit_33))
(assert (fp.isNormal lit_34))
(define-fun lit_35 () (_ FloatingPoint 8 24) (fp.mul RNE lit_34 lit_34))
(assert (fp.isNormal lit_35))
(define-fun lit_36 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_35))
(assert (fp.isNormal lit_36))
(define-fun lit_37 () (_ FloatingPoint 8 24) (fp.add RNE lit_9 lit_36))
(assert (fp.isNormal lit_37))
(define-fun lit_38 () (_ FloatingPoint 8 24) (fp.add RNE lit_37 const_0))
(assert (fp.isNormal lit_38))
(define-fun lit_39 () (_ FloatingPoint 8 24) (fp.add RNE lit_38 const_0))
(assert (fp.isNormal lit_39))
(define-fun lit_40 () (_ FloatingPoint 8 24) (fp.add RNE lit_b179 const_0))
(assert (fp.isNormal lit_40))
(define-fun lit_41 () Bool (fp.eq lit_39 lit_40))
(define-fun lit_42 () Bool (not lit_41))
(define-fun lit_43 () (_ FloatingPoint 8 24) (fp.add RNE lit_b106 const_0))
(assert (fp.isNormal lit_43))
(define-fun lit_44 () (_ FloatingPoint 8 24) (fp.add RNE lit_43 const_0))
(assert (fp.isNormal lit_44))
(define-fun lit_45 () (_ FloatingPoint 8 24) (fp.add RNE lit_b174 const_0))
(assert (fp.isNormal lit_45))
(define-fun lit_46 () Bool (fp.eq lit_44 lit_45))
(define-fun lit_47 () Bool (not lit_46))
(define-fun lit_48 () (_ FloatingPoint 8 24) (fp.add RNE lit_b46 const_0))
(assert (fp.isNormal lit_48))
(define-fun lit_49 () Bool (fp.eq lit_9 lit_48))
(define-fun lit_50 () Bool (not lit_49))
(define-fun lit_51 () Bool (fp.leq lit_48 lit_9))
(define-fun lit_52 () Bool (and lit_50 lit_51))
(define-fun lit_53 () Bool (fp.leq lit_48 lit_44))
(define-fun lit_54 () Bool (not lit_53))
(define-fun lit_55 () Bool (and lit_52 lit_54))
(define-fun lit_56 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_44))
(assert (fp.isNormal lit_56))
(define-fun lit_57 () Bool (fp.eq lit_45 lit_56))
(define-fun lit_58 () Bool (and lit_55 lit_57))
(define-fun lit_59 () Bool (and lit_47 lit_58))
(define-fun lit_60 () Bool (fp.leq lit_48 lit_39))
(define-fun lit_61 () Bool (not lit_60))
(define-fun lit_62 () Bool (and lit_59 lit_61))
(define-fun lit_63 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_39))
(assert (fp.isNormal lit_63))
(define-fun lit_64 () Bool (fp.eq lit_40 lit_63))
(define-fun lit_65 () Bool (and lit_62 lit_64))
(define-fun lit_66 () Bool (and lit_42 lit_65))
(define-fun lit_67 () (_ FloatingPoint 8 24) (fp.add RNE lit_27 const_0))
(assert (fp.isNormal lit_67))
(define-fun lit_68 () (_ FloatingPoint 8 24) (fp.add RNE lit_b44 const_0))
(assert (fp.isNormal lit_68))
(define-fun lit_69 () Bool (fp.leq lit_67 lit_68))
(define-fun lit_70 () Bool (not lit_69))
(define-fun lit_71 () Bool (and lit_66 lit_70))
(define-fun lit_72 () Bool (fp.leq lit_48 lit_26))
(define-fun lit_73 () Bool (not lit_72))
(define-fun lit_74 () Bool (and lit_71 lit_73))
(define-fun lit_75 () (_ FloatingPoint 8 24) (fp.mul RNE lit_const_minus_1 lit_26))
(assert (fp.isNormal lit_75))
(define-fun lit_76 () Bool (fp.eq lit_27 lit_75))
(define-fun lit_77 () Bool (and lit_74 lit_76))
(define-fun lit_78 () (_ FloatingPoint 8 24) (fp.add RNE lit_b116 const_0))
(assert (fp.isNormal lit_78))
(define-fun lit_79 () Bool (fp.leq lit_45 lit_78))
(define-fun lit_80 () Bool (not lit_79))
(define-fun lit_81 () Bool (and lit_77 lit_80))
(define-fun lit_82 () Bool (and lit_29 lit_81))
(define-fun const_1 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 1.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun const_2 () (_ FloatingPoint 8 24) ((_ to_fp 8 24) RTN 2.000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000))
(define-fun prop_1 () Bool (fp.lt const_1 const_2))
(define-fun propexp () Bool (and lit_82 prop_1))
(assert propexp)
(check-sat)
;(get-model)
(exit)